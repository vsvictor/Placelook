//
// COPYRIGHT Â© 2024 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master
// Agreement (MA) and is bound by the terms and conditions
// of that agreement.
//
// You may redistribute and use this code without modification,
// provided you adhere to the terms and conditions of the MA
// and include this copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Department
// 380 New York Street
// Redlands, California 92373
// USA
//
// email: legal@esri.com
//

// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;
import 'runtimecore_bindings_generated.dart' as imp1;

/// Bindings for `ArcGISMapsBindings`.
class ArcGISMapsBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  ArcGISMapsBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  ArcGISMapsBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int InitDartApiDL(
    ffi.Pointer<ffi.Void> data,
  ) {
    return _InitDartApiDL(
      data,
    );
  }

  late final _InitDartApiDLPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>(
          'InitDartApiDL');
  late final _InitDartApiDL =
      _InitDartApiDLPtr.asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void InitCallbackManager(
    int asynchronousPort,
    int synchronousPort,
    ffi.Pointer<ffi.Void> relayUserData,
  ) {
    return _InitCallbackManager(
      asynchronousPort,
      synchronousPort,
      relayUserData,
    );
  }

  late final _InitCallbackManagerPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(Dart_Port, Dart_Port,
              ffi.Pointer<ffi.Void>)>>('InitCallbackManager');
  late final _InitCallbackManager = _InitCallbackManagerPtr.asFunction<
      void Function(int, int, ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Char> BundlePath() {
    return _BundlePath();
  }

  late final _BundlePathPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'BundlePath');
  late final _BundlePath =
      _BundlePathPtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  void nativeFree(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _nativeFree(
      ptr,
    );
  }

  late final _nativeFreePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'nativeFree');
  late final _nativeFree =
      _nativeFreePtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<imp1.RT_ByteArray> mallocByteArray(
    int size,
  ) {
    return _mallocByteArray(
      size,
    );
  }

  late final _mallocByteArrayPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<imp1.RT_ByteArray> Function(ffi.Int)>>(
      'mallocByteArray');
  late final _mallocByteArray = _mallocByteArrayPtr
      .asFunction<ffi.Pointer<imp1.RT_ByteArray> Function(int)>();

  void freeByteArray(
    ffi.Pointer<imp1.RT_ByteArray> byteArray,
  ) {
    return _freeByteArray(
      byteArray,
    );
  }

  late final _freeByteArrayPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<imp1.RT_ByteArray>)>>('freeByteArray');
  late final _freeByteArray = _freeByteArrayPtr
      .asFunction<void Function(ffi.Pointer<imp1.RT_ByteArray>)>();

  void syncErrorFn(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ErrorHandle errorHandle,
  ) {
    return _syncErrorFn(
      userData,
      errorHandle,
    );
  }

  late final _syncErrorFnPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>>('syncErrorFn');
  late final _syncErrorFn = _syncErrorFnPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>();

  imp1.RT_ErrorHandle fetchSyncError(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _fetchSyncError(
      userData,
    );
  }

  late final _fetchSyncErrorPtr = _lookup<
          ffi
          .NativeFunction<imp1.RT_ErrorHandle Function(ffi.Pointer<ffi.Void>)>>(
      'fetchSyncError');
  late final _fetchSyncError = _fetchSyncErrorPtr
      .asFunction<imp1.RT_ErrorHandle Function(ffi.Pointer<ffi.Void>)>();

  void asyncArcGISCredentialStoreAllCredentialsRemovedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncArcGISCredentialStoreAllCredentialsRemovedEvent(
      userData,
    );
  }

  late final _asyncArcGISCredentialStoreAllCredentialsRemovedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncArcGISCredentialStoreAllCredentialsRemovedEvent');
  late final _asyncArcGISCredentialStoreAllCredentialsRemovedEvent =
      _asyncArcGISCredentialStoreAllCredentialsRemovedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncArcGISCredentialStoreCredentialAddedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ArcGISCredentialHandle arcGISCredential,
    imp1.RT_StringHandle URL,
  ) {
    return _asyncArcGISCredentialStoreCredentialAddedEvent(
      userData,
      arcGISCredential,
      URL,
    );
  }

  late final _asyncArcGISCredentialStoreCredentialAddedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISCredentialHandle, imp1.RT_StringHandle)>>(
      'asyncArcGISCredentialStoreCredentialAddedEvent');
  late final _asyncArcGISCredentialStoreCredentialAddedEvent =
      _asyncArcGISCredentialStoreCredentialAddedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_ArcGISCredentialHandle,
              imp1.RT_StringHandle)>();

  void asyncArcGISCredentialStoreCredentialRemovedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ArcGISCredentialHandle arcGISCredential,
    imp1.RT_StringHandle URL,
  ) {
    return _asyncArcGISCredentialStoreCredentialRemovedEvent(
      userData,
      arcGISCredential,
      URL,
    );
  }

  late final _asyncArcGISCredentialStoreCredentialRemovedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISCredentialHandle, imp1.RT_StringHandle)>>(
      'asyncArcGISCredentialStoreCredentialRemovedEvent');
  late final _asyncArcGISCredentialStoreCredentialRemovedEvent =
      _asyncArcGISCredentialStoreCredentialRemovedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_ArcGISCredentialHandle,
              imp1.RT_StringHandle)>();

  void asyncArcGISCredentialStoreCredentialUpdatedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ArcGISCredentialHandle arcGISCredential,
    imp1.RT_StringHandle URL,
  ) {
    return _asyncArcGISCredentialStoreCredentialUpdatedEvent(
      userData,
      arcGISCredential,
      URL,
    );
  }

  late final _asyncArcGISCredentialStoreCredentialUpdatedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISCredentialHandle, imp1.RT_StringHandle)>>(
      'asyncArcGISCredentialStoreCredentialUpdatedEvent');
  late final _asyncArcGISCredentialStoreCredentialUpdatedEvent =
      _asyncArcGISCredentialStoreCredentialUpdatedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_ArcGISCredentialHandle,
              imp1.RT_StringHandle)>();

  void asyncArcGISRuntimeEnvironmentErrorEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ErrorHandle error,
  ) {
    return _asyncArcGISRuntimeEnvironmentErrorEvent(
      userData,
      error,
    );
  }

  late final _asyncArcGISRuntimeEnvironmentErrorEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_ErrorHandle)>>('asyncArcGISRuntimeEnvironmentErrorEvent');
  late final _asyncArcGISRuntimeEnvironmentErrorEvent =
      _asyncArcGISRuntimeEnvironmentErrorEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>();

  void asyncObservableArrayElementAddedEvent(
    ffi.Pointer<ffi.Void> userData,
    int position,
    imp1.RT_ElementHandle element,
  ) {
    return _asyncObservableArrayElementAddedEvent(
      userData,
      position,
      element,
    );
  }

  late final _asyncObservableArrayElementAddedEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Size,
              imp1.RT_ElementHandle)>>('asyncObservableArrayElementAddedEvent');
  late final _asyncObservableArrayElementAddedEvent =
      _asyncObservableArrayElementAddedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, imp1.RT_ElementHandle)>();

  void asyncObservableArrayElementRemovedEvent(
    ffi.Pointer<ffi.Void> userData,
    int position,
    imp1.RT_ElementHandle element,
  ) {
    return _asyncObservableArrayElementRemovedEvent(
      userData,
      position,
      element,
    );
  }

  late final _asyncObservableArrayElementRemovedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, ffi.Size, imp1.RT_ElementHandle)>>(
      'asyncObservableArrayElementRemovedEvent');
  late final _asyncObservableArrayElementRemovedEvent =
      _asyncObservableArrayElementRemovedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, imp1.RT_ElementHandle)>();

  void asyncAuthenticationManagerIssuedChallengeEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ArcGISAuthenticationChallengeHandle authenticationChallenge,
  ) {
    return _asyncAuthenticationManagerIssuedChallengeEvent(
      userData,
      authenticationChallenge,
    );
  }

  late final _asyncAuthenticationManagerIssuedChallengeEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISAuthenticationChallengeHandle)>>(
      'asyncAuthenticationManagerIssuedChallengeEvent');
  late final _asyncAuthenticationManagerIssuedChallengeEvent =
      _asyncAuthenticationManagerIssuedChallengeEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_ArcGISAuthenticationChallengeHandle)>();

  void asyncAuthenticationManagerOAuthUserLoginEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_OAuthUserLoginPromptHandle OAuthUserLoginPrompt,
  ) {
    return _asyncAuthenticationManagerOAuthUserLoginEvent(
      userData,
      OAuthUserLoginPrompt,
    );
  }

  late final _asyncAuthenticationManagerOAuthUserLoginEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, imp1.RT_OAuthUserLoginPromptHandle)>>(
      'asyncAuthenticationManagerOAuthUserLoginEvent');
  late final _asyncAuthenticationManagerOAuthUserLoginEvent =
      _asyncAuthenticationManagerOAuthUserLoginEventPtr.asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, imp1.RT_OAuthUserLoginPromptHandle)>();

  void asyncAuthenticationManagerPortalNetworkSecuredInquiryEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_PortalNetworkSecuredInquiryHandle portalNetworkSecuredInquiry,
  ) {
    return _asyncAuthenticationManagerPortalNetworkSecuredInquiryEvent(
      userData,
      portalNetworkSecuredInquiry,
    );
  }

  late final _asyncAuthenticationManagerPortalNetworkSecuredInquiryEventPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      imp1.RT_PortalNetworkSecuredInquiryHandle)>>(
          'asyncAuthenticationManagerPortalNetworkSecuredInquiryEvent');
  late final _asyncAuthenticationManagerPortalNetworkSecuredInquiryEvent =
      _asyncAuthenticationManagerPortalNetworkSecuredInquiryEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_PortalNetworkSecuredInquiryHandle)>();

  void asyncClientReferenceReleaseEvent(
    ffi.Pointer<ffi.Void> userData,
    ffi.Pointer<ffi.Void> clientData,
  ) {
    return _asyncClientReferenceReleaseEvent(
      userData,
      clientData,
    );
  }

  late final _asyncClientReferenceReleaseEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>>('asyncClientReferenceReleaseEvent');
  late final _asyncClientReferenceReleaseEvent =
      _asyncClientReferenceReleaseEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEvent(
      userData,
    );
  }

  late final _asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEvent');
  late final _asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEvent =
      _asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEvent(
      userData,
    );
  }

  late final _asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEvent');
  late final _asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEvent =
      _asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncFeatureChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    int changeType,
  ) {
    return _asyncFeatureChangedEvent(
      userData,
      changeType,
    );
  }

  late final _asyncFeatureChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'asyncFeatureChangedEvent');
  late final _asyncFeatureChangedEvent = _asyncFeatureChangedEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  void asyncGeoModelBasemapChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_BasemapHandle oldBasemap,
  ) {
    return _asyncGeoModelBasemapChangedEvent(
      userData,
      oldBasemap,
    );
  }

  late final _asyncGeoModelBasemapChangedEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_BasemapHandle)>>('asyncGeoModelBasemapChangedEvent');
  late final _asyncGeoModelBasemapChangedEvent =
      _asyncGeoModelBasemapChangedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_BasemapHandle)>();

  void asyncGeoViewAttributionChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncGeoViewAttributionChangedEvent(
      userData,
    );
  }

  late final _asyncGeoViewAttributionChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncGeoViewAttributionChangedEvent');
  late final _asyncGeoViewAttributionChangedEvent =
      _asyncGeoViewAttributionChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncGeoViewDrawRequestedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncGeoViewDrawRequestedEvent(
      userData,
    );
  }

  late final _asyncGeoViewDrawRequestedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncGeoViewDrawRequestedEvent');
  late final _asyncGeoViewDrawRequestedEvent =
      _asyncGeoViewDrawRequestedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncGeoViewDrawStatusChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    int status,
  ) {
    return _asyncGeoViewDrawStatusChangedEvent(
      userData,
      status,
    );
  }

  late final _asyncGeoViewDrawStatusChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'asyncGeoViewDrawStatusChangedEvent');
  late final _asyncGeoViewDrawStatusChangedEvent =
      _asyncGeoViewDrawStatusChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  void asyncGeoViewLayerViewStateChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_LayerHandle layer,
    imp1.RT_LayerViewStateHandle layerViewState,
  ) {
    return _asyncGeoViewLayerViewStateChangedEvent(
      userData,
      layer,
      layerViewState,
    );
  }

  late final _asyncGeoViewLayerViewStateChangedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_LayerHandle,
                  imp1.RT_LayerViewStateHandle)>>(
      'asyncGeoViewLayerViewStateChangedEvent');
  late final _asyncGeoViewLayerViewStateChangedEvent =
      _asyncGeoViewLayerViewStateChangedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_LayerHandle,
              imp1.RT_LayerViewStateHandle)>();

  void asyncGeoViewNavigationChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    bool isNavigating,
  ) {
    return _asyncGeoViewNavigationChangedEvent(
      userData,
      isNavigating,
    );
  }

  late final _asyncGeoViewNavigationChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>(
      'asyncGeoViewNavigationChangedEvent');
  late final _asyncGeoViewNavigationChangedEvent =
      _asyncGeoViewNavigationChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, bool)>();

  void asyncGeoViewSpatialReferenceChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncGeoViewSpatialReferenceChangedEvent(
      userData,
    );
  }

  late final _asyncGeoViewSpatialReferenceChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncGeoViewSpatialReferenceChangedEvent');
  late final _asyncGeoViewSpatialReferenceChangedEvent =
      _asyncGeoViewSpatialReferenceChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncGeoViewTimeExtentChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncGeoViewTimeExtentChangedEvent(
      userData,
    );
  }

  late final _asyncGeoViewTimeExtentChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncGeoViewTimeExtentChangedEvent');
  late final _asyncGeoViewTimeExtentChangedEvent =
      _asyncGeoViewTimeExtentChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncGeoViewViewpointChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncGeoViewViewpointChangedEvent(
      userData,
    );
  }

  late final _asyncGeoViewViewpointChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncGeoViewViewpointChangedEvent');
  late final _asyncGeoViewViewpointChangedEvent =
      _asyncGeoViewViewpointChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncGeodatabaseTransactionStatusChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    bool inTransaction,
  ) {
    return _asyncGeodatabaseTransactionStatusChangedEvent(
      userData,
      inTransaction,
    );
  }

  late final _asyncGeodatabaseTransactionStatusChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>(
      'asyncGeodatabaseTransactionStatusChangedEvent');
  late final _asyncGeodatabaseTransactionStatusChangedEvent =
      _asyncGeodatabaseTransactionStatusChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, bool)>();

  void asyncJobJobDoneEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncJobJobDoneEvent(
      userData,
    );
  }

  late final _asyncJobJobDoneEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncJobJobDoneEvent');
  late final _asyncJobJobDoneEvent = _asyncJobJobDoneEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncJobMessageAddedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_JobMessageHandle message,
  ) {
    return _asyncJobMessageAddedEvent(
      userData,
      message,
    );
  }

  late final _asyncJobMessageAddedEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_JobMessageHandle)>>('asyncJobMessageAddedEvent');
  late final _asyncJobMessageAddedEvent =
      _asyncJobMessageAddedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_JobMessageHandle)>();

  void asyncJobProgressChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncJobProgressChangedEvent(
      userData,
    );
  }

  late final _asyncJobProgressChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncJobProgressChangedEvent');
  late final _asyncJobProgressChangedEvent = _asyncJobProgressChangedEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncJobStatusChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    int status,
  ) {
    return _asyncJobStatusChangedEvent(
      userData,
      status,
    );
  }

  late final _asyncJobStatusChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'asyncJobStatusChangedEvent');
  late final _asyncJobStatusChangedEvent = _asyncJobStatusChangedEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  void asyncLayerContentSubLayerContentChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncLayerContentSubLayerContentChangedEvent(
      userData,
    );
  }

  late final _asyncLayerContentSubLayerContentChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncLayerContentSubLayerContentChangedEvent');
  late final _asyncLayerContentSubLayerContentChangedEvent =
      _asyncLayerContentSubLayerContentChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncLayerVisibilityChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    bool layerVisibility,
  ) {
    return _asyncLayerVisibilityChangedEvent(
      userData,
      layerVisibility,
    );
  }

  late final _asyncLayerVisibilityChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>(
      'asyncLayerVisibilityChangedEvent');
  late final _asyncLayerVisibilityChangedEvent =
      _asyncLayerVisibilityChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, bool)>();

  void asyncLayerTileEvent_cancelTileRequest(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_TileKeyHandle tileKey,
  ) {
    return _asyncLayerTileEvent_cancelTileRequest(
      userData,
      tileKey,
    );
  }

  late final _asyncLayerTileEvent_cancelTileRequestPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_TileKeyHandle)>>('asyncLayerTileEvent_cancelTileRequest');
  late final _asyncLayerTileEvent_cancelTileRequest =
      _asyncLayerTileEvent_cancelTileRequestPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_TileKeyHandle)>();

  void asyncLayerTileEvent_tileRequest(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_TileKeyHandle tileKey,
  ) {
    return _asyncLayerTileEvent_tileRequest(
      userData,
      tileKey,
    );
  }

  late final _asyncLayerTileEvent_tileRequestPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_TileKeyHandle)>>('asyncLayerTileEvent_tileRequest');
  late final _asyncLayerTileEvent_tileRequest =
      _asyncLayerTileEvent_tileRequestPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_TileKeyHandle)>();

  void asyncLoadableDoneLoadingEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ErrorHandle loadError,
  ) {
    return _asyncLoadableDoneLoadingEvent(
      userData,
      loadError,
    );
  }

  late final _asyncLoadableDoneLoadingEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_ErrorHandle)>>('asyncLoadableDoneLoadingEvent');
  late final _asyncLoadableDoneLoadingEvent = _asyncLoadableDoneLoadingEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>();

  void asyncLoadableLoadStatusChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    int loadStatus,
  ) {
    return _asyncLoadableLoadStatusChangedEvent(
      userData,
      loadStatus,
    );
  }

  late final _asyncLoadableLoadStatusChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'asyncLoadableLoadStatusChangedEvent');
  late final _asyncLoadableLoadStatusChangedEvent =
      _asyncLoadableLoadStatusChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  void asyncLocationDataSourceErrorChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ErrorHandle error,
  ) {
    return _asyncLocationDataSourceErrorChangedEvent(
      userData,
      error,
    );
  }

  late final _asyncLocationDataSourceErrorChangedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>>(
      'asyncLocationDataSourceErrorChangedEvent');
  late final _asyncLocationDataSourceErrorChangedEvent =
      _asyncLocationDataSourceErrorChangedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>();

  void asyncLocationDataSourceHeadingChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    double heading,
  ) {
    return _asyncLocationDataSourceHeadingChangedEvent(
      userData,
      heading,
    );
  }

  late final _asyncLocationDataSourceHeadingChangedEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              ffi.Double)>>('asyncLocationDataSourceHeadingChangedEvent');
  late final _asyncLocationDataSourceHeadingChangedEvent =
      _asyncLocationDataSourceHeadingChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, double)>();

  void asyncLocationDataSourceLocationChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_LocationHandle location,
  ) {
    return _asyncLocationDataSourceLocationChangedEvent(
      userData,
      location,
    );
  }

  late final _asyncLocationDataSourceLocationChangedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, imp1.RT_LocationHandle)>>(
      'asyncLocationDataSourceLocationChangedEvent');
  late final _asyncLocationDataSourceLocationChangedEvent =
      _asyncLocationDataSourceLocationChangedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_LocationHandle)>();

  void asyncLocationDataSourceStartCallbackEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncLocationDataSourceStartCallbackEvent(
      userData,
    );
  }

  late final _asyncLocationDataSourceStartCallbackEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncLocationDataSourceStartCallbackEvent');
  late final _asyncLocationDataSourceStartCallbackEvent =
      _asyncLocationDataSourceStartCallbackEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncLocationDataSourceStatusChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    int status,
  ) {
    return _asyncLocationDataSourceStatusChangedEvent(
      userData,
      status,
    );
  }

  late final _asyncLocationDataSourceStatusChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'asyncLocationDataSourceStatusChangedEvent');
  late final _asyncLocationDataSourceStatusChangedEvent =
      _asyncLocationDataSourceStatusChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  void asyncLocationDataSourceStopCallbackEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncLocationDataSourceStopCallbackEvent(
      userData,
    );
  }

  late final _asyncLocationDataSourceStopCallbackEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncLocationDataSourceStopCallbackEvent');
  late final _asyncLocationDataSourceStopCallbackEvent =
      _asyncLocationDataSourceStopCallbackEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncLocationDisplayAutoPanModeChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    int panMode,
  ) {
    return _asyncLocationDisplayAutoPanModeChangedEvent(
      userData,
      panMode,
    );
  }

  late final _asyncLocationDisplayAutoPanModeChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'asyncLocationDisplayAutoPanModeChangedEvent');
  late final _asyncLocationDisplayAutoPanModeChangedEvent =
      _asyncLocationDisplayAutoPanModeChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  void asyncLocationDisplayLocationChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_LocationHandle location,
  ) {
    return _asyncLocationDisplayLocationChangedEvent(
      userData,
      location,
    );
  }

  late final _asyncLocationDisplayLocationChangedEventPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, imp1.RT_LocationHandle)>>(
      'asyncLocationDisplayLocationChangedEvent');
  late final _asyncLocationDisplayLocationChangedEvent =
      _asyncLocationDisplayLocationChangedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_LocationHandle)>();

  void asyncLocationDisplayStatusChangedEvent(
    ffi.Pointer<ffi.Void> userData,
    bool status,
  ) {
    return _asyncLocationDisplayStatusChangedEvent(
      userData,
      status,
    );
  }

  late final _asyncLocationDisplayStatusChangedEventPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>(
      'asyncLocationDisplayStatusChangedEvent');
  late final _asyncLocationDisplayStatusChangedEvent =
      _asyncLocationDisplayStatusChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>, bool)>();

  void asyncMapViewRotationChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncMapViewRotationChangedEvent(
      userData,
    );
  }

  late final _asyncMapViewRotationChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncMapViewRotationChangedEvent');
  late final _asyncMapViewRotationChangedEvent =
      _asyncMapViewRotationChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncMapViewScaleChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncMapViewScaleChangedEvent(
      userData,
    );
  }

  late final _asyncMapViewScaleChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncMapViewScaleChangedEvent');
  late final _asyncMapViewScaleChangedEvent = _asyncMapViewScaleChangedEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEvent(
      userData,
    );
  }

  late final _asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEvent');
  late final _asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEvent =
      _asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncPortalInfoEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncPortalInfoEvent(
      userData,
    );
  }

  late final _asyncPortalInfoEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncPortalInfoEvent');
  late final _asyncPortalInfoEvent = _asyncPortalInfoEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncRequestCancelRequestEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncRequestCancelRequestEvent(
      userData,
    );
  }

  late final _asyncRequestCancelRequestEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncRequestCancelRequestEvent');
  late final _asyncRequestCancelRequestEvent =
      _asyncRequestCancelRequestEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncRequestRequestRequiredEvent(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_RequestHandle request,
  ) {
    return _asyncRequestRequestRequiredEvent(
      userData,
      request,
    );
  }

  late final _asyncRequestRequestRequiredEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              imp1.RT_RequestHandle)>>('asyncRequestRequestRequiredEvent');
  late final _asyncRequestRequestRequiredEvent =
      _asyncRequestRequestRequiredEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_RequestHandle)>();

  void asyncFutureCompletedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncFutureCompletedEvent(
      userData,
    );
  }

  late final _asyncFutureCompletedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncFutureCompletedEvent');
  late final _asyncFutureCompletedEvent = _asyncFutureCompletedEventPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncTimeAwareFullTimeExtentChangedEvent(
    ffi.Pointer<ffi.Void> userData,
  ) {
    return _asyncTimeAwareFullTimeExtentChangedEvent(
      userData,
    );
  }

  late final _asyncTimeAwareFullTimeExtentChangedEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'asyncTimeAwareFullTimeExtentChangedEvent');
  late final _asyncTimeAwareFullTimeExtentChangedEvent =
      _asyncTimeAwareFullTimeExtentChangedEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void asyncMutableArrayElementAddedEvent(
    ffi.Pointer<ffi.Void> userData,
    int position,
    imp1.RT_ElementHandle element,
  ) {
    return _asyncMutableArrayElementAddedEvent(
      userData,
      position,
      element,
    );
  }

  late final _asyncMutableArrayElementAddedEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Size,
              imp1.RT_ElementHandle)>>('asyncMutableArrayElementAddedEvent');
  late final _asyncMutableArrayElementAddedEvent =
      _asyncMutableArrayElementAddedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, imp1.RT_ElementHandle)>();

  void asyncMutableArrayElementRemovedEvent(
    ffi.Pointer<ffi.Void> userData,
    int position,
    imp1.RT_ElementHandle element,
  ) {
    return _asyncMutableArrayElementRemovedEvent(
      userData,
      position,
      element,
    );
  }

  late final _asyncMutableArrayElementRemovedEventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Size,
              imp1.RT_ElementHandle)>>('asyncMutableArrayElementRemovedEvent');
  late final _asyncMutableArrayElementRemovedEvent =
      _asyncMutableArrayElementRemovedEventPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, imp1.RT_ElementHandle)>();

  ffi.Pointer<ffi.Char> buildLabel() {
    return _buildLabel();
  }

  late final _buildLabelPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'buildLabel');
  late final _buildLabel =
      _buildLabelPtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  void setTrackingEnabled(
    bool trackingEnabled,
  ) {
    return _setTrackingEnabled(
      trackingEnabled,
    );
  }

  late final _setTrackingEnabledPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Bool)>>(
          'setTrackingEnabled');
  late final _setTrackingEnabled =
      _setTrackingEnabledPtr.asFunction<void Function(bool)>();

  bool trackingEnabled() {
    return _trackingEnabled();
  }

  late final _trackingEnabledPtr =
      _lookup<ffi.NativeFunction<ffi.Bool Function()>>('trackingEnabled');
  late final _trackingEnabled =
      _trackingEnabledPtr.asFunction<bool Function()>();

  int trackedCount(
    int trackedHandleType,
  ) {
    return _trackedCount(
      trackedHandleType,
    );
  }

  late final _trackedCountPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Int32)>>('trackedCount');
  late final _trackedCount = _trackedCountPtr.asFunction<int Function(int)>();

  void AddRastersParameters_created(
    RT_AddRastersParametersHandle handle,
  ) {
    return _AddRastersParameters_created(
      handle,
    );
  }

  late final _AddRastersParameters_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_AddRastersParametersHandle)>>(
      'AddRastersParameters_created');
  late final _AddRastersParameters_created = _AddRastersParameters_createdPtr
      .asFunction<void Function(RT_AddRastersParametersHandle)>();

  void AddRastersParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AddRastersParameters_destroy(
      handle,
    );
  }

  late final _AddRastersParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AddRastersParameters_destroy');
  late final _AddRastersParameters_destroy = _AddRastersParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void AdvancedQueryCapabilities_created(
    imp1.RT_AdvancedQueryCapabilitiesHandle handle,
  ) {
    return _AdvancedQueryCapabilities_created(
      handle,
    );
  }

  late final _AdvancedQueryCapabilities_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_AdvancedQueryCapabilitiesHandle)>>(
      'AdvancedQueryCapabilities_created');
  late final _AdvancedQueryCapabilities_created =
      _AdvancedQueryCapabilities_createdPtr.asFunction<
          void Function(imp1.RT_AdvancedQueryCapabilitiesHandle)>();

  void AdvancedQueryCapabilities_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AdvancedQueryCapabilities_destroy(
      handle,
    );
  }

  late final _AdvancedQueryCapabilities_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AdvancedQueryCapabilities_destroy');
  late final _AdvancedQueryCapabilities_destroy =
      _AdvancedQueryCapabilities_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void AggregateField_created(
    imp1.RT_AggregateFieldHandle handle,
  ) {
    return _AggregateField_created(
      handle,
    );
  }

  late final _AggregateField_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_AggregateFieldHandle)>>(
      'AggregateField_created');
  late final _AggregateField_created = _AggregateField_createdPtr.asFunction<
      void Function(imp1.RT_AggregateFieldHandle)>();

  void AggregateField_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AggregateField_destroy(
      handle,
    );
  }

  late final _AggregateField_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AggregateField_destroy');
  late final _AggregateField_destroy = _AggregateField_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void AggregateGeoElement_created(
    imp1.RT_AggregateGeoElementHandle handle,
  ) {
    return _AggregateGeoElement_created(
      handle,
    );
  }

  late final _AggregateGeoElement_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_AggregateGeoElementHandle)>>(
      'AggregateGeoElement_created');
  late final _AggregateGeoElement_created = _AggregateGeoElement_createdPtr
      .asFunction<void Function(imp1.RT_AggregateGeoElementHandle)>();

  void AggregateGeoElement_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AggregateGeoElement_destroy(
      handle,
    );
  }

  late final _AggregateGeoElement_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AggregateGeoElement_destroy');
  late final _AggregateGeoElement_destroy = _AggregateGeoElement_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void AnalysisOverlay_created(
    imp1.RT_AnalysisOverlayHandle handle,
  ) {
    return _AnalysisOverlay_created(
      handle,
    );
  }

  late final _AnalysisOverlay_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_AnalysisOverlayHandle)>>(
      'AnalysisOverlay_created');
  late final _AnalysisOverlay_created = _AnalysisOverlay_createdPtr.asFunction<
      void Function(imp1.RT_AnalysisOverlayHandle)>();

  void AnalysisOverlay_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AnalysisOverlay_destroy(
      handle,
    );
  }

  late final _AnalysisOverlay_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AnalysisOverlay_destroy');
  late final _AnalysisOverlay_destroy = _AnalysisOverlay_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void AnalysisOverlay_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AnalysisOverlay_destroyInstance(
      handle,
    );
  }

  late final _AnalysisOverlay_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AnalysisOverlay_destroyInstance');
  late final _AnalysisOverlay_destroyInstance =
      _AnalysisOverlay_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Analysis_created(
    imp1.RT_AnalysisHandle handle,
  ) {
    return _Analysis_created(
      handle,
    );
  }

  late final _Analysis_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_AnalysisHandle)>>(
          'Analysis_created');
  late final _Analysis_created =
      _Analysis_createdPtr.asFunction<void Function(imp1.RT_AnalysisHandle)>();

  void Analysis_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Analysis_destroy(
      handle,
    );
  }

  late final _Analysis_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Analysis_destroy');
  late final _Analysis_destroy =
      _Analysis_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Analysis_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Analysis_destroyInstance(
      handle,
    );
  }

  late final _Analysis_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Analysis_destroyInstance');
  late final _Analysis_destroyInstance = _Analysis_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void AnnotationSublayer_created(
    imp1.RT_AnnotationSublayerHandle handle,
  ) {
    return _AnnotationSublayer_created(
      handle,
    );
  }

  late final _AnnotationSublayer_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_AnnotationSublayerHandle)>>(
      'AnnotationSublayer_created');
  late final _AnnotationSublayer_created = _AnnotationSublayer_createdPtr
      .asFunction<void Function(imp1.RT_AnnotationSublayerHandle)>();

  void AnnotationSublayer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AnnotationSublayer_destroy(
      handle,
    );
  }

  late final _AnnotationSublayer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AnnotationSublayer_destroy');
  late final _AnnotationSublayer_destroy = _AnnotationSublayer_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void AnnotationSublayer_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AnnotationSublayer_destroyInstance(
      handle,
    );
  }

  late final _AnnotationSublayer_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AnnotationSublayer_destroyInstance');
  late final _AnnotationSublayer_destroyInstance =
      _AnnotationSublayer_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISAuthenticationChallenge_created(
    imp1.RT_ArcGISAuthenticationChallengeHandle handle,
  ) {
    return _ArcGISAuthenticationChallenge_created(
      handle,
    );
  }

  late final _ArcGISAuthenticationChallenge_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISAuthenticationChallengeHandle)>>(
      'ArcGISAuthenticationChallenge_created');
  late final _ArcGISAuthenticationChallenge_created =
      _ArcGISAuthenticationChallenge_createdPtr.asFunction<
          void Function(imp1.RT_ArcGISAuthenticationChallengeHandle)>();

  void ArcGISAuthenticationChallenge_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISAuthenticationChallenge_destroy(
      handle,
    );
  }

  late final _ArcGISAuthenticationChallenge_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISAuthenticationChallenge_destroy');
  late final _ArcGISAuthenticationChallenge_destroy =
      _ArcGISAuthenticationChallenge_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISCredentialStore_created(
    imp1.RT_ArcGISCredentialStoreHandle handle,
  ) {
    return _ArcGISCredentialStore_created(
      handle,
    );
  }

  late final _ArcGISCredentialStore_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISCredentialStoreHandle)>>(
      'ArcGISCredentialStore_created');
  late final _ArcGISCredentialStore_created = _ArcGISCredentialStore_createdPtr
      .asFunction<void Function(imp1.RT_ArcGISCredentialStoreHandle)>();

  void ArcGISCredentialStore_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISCredentialStore_destroy(
      handle,
    );
  }

  late final _ArcGISCredentialStore_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISCredentialStore_destroy');
  late final _ArcGISCredentialStore_destroy = _ArcGISCredentialStore_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISCredential_created(
    imp1.RT_ArcGISCredentialHandle handle,
  ) {
    return _ArcGISCredential_created(
      handle,
    );
  }

  late final _ArcGISCredential_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ArcGISCredentialHandle)>>(
      'ArcGISCredential_created');
  late final _ArcGISCredential_created = _ArcGISCredential_createdPtr
      .asFunction<void Function(imp1.RT_ArcGISCredentialHandle)>();

  void ArcGISCredential_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISCredential_destroy(
      handle,
    );
  }

  late final _ArcGISCredential_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISCredential_destroy');
  late final _ArcGISCredential_destroy = _ArcGISCredential_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISFeatureLayerInfo_created(
    imp1.RT_ArcGISFeatureLayerInfoHandle handle,
  ) {
    return _ArcGISFeatureLayerInfo_created(
      handle,
    );
  }

  late final _ArcGISFeatureLayerInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISFeatureLayerInfoHandle)>>(
      'ArcGISFeatureLayerInfo_created');
  late final _ArcGISFeatureLayerInfo_created =
      _ArcGISFeatureLayerInfo_createdPtr.asFunction<
          void Function(imp1.RT_ArcGISFeatureLayerInfoHandle)>();

  void ArcGISFeatureLayerInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISFeatureLayerInfo_destroy(
      handle,
    );
  }

  late final _ArcGISFeatureLayerInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISFeatureLayerInfo_destroy');
  late final _ArcGISFeatureLayerInfo_destroy =
      _ArcGISFeatureLayerInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISFeatureServiceInfo_created(
    imp1.RT_ArcGISFeatureServiceInfoHandle handle,
  ) {
    return _ArcGISFeatureServiceInfo_created(
      handle,
    );
  }

  late final _ArcGISFeatureServiceInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISFeatureServiceInfoHandle)>>(
      'ArcGISFeatureServiceInfo_created');
  late final _ArcGISFeatureServiceInfo_created =
      _ArcGISFeatureServiceInfo_createdPtr.asFunction<
          void Function(imp1.RT_ArcGISFeatureServiceInfoHandle)>();

  void ArcGISFeatureServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISFeatureServiceInfo_destroy(
      handle,
    );
  }

  late final _ArcGISFeatureServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISFeatureServiceInfo_destroy');
  late final _ArcGISFeatureServiceInfo_destroy =
      _ArcGISFeatureServiceInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISImageServiceInfo_created(
    RT_ArcGISImageServiceInfoHandle handle,
  ) {
    return _ArcGISImageServiceInfo_created(
      handle,
    );
  }

  late final _ArcGISImageServiceInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_ArcGISImageServiceInfoHandle)>>(
      'ArcGISImageServiceInfo_created');
  late final _ArcGISImageServiceInfo_created =
      _ArcGISImageServiceInfo_createdPtr.asFunction<
          void Function(RT_ArcGISImageServiceInfoHandle)>();

  void ArcGISImageServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISImageServiceInfo_destroy(
      handle,
    );
  }

  late final _ArcGISImageServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISImageServiceInfo_destroy');
  late final _ArcGISImageServiceInfo_destroy =
      _ArcGISImageServiceInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISMapServiceInfo_created(
    imp1.RT_ArcGISMapServiceInfoHandle handle,
  ) {
    return _ArcGISMapServiceInfo_created(
      handle,
    );
  }

  late final _ArcGISMapServiceInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISMapServiceInfoHandle)>>(
      'ArcGISMapServiceInfo_created');
  late final _ArcGISMapServiceInfo_created = _ArcGISMapServiceInfo_createdPtr
      .asFunction<void Function(imp1.RT_ArcGISMapServiceInfoHandle)>();

  void ArcGISMapServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISMapServiceInfo_destroy(
      handle,
    );
  }

  late final _ArcGISMapServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISMapServiceInfo_destroy');
  late final _ArcGISMapServiceInfo_destroy = _ArcGISMapServiceInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISMapServiceSublayerInfo_created(
    imp1.RT_ArcGISMapServiceSublayerInfoHandle handle,
  ) {
    return _ArcGISMapServiceSublayerInfo_created(
      handle,
    );
  }

  late final _ArcGISMapServiceSublayerInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISMapServiceSublayerInfoHandle)>>(
      'ArcGISMapServiceSublayerInfo_created');
  late final _ArcGISMapServiceSublayerInfo_created =
      _ArcGISMapServiceSublayerInfo_createdPtr.asFunction<
          void Function(imp1.RT_ArcGISMapServiceSublayerInfoHandle)>();

  void ArcGISMapServiceSublayerInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISMapServiceSublayerInfo_destroy(
      handle,
    );
  }

  late final _ArcGISMapServiceSublayerInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISMapServiceSublayerInfo_destroy');
  late final _ArcGISMapServiceSublayerInfo_destroy =
      _ArcGISMapServiceSublayerInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISStreamServiceFilter_created(
    RT_ArcGISStreamServiceFilterHandle handle,
  ) {
    return _ArcGISStreamServiceFilter_created(
      handle,
    );
  }

  late final _ArcGISStreamServiceFilter_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_ArcGISStreamServiceFilterHandle)>>(
      'ArcGISStreamServiceFilter_created');
  late final _ArcGISStreamServiceFilter_created =
      _ArcGISStreamServiceFilter_createdPtr.asFunction<
          void Function(RT_ArcGISStreamServiceFilterHandle)>();

  void ArcGISStreamServiceFilter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISStreamServiceFilter_destroy(
      handle,
    );
  }

  late final _ArcGISStreamServiceFilter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISStreamServiceFilter_destroy');
  late final _ArcGISStreamServiceFilter_destroy =
      _ArcGISStreamServiceFilter_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISStreamServiceInfo_created(
    RT_ArcGISStreamServiceInfoHandle handle,
  ) {
    return _ArcGISStreamServiceInfo_created(
      handle,
    );
  }

  late final _ArcGISStreamServiceInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_ArcGISStreamServiceInfoHandle)>>(
      'ArcGISStreamServiceInfo_created');
  late final _ArcGISStreamServiceInfo_created =
      _ArcGISStreamServiceInfo_createdPtr.asFunction<
          void Function(RT_ArcGISStreamServiceInfoHandle)>();

  void ArcGISStreamServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISStreamServiceInfo_destroy(
      handle,
    );
  }

  late final _ArcGISStreamServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISStreamServiceInfo_destroy');
  late final _ArcGISStreamServiceInfo_destroy =
      _ArcGISStreamServiceInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISSublayer_created(
    imp1.RT_ArcGISSublayerHandle handle,
  ) {
    return _ArcGISSublayer_created(
      handle,
    );
  }

  late final _ArcGISSublayer_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcGISSublayerHandle)>>(
      'ArcGISSublayer_created');
  late final _ArcGISSublayer_created = _ArcGISSublayer_createdPtr.asFunction<
      void Function(imp1.RT_ArcGISSublayerHandle)>();

  void ArcGISSublayer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISSublayer_destroy(
      handle,
    );
  }

  late final _ArcGISSublayer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISSublayer_destroy');
  late final _ArcGISSublayer_destroy = _ArcGISSublayer_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISSublayer_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISSublayer_destroyInstance(
      handle,
    );
  }

  late final _ArcGISSublayer_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISSublayer_destroyInstance');
  late final _ArcGISSublayer_destroyInstance =
      _ArcGISSublayer_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcGISTokenInfo_created(
    imp1.RT_ArcGISTokenInfoHandle handle,
  ) {
    return _ArcGISTokenInfo_created(
      handle,
    );
  }

  late final _ArcGISTokenInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcGISTokenInfoHandle)>>(
      'ArcGISTokenInfo_created');
  late final _ArcGISTokenInfo_created = _ArcGISTokenInfo_createdPtr.asFunction<
      void Function(imp1.RT_ArcGISTokenInfoHandle)>();

  void ArcGISTokenInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcGISTokenInfo_destroy(
      handle,
    );
  }

  late final _ArcGISTokenInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcGISTokenInfo_destroy');
  late final _ArcGISTokenInfo_destroy = _ArcGISTokenInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeConsoleMessageContext_created(
    imp1.RT_ArcadeConsoleMessageContextHandle handle,
  ) {
    return _ArcadeConsoleMessageContext_created(
      handle,
    );
  }

  late final _ArcadeConsoleMessageContext_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcadeConsoleMessageContextHandle)>>(
      'ArcadeConsoleMessageContext_created');
  late final _ArcadeConsoleMessageContext_created =
      _ArcadeConsoleMessageContext_createdPtr.asFunction<
          void Function(imp1.RT_ArcadeConsoleMessageContextHandle)>();

  void ArcadeConsoleMessageContext_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeConsoleMessageContext_destroy(
      handle,
    );
  }

  late final _ArcadeConsoleMessageContext_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeConsoleMessageContext_destroy');
  late final _ArcadeConsoleMessageContext_destroy =
      _ArcadeConsoleMessageContext_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeDateOnly_created(
    imp1.RT_ArcadeDateOnlyHandle handle,
  ) {
    return _ArcadeDateOnly_created(
      handle,
    );
  }

  late final _ArcadeDateOnly_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeDateOnlyHandle)>>(
      'ArcadeDateOnly_created');
  late final _ArcadeDateOnly_created = _ArcadeDateOnly_createdPtr.asFunction<
      void Function(imp1.RT_ArcadeDateOnlyHandle)>();

  void ArcadeDateOnly_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeDateOnly_destroy(
      handle,
    );
  }

  late final _ArcadeDateOnly_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeDateOnly_destroy');
  late final _ArcadeDateOnly_destroy = _ArcadeDateOnly_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeDateTime_created(
    imp1.RT_ArcadeDateTimeHandle handle,
  ) {
    return _ArcadeDateTime_created(
      handle,
    );
  }

  late final _ArcadeDateTime_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeDateTimeHandle)>>(
      'ArcadeDateTime_created');
  late final _ArcadeDateTime_created = _ArcadeDateTime_createdPtr.asFunction<
      void Function(imp1.RT_ArcadeDateTimeHandle)>();

  void ArcadeDateTime_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeDateTime_destroy(
      handle,
    );
  }

  late final _ArcadeDateTime_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeDateTime_destroy');
  late final _ArcadeDateTime_destroy = _ArcadeDateTime_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeEvaluationResult_created(
    imp1.RT_ArcadeEvaluationResultHandle handle,
  ) {
    return _ArcadeEvaluationResult_created(
      handle,
    );
  }

  late final _ArcadeEvaluationResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcadeEvaluationResultHandle)>>(
      'ArcadeEvaluationResult_created');
  late final _ArcadeEvaluationResult_created =
      _ArcadeEvaluationResult_createdPtr.asFunction<
          void Function(imp1.RT_ArcadeEvaluationResultHandle)>();

  void ArcadeEvaluationResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeEvaluationResult_destroy(
      handle,
    );
  }

  late final _ArcadeEvaluationResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeEvaluationResult_destroy');
  late final _ArcadeEvaluationResult_destroy =
      _ArcadeEvaluationResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeEvaluator_created(
    RT_ArcadeEvaluatorHandle handle,
  ) {
    return _ArcadeEvaluator_created(
      handle,
    );
  }

  late final _ArcadeEvaluator_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_ArcadeEvaluatorHandle)>>(
          'ArcadeEvaluator_created');
  late final _ArcadeEvaluator_created = _ArcadeEvaluator_createdPtr.asFunction<
      void Function(RT_ArcadeEvaluatorHandle)>();

  void ArcadeEvaluator_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeEvaluator_destroy(
      handle,
    );
  }

  late final _ArcadeEvaluator_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeEvaluator_destroy');
  late final _ArcadeEvaluator_destroy = _ArcadeEvaluator_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeExpression_created(
    imp1.RT_ArcadeExpressionHandle handle,
  ) {
    return _ArcadeExpression_created(
      handle,
    );
  }

  late final _ArcadeExpression_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ArcadeExpressionHandle)>>(
      'ArcadeExpression_created');
  late final _ArcadeExpression_created = _ArcadeExpression_createdPtr
      .asFunction<void Function(imp1.RT_ArcadeExpressionHandle)>();

  void ArcadeExpression_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeExpression_destroy(
      handle,
    );
  }

  late final _ArcadeExpression_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeExpression_destroy');
  late final _ArcadeExpression_destroy = _ArcadeExpression_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeMonikerizationArguments_created(
    RT_ArcadeMonikerizationArgumentsHandle handle,
  ) {
    return _ArcadeMonikerizationArguments_created(
      handle,
    );
  }

  late final _ArcadeMonikerizationArguments_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_ArcadeMonikerizationArgumentsHandle)>>(
      'ArcadeMonikerizationArguments_created');
  late final _ArcadeMonikerizationArguments_created =
      _ArcadeMonikerizationArguments_createdPtr.asFunction<
          void Function(RT_ArcadeMonikerizationArgumentsHandle)>();

  void ArcadeMonikerizationArguments_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeMonikerizationArguments_destroy(
      handle,
    );
  }

  late final _ArcadeMonikerizationArguments_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeMonikerizationArguments_destroy');
  late final _ArcadeMonikerizationArguments_destroy =
      _ArcadeMonikerizationArguments_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeMonikerizationResult_created(
    RT_ArcadeMonikerizationResultHandle handle,
  ) {
    return _ArcadeMonikerizationResult_created(
      handle,
    );
  }

  late final _ArcadeMonikerizationResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_ArcadeMonikerizationResultHandle)>>(
      'ArcadeMonikerizationResult_created');
  late final _ArcadeMonikerizationResult_created =
      _ArcadeMonikerizationResult_createdPtr.asFunction<
          void Function(RT_ArcadeMonikerizationResultHandle)>();

  void ArcadeMonikerizationResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeMonikerizationResult_destroy(
      handle,
    );
  }

  late final _ArcadeMonikerizationResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeMonikerizationResult_destroy');
  late final _ArcadeMonikerizationResult_destroy =
      _ArcadeMonikerizationResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeResource_created(
    imp1.RT_ArcadeResourceHandle handle,
  ) {
    return _ArcadeResource_created(
      handle,
    );
  }

  late final _ArcadeResource_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeResourceHandle)>>(
      'ArcadeResource_created');
  late final _ArcadeResource_created = _ArcadeResource_createdPtr.asFunction<
      void Function(imp1.RT_ArcadeResourceHandle)>();

  void ArcadeResource_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeResource_destroy(
      handle,
    );
  }

  late final _ArcadeResource_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeResource_destroy');
  late final _ArcadeResource_destroy = _ArcadeResource_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeScriptEngine_created(
    RT_ArcadeScriptEngineHandle handle,
  ) {
    return _ArcadeScriptEngine_created(
      handle,
    );
  }

  late final _ArcadeScriptEngine_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_ArcadeScriptEngineHandle)>>(
      'ArcadeScriptEngine_created');
  late final _ArcadeScriptEngine_created = _ArcadeScriptEngine_createdPtr
      .asFunction<void Function(RT_ArcadeScriptEngineHandle)>();

  void ArcadeScriptEngine_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeScriptEngine_destroy(
      handle,
    );
  }

  late final _ArcadeScriptEngine_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeScriptEngine_destroy');
  late final _ArcadeScriptEngine_destroy = _ArcadeScriptEngine_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeScriptMonikerizer_created(
    RT_ArcadeScriptMonikerizerHandle handle,
  ) {
    return _ArcadeScriptMonikerizer_created(
      handle,
    );
  }

  late final _ArcadeScriptMonikerizer_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_ArcadeScriptMonikerizerHandle)>>(
      'ArcadeScriptMonikerizer_created');
  late final _ArcadeScriptMonikerizer_created =
      _ArcadeScriptMonikerizer_createdPtr.asFunction<
          void Function(RT_ArcadeScriptMonikerizerHandle)>();

  void ArcadeScriptMonikerizer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeScriptMonikerizer_destroy(
      handle,
    );
  }

  late final _ArcadeScriptMonikerizer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeScriptMonikerizer_destroy');
  late final _ArcadeScriptMonikerizer_destroy =
      _ArcadeScriptMonikerizer_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeTimeOnly_created(
    imp1.RT_ArcadeTimeOnlyHandle handle,
  ) {
    return _ArcadeTimeOnly_created(
      handle,
    );
  }

  late final _ArcadeTimeOnly_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeTimeOnlyHandle)>>(
      'ArcadeTimeOnly_created');
  late final _ArcadeTimeOnly_created = _ArcadeTimeOnly_createdPtr.asFunction<
      void Function(imp1.RT_ArcadeTimeOnlyHandle)>();

  void ArcadeTimeOnly_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeTimeOnly_destroy(
      handle,
    );
  }

  late final _ArcadeTimeOnly_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeTimeOnly_destroy');
  late final _ArcadeTimeOnly_destroy = _ArcadeTimeOnly_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArcadeTimezone_created(
    RT_ArcadeTimezoneHandle handle,
  ) {
    return _ArcadeTimezone_created(
      handle,
    );
  }

  late final _ArcadeTimezone_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_ArcadeTimezoneHandle)>>(
          'ArcadeTimezone_created');
  late final _ArcadeTimezone_created = _ArcadeTimezone_createdPtr.asFunction<
      void Function(RT_ArcadeTimezoneHandle)>();

  void ArcadeTimezone_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArcadeTimezone_destroy(
      handle,
    );
  }

  late final _ArcadeTimezone_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArcadeTimezone_destroy');
  late final _ArcadeTimezone_destroy = _ArcadeTimezone_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ArrayBuilder_created(
    imp1.RT_ArrayBuilderHandle handle,
  ) {
    return _ArrayBuilder_created(
      handle,
    );
  }

  late final _ArrayBuilder_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArrayBuilderHandle)>>(
      'ArrayBuilder_created');
  late final _ArrayBuilder_created = _ArrayBuilder_createdPtr.asFunction<
      void Function(imp1.RT_ArrayBuilderHandle)>();

  void ArrayBuilder_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ArrayBuilder_destroy(
      handle,
    );
  }

  late final _ArrayBuilder_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ArrayBuilder_destroy');
  late final _ArrayBuilder_destroy = _ArrayBuilder_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Array_created(
    imp1.RT_ArrayHandle handle,
  ) {
    return _Array_created(
      handle,
    );
  }

  late final _Array_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ArrayHandle)>>(
          'Array_created');
  late final _Array_created =
      _Array_createdPtr.asFunction<void Function(imp1.RT_ArrayHandle)>();

  void Array_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Array_destroy(
      handle,
    );
  }

  late final _Array_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Array_destroy');
  late final _Array_destroy =
      _Array_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Attachment_created(
    imp1.RT_AttachmentHandle handle,
  ) {
    return _Attachment_created(
      handle,
    );
  }

  late final _Attachment_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_AttachmentHandle)>>(
          'Attachment_created');
  late final _Attachment_created = _Attachment_createdPtr.asFunction<
      void Function(imp1.RT_AttachmentHandle)>();

  void Attachment_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Attachment_destroy(
      handle,
    );
  }

  late final _Attachment_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Attachment_destroy');
  late final _Attachment_destroy =
      _Attachment_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void AttachmentsFormInput_created(
    RT_AttachmentsFormInputHandle handle,
  ) {
    return _AttachmentsFormInput_created(
      handle,
    );
  }

  late final _AttachmentsFormInput_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_AttachmentsFormInputHandle)>>(
      'AttachmentsFormInput_created');
  late final _AttachmentsFormInput_created = _AttachmentsFormInput_createdPtr
      .asFunction<void Function(RT_AttachmentsFormInputHandle)>();

  void AttachmentsFormInput_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AttachmentsFormInput_destroy(
      handle,
    );
  }

  late final _AttachmentsFormInput_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AttachmentsFormInput_destroy');
  late final _AttachmentsFormInput_destroy = _AttachmentsFormInput_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void AttributeParameterValue_created(
    imp1.RT_AttributeParameterValueHandle handle,
  ) {
    return _AttributeParameterValue_created(
      handle,
    );
  }

  late final _AttributeParameterValue_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_AttributeParameterValueHandle)>>(
      'AttributeParameterValue_created');
  late final _AttributeParameterValue_created =
      _AttributeParameterValue_createdPtr.asFunction<
          void Function(imp1.RT_AttributeParameterValueHandle)>();

  void AttributeParameterValue_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AttributeParameterValue_destroy(
      handle,
    );
  }

  late final _AttributeParameterValue_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AttributeParameterValue_destroy');
  late final _AttributeParameterValue_destroy =
      _AttributeParameterValue_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void AuthenticationManager_created(
    imp1.RT_AuthenticationManagerHandle handle,
  ) {
    return _AuthenticationManager_created(
      handle,
    );
  }

  late final _AuthenticationManager_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_AuthenticationManagerHandle)>>(
      'AuthenticationManager_created');
  late final _AuthenticationManager_created = _AuthenticationManager_createdPtr
      .asFunction<void Function(imp1.RT_AuthenticationManagerHandle)>();

  void AuthenticationManager_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _AuthenticationManager_destroy(
      handle,
    );
  }

  late final _AuthenticationManager_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'AuthenticationManager_destroy');
  late final _AuthenticationManager_destroy = _AuthenticationManager_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void BackgroundGrid_created(
    imp1.RT_BackgroundGridHandle handle,
  ) {
    return _BackgroundGrid_created(
      handle,
    );
  }

  late final _BackgroundGrid_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_BackgroundGridHandle)>>(
      'BackgroundGrid_created');
  late final _BackgroundGrid_created = _BackgroundGrid_createdPtr.asFunction<
      void Function(imp1.RT_BackgroundGridHandle)>();

  void BackgroundGrid_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BackgroundGrid_destroy(
      handle,
    );
  }

  late final _BackgroundGrid_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BackgroundGrid_destroy');
  late final _BackgroundGrid_destroy = _BackgroundGrid_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void BasemapStyleInfo_created(
    imp1.RT_BasemapStyleInfoHandle handle,
  ) {
    return _BasemapStyleInfo_created(
      handle,
    );
  }

  late final _BasemapStyleInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_BasemapStyleInfoHandle)>>(
      'BasemapStyleInfo_created');
  late final _BasemapStyleInfo_created = _BasemapStyleInfo_createdPtr
      .asFunction<void Function(imp1.RT_BasemapStyleInfoHandle)>();

  void BasemapStyleInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BasemapStyleInfo_destroy(
      handle,
    );
  }

  late final _BasemapStyleInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BasemapStyleInfo_destroy');
  late final _BasemapStyleInfo_destroy = _BasemapStyleInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void BasemapStyleLanguageInfo_created(
    imp1.RT_BasemapStyleLanguageInfoHandle handle,
  ) {
    return _BasemapStyleLanguageInfo_created(
      handle,
    );
  }

  late final _BasemapStyleLanguageInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStyleLanguageInfoHandle)>>(
      'BasemapStyleLanguageInfo_created');
  late final _BasemapStyleLanguageInfo_created =
      _BasemapStyleLanguageInfo_createdPtr.asFunction<
          void Function(imp1.RT_BasemapStyleLanguageInfoHandle)>();

  void BasemapStyleLanguageInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BasemapStyleLanguageInfo_destroy(
      handle,
    );
  }

  late final _BasemapStyleLanguageInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BasemapStyleLanguageInfo_destroy');
  late final _BasemapStyleLanguageInfo_destroy =
      _BasemapStyleLanguageInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void BasemapStyleParameters_created(
    imp1.RT_BasemapStyleParametersHandle handle,
  ) {
    return _BasemapStyleParameters_created(
      handle,
    );
  }

  late final _BasemapStyleParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStyleParametersHandle)>>(
      'BasemapStyleParameters_created');
  late final _BasemapStyleParameters_created =
      _BasemapStyleParameters_createdPtr.asFunction<
          void Function(imp1.RT_BasemapStyleParametersHandle)>();

  void BasemapStyleParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BasemapStyleParameters_destroy(
      handle,
    );
  }

  late final _BasemapStyleParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BasemapStyleParameters_destroy');
  late final _BasemapStyleParameters_destroy =
      _BasemapStyleParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void BasemapStylesServiceInfo_created(
    imp1.RT_BasemapStylesServiceInfoHandle handle,
  ) {
    return _BasemapStylesServiceInfo_created(
      handle,
    );
  }

  late final _BasemapStylesServiceInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStylesServiceInfoHandle)>>(
      'BasemapStylesServiceInfo_created');
  late final _BasemapStylesServiceInfo_created =
      _BasemapStylesServiceInfo_createdPtr.asFunction<
          void Function(imp1.RT_BasemapStylesServiceInfoHandle)>();

  void BasemapStylesServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BasemapStylesServiceInfo_destroy(
      handle,
    );
  }

  late final _BasemapStylesServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BasemapStylesServiceInfo_destroy');
  late final _BasemapStylesServiceInfo_destroy =
      _BasemapStylesServiceInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void BasemapStylesService_created(
    imp1.RT_BasemapStylesServiceHandle handle,
  ) {
    return _BasemapStylesService_created(
      handle,
    );
  }

  late final _BasemapStylesService_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStylesServiceHandle)>>(
      'BasemapStylesService_created');
  late final _BasemapStylesService_created = _BasemapStylesService_createdPtr
      .asFunction<void Function(imp1.RT_BasemapStylesServiceHandle)>();

  void BasemapStylesService_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BasemapStylesService_destroy(
      handle,
    );
  }

  late final _BasemapStylesService_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BasemapStylesService_destroy');
  late final _BasemapStylesService_destroy = _BasemapStylesService_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Basemap_created(
    imp1.RT_BasemapHandle handle,
  ) {
    return _Basemap_created(
      handle,
    );
  }

  late final _Basemap_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_BasemapHandle)>>(
          'Basemap_created');
  late final _Basemap_created =
      _Basemap_createdPtr.asFunction<void Function(imp1.RT_BasemapHandle)>();

  void Basemap_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Basemap_destroy(
      handle,
    );
  }

  late final _Basemap_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Basemap_destroy');
  late final _Basemap_destroy =
      _Basemap_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Basemap_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Basemap_destroyInstance(
      handle,
    );
  }

  late final _Basemap_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Basemap_destroyInstance');
  late final _Basemap_destroyInstance = _Basemap_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Bookmark_created(
    imp1.RT_BookmarkHandle handle,
  ) {
    return _Bookmark_created(
      handle,
    );
  }

  late final _Bookmark_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_BookmarkHandle)>>(
          'Bookmark_created');
  late final _Bookmark_created =
      _Bookmark_createdPtr.asFunction<void Function(imp1.RT_BookmarkHandle)>();

  void Bookmark_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Bookmark_destroy(
      handle,
    );
  }

  late final _Bookmark_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Bookmark_destroy');
  late final _Bookmark_destroy =
      _Bookmark_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void BuildingAttributeFilterCollection_created(
    RT_BuildingAttributeFilterCollectionHandle handle,
  ) {
    return _BuildingAttributeFilterCollection_created(
      handle,
    );
  }

  late final _BuildingAttributeFilterCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_BuildingAttributeFilterCollectionHandle)>>(
      'BuildingAttributeFilterCollection_created');
  late final _BuildingAttributeFilterCollection_created =
      _BuildingAttributeFilterCollection_createdPtr.asFunction<
          void Function(RT_BuildingAttributeFilterCollectionHandle)>();

  void BuildingAttributeFilterCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BuildingAttributeFilterCollection_destroy(
      handle,
    );
  }

  late final _BuildingAttributeFilterCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BuildingAttributeFilterCollection_destroy');
  late final _BuildingAttributeFilterCollection_destroy =
      _BuildingAttributeFilterCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void BuildingAttributeFilter_created(
    imp1.RT_BuildingAttributeFilterHandle handle,
  ) {
    return _BuildingAttributeFilter_created(
      handle,
    );
  }

  late final _BuildingAttributeFilter_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BuildingAttributeFilterHandle)>>(
      'BuildingAttributeFilter_created');
  late final _BuildingAttributeFilter_created =
      _BuildingAttributeFilter_createdPtr.asFunction<
          void Function(imp1.RT_BuildingAttributeFilterHandle)>();

  void BuildingAttributeFilter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _BuildingAttributeFilter_destroy(
      handle,
    );
  }

  late final _BuildingAttributeFilter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'BuildingAttributeFilter_destroy');
  late final _BuildingAttributeFilter_destroy =
      _BuildingAttributeFilter_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ByteArray_created(
    imp1.RT_ByteArrayHandle handle,
  ) {
    return _ByteArray_created(
      handle,
    );
  }

  late final _ByteArray_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ByteArrayHandle)>>(
          'ByteArray_created');
  late final _ByteArray_created = _ByteArray_createdPtr.asFunction<
      void Function(imp1.RT_ByteArrayHandle)>();

  void ByteArray_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ByteArray_destroy(
      handle,
    );
  }

  late final _ByteArray_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ByteArray_destroy');
  late final _ByteArray_destroy =
      _ByteArray_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void CameraController_created(
    imp1.RT_CameraControllerHandle handle,
  ) {
    return _CameraController_created(
      handle,
    );
  }

  late final _CameraController_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_CameraControllerHandle)>>(
      'CameraController_created');
  late final _CameraController_created = _CameraController_createdPtr
      .asFunction<void Function(imp1.RT_CameraControllerHandle)>();

  void CameraController_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _CameraController_destroy(
      handle,
    );
  }

  late final _CameraController_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'CameraController_destroy');
  late final _CameraController_destroy = _CameraController_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Camera_created(
    imp1.RT_CameraHandle handle,
  ) {
    return _Camera_created(
      handle,
    );
  }

  late final _Camera_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_CameraHandle)>>(
          'Camera_created');
  late final _Camera_created =
      _Camera_createdPtr.asFunction<void Function(imp1.RT_CameraHandle)>();

  void Camera_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Camera_destroy(
      handle,
    );
  }

  late final _Camera_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Camera_destroy');
  late final _Camera_destroy =
      _Camera_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Certificate_created(
    RT_CertificateHandle handle,
  ) {
    return _Certificate_created(
      handle,
    );
  }

  late final _Certificate_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_CertificateHandle)>>(
          'Certificate_created');
  late final _Certificate_created =
      _Certificate_createdPtr.asFunction<void Function(RT_CertificateHandle)>();

  void Certificate_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Certificate_destroy(
      handle,
    );
  }

  late final _Certificate_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Certificate_destroy');
  late final _Certificate_destroy = _Certificate_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ChartImageParameters_created(
    imp1.RT_ChartImageParametersHandle handle,
  ) {
    return _ChartImageParameters_created(
      handle,
    );
  }

  late final _ChartImageParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ChartImageParametersHandle)>>(
      'ChartImageParameters_created');
  late final _ChartImageParameters_created = _ChartImageParameters_createdPtr
      .asFunction<void Function(imp1.RT_ChartImageParametersHandle)>();

  void ChartImageParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ChartImageParameters_destroy(
      handle,
    );
  }

  late final _ChartImageParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ChartImageParameters_destroy');
  late final _ChartImageParameters_destroy = _ChartImageParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ChartImage_created(
    imp1.RT_ChartImageHandle handle,
  ) {
    return _ChartImage_created(
      handle,
    );
  }

  late final _ChartImage_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ChartImageHandle)>>(
          'ChartImage_created');
  late final _ChartImage_created = _ChartImage_createdPtr.asFunction<
      void Function(imp1.RT_ChartImageHandle)>();

  void ChartImage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ChartImage_destroy(
      handle,
    );
  }

  late final _ChartImage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ChartImage_destroy');
  late final _ChartImage_destroy =
      _ChartImage_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ClassBreak_created(
    imp1.RT_ClassBreakHandle handle,
  ) {
    return _ClassBreak_created(
      handle,
    );
  }

  late final _ClassBreak_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ClassBreakHandle)>>(
          'ClassBreak_created');
  late final _ClassBreak_created = _ClassBreak_createdPtr.asFunction<
      void Function(imp1.RT_ClassBreakHandle)>();

  void ClassBreak_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClassBreak_destroy(
      handle,
    );
  }

  late final _ClassBreak_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClassBreak_destroy');
  late final _ClassBreak_destroy =
      _ClassBreak_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ClassBreak_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClassBreak_destroyInstance(
      handle,
    );
  }

  late final _ClassBreak_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClassBreak_destroyInstance');
  late final _ClassBreak_destroyInstance = _ClassBreak_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ClientReference_created(
    imp1.RT_ClientReferenceHandle handle,
  ) {
    return _ClientReference_created(
      handle,
    );
  }

  late final _ClientReference_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ClientReferenceHandle)>>(
      'ClientReference_created');
  late final _ClientReference_created = _ClientReference_createdPtr.asFunction<
      void Function(imp1.RT_ClientReferenceHandle)>();

  void ClientReference_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClientReference_destroy(
      handle,
    );
  }

  late final _ClientReference_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClientReference_destroy');
  late final _ClientReference_destroy = _ClientReference_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ClientRequestSender_created(
    imp1.RT_ClientRequestSenderHandle handle,
  ) {
    return _ClientRequestSender_created(
      handle,
    );
  }

  late final _ClientRequestSender_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClientRequestSenderHandle)>>(
      'ClientRequestSender_created');
  late final _ClientRequestSender_created = _ClientRequestSender_createdPtr
      .asFunction<void Function(imp1.RT_ClientRequestSenderHandle)>();

  void ClientRequestSender_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClientRequestSender_destroy(
      handle,
    );
  }

  late final _ClientRequestSender_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClientRequestSender_destroy');
  late final _ClientRequestSender_destroy = _ClientRequestSender_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ClientResponse_created(
    imp1.RT_ClientResponseHandle handle,
  ) {
    return _ClientResponse_created(
      handle,
    );
  }

  late final _ClientResponse_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ClientResponseHandle)>>(
      'ClientResponse_created');
  late final _ClientResponse_created = _ClientResponse_createdPtr.asFunction<
      void Function(imp1.RT_ClientResponseHandle)>();

  void ClientResponse_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClientResponse_destroy(
      handle,
    );
  }

  late final _ClientResponse_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClientResponse_destroy');
  late final _ClientResponse_destroy = _ClientResponse_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ClientSecurityProviderAdapter_created(
    RT_ClientSecurityProviderAdapterHandle handle,
  ) {
    return _ClientSecurityProviderAdapter_created(
      handle,
    );
  }

  late final _ClientSecurityProviderAdapter_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_ClientSecurityProviderAdapterHandle)>>(
      'ClientSecurityProviderAdapter_created');
  late final _ClientSecurityProviderAdapter_created =
      _ClientSecurityProviderAdapter_createdPtr.asFunction<
          void Function(RT_ClientSecurityProviderAdapterHandle)>();

  void ClientSecurityProviderAdapter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClientSecurityProviderAdapter_destroy(
      handle,
    );
  }

  late final _ClientSecurityProviderAdapter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClientSecurityProviderAdapter_destroy');
  late final _ClientSecurityProviderAdapter_destroy =
      _ClientSecurityProviderAdapter_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ClosestFacilityParameters_created(
    imp1.RT_ClosestFacilityParametersHandle handle,
  ) {
    return _ClosestFacilityParameters_created(
      handle,
    );
  }

  late final _ClosestFacilityParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityParametersHandle)>>(
      'ClosestFacilityParameters_created');
  late final _ClosestFacilityParameters_created =
      _ClosestFacilityParameters_createdPtr.asFunction<
          void Function(imp1.RT_ClosestFacilityParametersHandle)>();

  void ClosestFacilityParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClosestFacilityParameters_destroy(
      handle,
    );
  }

  late final _ClosestFacilityParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClosestFacilityParameters_destroy');
  late final _ClosestFacilityParameters_destroy =
      _ClosestFacilityParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ClosestFacilityResult_created(
    imp1.RT_ClosestFacilityResultHandle handle,
  ) {
    return _ClosestFacilityResult_created(
      handle,
    );
  }

  late final _ClosestFacilityResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityResultHandle)>>(
      'ClosestFacilityResult_created');
  late final _ClosestFacilityResult_created = _ClosestFacilityResult_createdPtr
      .asFunction<void Function(imp1.RT_ClosestFacilityResultHandle)>();

  void ClosestFacilityResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClosestFacilityResult_destroy(
      handle,
    );
  }

  late final _ClosestFacilityResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClosestFacilityResult_destroy');
  late final _ClosestFacilityResult_destroy = _ClosestFacilityResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ClosestFacilityRoute_created(
    imp1.RT_ClosestFacilityRouteHandle handle,
  ) {
    return _ClosestFacilityRoute_created(
      handle,
    );
  }

  late final _ClosestFacilityRoute_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityRouteHandle)>>(
      'ClosestFacilityRoute_created');
  late final _ClosestFacilityRoute_created = _ClosestFacilityRoute_createdPtr
      .asFunction<void Function(imp1.RT_ClosestFacilityRouteHandle)>();

  void ClosestFacilityRoute_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClosestFacilityRoute_destroy(
      handle,
    );
  }

  late final _ClosestFacilityRoute_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClosestFacilityRoute_destroy');
  late final _ClosestFacilityRoute_destroy = _ClosestFacilityRoute_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ClosestFacilityTaskInfo_created(
    imp1.RT_ClosestFacilityTaskInfoHandle handle,
  ) {
    return _ClosestFacilityTaskInfo_created(
      handle,
    );
  }

  late final _ClosestFacilityTaskInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityTaskInfoHandle)>>(
      'ClosestFacilityTaskInfo_created');
  late final _ClosestFacilityTaskInfo_created =
      _ClosestFacilityTaskInfo_createdPtr.asFunction<
          void Function(imp1.RT_ClosestFacilityTaskInfoHandle)>();

  void ClosestFacilityTaskInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClosestFacilityTaskInfo_destroy(
      handle,
    );
  }

  late final _ClosestFacilityTaskInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClosestFacilityTaskInfo_destroy');
  late final _ClosestFacilityTaskInfo_destroy =
      _ClosestFacilityTaskInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ClosestFacilityTask_created(
    imp1.RT_ClosestFacilityTaskHandle handle,
  ) {
    return _ClosestFacilityTask_created(
      handle,
    );
  }

  late final _ClosestFacilityTask_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityTaskHandle)>>(
      'ClosestFacilityTask_created');
  late final _ClosestFacilityTask_created = _ClosestFacilityTask_createdPtr
      .asFunction<void Function(imp1.RT_ClosestFacilityTaskHandle)>();

  void ClosestFacilityTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ClosestFacilityTask_destroy(
      handle,
    );
  }

  late final _ClosestFacilityTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ClosestFacilityTask_destroy');
  late final _ClosestFacilityTask_destroy = _ClosestFacilityTask_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void CodedValueDescription_created(
    imp1.RT_CodedValueDescriptionHandle handle,
  ) {
    return _CodedValueDescription_created(
      handle,
    );
  }

  late final _CodedValueDescription_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_CodedValueDescriptionHandle)>>(
      'CodedValueDescription_created');
  late final _CodedValueDescription_created = _CodedValueDescription_createdPtr
      .asFunction<void Function(imp1.RT_CodedValueDescriptionHandle)>();

  void CodedValueDescription_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _CodedValueDescription_destroy(
      handle,
    );
  }

  late final _CodedValueDescription_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'CodedValueDescription_destroy');
  late final _CodedValueDescription_destroy = _CodedValueDescription_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void CodedValue_created(
    imp1.RT_CodedValueHandle handle,
  ) {
    return _CodedValue_created(
      handle,
    );
  }

  late final _CodedValue_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_CodedValueHandle)>>(
          'CodedValue_created');
  late final _CodedValue_created = _CodedValue_createdPtr.asFunction<
      void Function(imp1.RT_CodedValueHandle)>();

  void CodedValue_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _CodedValue_destroy(
      handle,
    );
  }

  late final _CodedValue_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'CodedValue_destroy');
  late final _CodedValue_destroy =
      _CodedValue_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ColorRamp_created(
    RT_ColorRampHandle handle,
  ) {
    return _ColorRamp_created(
      handle,
    );
  }

  late final _ColorRamp_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_ColorRampHandle)>>(
          'ColorRamp_created');
  late final _ColorRamp_created =
      _ColorRamp_createdPtr.asFunction<void Function(RT_ColorRampHandle)>();

  void ColorRamp_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ColorRamp_destroy(
      handle,
    );
  }

  late final _ColorRamp_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ColorRamp_destroy');
  late final _ColorRamp_destroy =
      _ColorRamp_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Color_created(
    imp1.RT_ColorHandle handle,
  ) {
    return _Color_created(
      handle,
    );
  }

  late final _Color_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ColorHandle)>>(
          'Color_created');
  late final _Color_created =
      _Color_createdPtr.asFunction<void Function(imp1.RT_ColorHandle)>();

  void Color_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Color_destroy(
      handle,
    );
  }

  late final _Color_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Color_destroy');
  late final _Color_destroy =
      _Color_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Colormap_created(
    RT_ColormapHandle handle,
  ) {
    return _Colormap_created(
      handle,
    );
  }

  late final _Colormap_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_ColormapHandle)>>(
          'Colormap_created');
  late final _Colormap_created =
      _Colormap_createdPtr.asFunction<void Function(RT_ColormapHandle)>();

  void Colormap_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Colormap_destroy(
      handle,
    );
  }

  late final _Colormap_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Colormap_destroy');
  late final _Colormap_destroy =
      _Colormap_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ContingencyConstraintViolation_created(
    imp1.RT_ContingencyConstraintViolationHandle handle,
  ) {
    return _ContingencyConstraintViolation_created(
      handle,
    );
  }

  late final _ContingencyConstraintViolation_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ContingencyConstraintViolationHandle)>>(
      'ContingencyConstraintViolation_created');
  late final _ContingencyConstraintViolation_created =
      _ContingencyConstraintViolation_createdPtr.asFunction<
          void Function(imp1.RT_ContingencyConstraintViolationHandle)>();

  void ContingencyConstraintViolation_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ContingencyConstraintViolation_destroy(
      handle,
    );
  }

  late final _ContingencyConstraintViolation_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ContingencyConstraintViolation_destroy');
  late final _ContingencyConstraintViolation_destroy =
      _ContingencyConstraintViolation_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Contingency_created(
    imp1.RT_ContingencyHandle handle,
  ) {
    return _Contingency_created(
      handle,
    );
  }

  late final _Contingency_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ContingencyHandle)>>(
          'Contingency_created');
  late final _Contingency_created = _Contingency_createdPtr.asFunction<
      void Function(imp1.RT_ContingencyHandle)>();

  void Contingency_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Contingency_destroy(
      handle,
    );
  }

  late final _Contingency_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Contingency_destroy');
  late final _Contingency_destroy = _Contingency_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ContingentValue_created(
    imp1.RT_ContingentValueHandle handle,
  ) {
    return _ContingentValue_created(
      handle,
    );
  }

  late final _ContingentValue_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ContingentValueHandle)>>(
      'ContingentValue_created');
  late final _ContingentValue_created = _ContingentValue_createdPtr.asFunction<
      void Function(imp1.RT_ContingentValueHandle)>();

  void ContingentValue_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ContingentValue_destroy(
      handle,
    );
  }

  late final _ContingentValue_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ContingentValue_destroy');
  late final _ContingentValue_destroy = _ContingentValue_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ContingentValue_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ContingentValue_destroyInstance(
      handle,
    );
  }

  late final _ContingentValue_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ContingentValue_destroyInstance');
  late final _ContingentValue_destroyInstance =
      _ContingentValue_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ContingentValuesDefinition_created(
    imp1.RT_ContingentValuesDefinitionHandle handle,
  ) {
    return _ContingentValuesDefinition_created(
      handle,
    );
  }

  late final _ContingentValuesDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ContingentValuesDefinitionHandle)>>(
      'ContingentValuesDefinition_created');
  late final _ContingentValuesDefinition_created =
      _ContingentValuesDefinition_createdPtr.asFunction<
          void Function(imp1.RT_ContingentValuesDefinitionHandle)>();

  void ContingentValuesDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ContingentValuesDefinition_destroy(
      handle,
    );
  }

  late final _ContingentValuesDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ContingentValuesDefinition_destroy');
  late final _ContingentValuesDefinition_destroy =
      _ContingentValuesDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ContingentValuesResult_created(
    imp1.RT_ContingentValuesResultHandle handle,
  ) {
    return _ContingentValuesResult_created(
      handle,
    );
  }

  late final _ContingentValuesResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ContingentValuesResultHandle)>>(
      'ContingentValuesResult_created');
  late final _ContingentValuesResult_created =
      _ContingentValuesResult_createdPtr.asFunction<
          void Function(imp1.RT_ContingentValuesResultHandle)>();

  void ContingentValuesResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ContingentValuesResult_destroy(
      handle,
    );
  }

  late final _ContingentValuesResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ContingentValuesResult_destroy');
  late final _ContingentValuesResult_destroy =
      _ContingentValuesResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void CostAttribute_created(
    imp1.RT_CostAttributeHandle handle,
  ) {
    return _CostAttribute_created(
      handle,
    );
  }

  late final _CostAttribute_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_CostAttributeHandle)>>(
      'CostAttribute_created');
  late final _CostAttribute_created = _CostAttribute_createdPtr.asFunction<
      void Function(imp1.RT_CostAttributeHandle)>();

  void CostAttribute_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _CostAttribute_destroy(
      handle,
    );
  }

  late final _CostAttribute_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'CostAttribute_destroy');
  late final _CostAttribute_destroy = _CostAttribute_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void DataBuffer_created(
    RT_DataBufferHandle handle,
  ) {
    return _DataBuffer_created(
      handle,
    );
  }

  late final _DataBuffer_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_DataBufferHandle)>>(
          'DataBuffer_created');
  late final _DataBuffer_created =
      _DataBuffer_createdPtr.asFunction<void Function(RT_DataBufferHandle)>();

  void DataBuffer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DataBuffer_destroy(
      handle,
    );
  }

  late final _DataBuffer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DataBuffer_destroy');
  late final _DataBuffer_destroy =
      _DataBuffer_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DateOnly_created(
    imp1.RT_DateOnlyHandle handle,
  ) {
    return _DateOnly_created(
      handle,
    );
  }

  late final _DateOnly_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_DateOnlyHandle)>>(
          'DateOnly_created');
  late final _DateOnly_created =
      _DateOnly_createdPtr.asFunction<void Function(imp1.RT_DateOnlyHandle)>();

  void DateOnly_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DateOnly_destroy(
      handle,
    );
  }

  late final _DateOnly_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DateOnly_destroy');
  late final _DateOnly_destroy =
      _DateOnly_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DateTime_created(
    imp1.RT_DateTimeHandle handle,
  ) {
    return _DateTime_created(
      handle,
    );
  }

  late final _DateTime_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_DateTimeHandle)>>(
          'DateTime_created');
  late final _DateTime_created =
      _DateTime_createdPtr.asFunction<void Function(imp1.RT_DateTimeHandle)>();

  void DateTime_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DateTime_destroy(
      handle,
    );
  }

  late final _DateTime_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DateTime_destroy');
  late final _DateTime_destroy =
      _DateTime_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DatumTransformation_created(
    imp1.RT_DatumTransformationHandle handle,
  ) {
    return _DatumTransformation_created(
      handle,
    );
  }

  late final _DatumTransformation_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DatumTransformationHandle)>>(
      'DatumTransformation_created');
  late final _DatumTransformation_created = _DatumTransformation_createdPtr
      .asFunction<void Function(imp1.RT_DatumTransformationHandle)>();

  void DatumTransformation_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DatumTransformation_destroy(
      handle,
    );
  }

  late final _DatumTransformation_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DatumTransformation_destroy');
  late final _DatumTransformation_destroy = _DatumTransformation_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Device_created(
    imp1.RT_DeviceHandle handle,
  ) {
    return _Device_created(
      handle,
    );
  }

  late final _Device_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_DeviceHandle)>>(
          'Device_created');
  late final _Device_created =
      _Device_createdPtr.asFunction<void Function(imp1.RT_DeviceHandle)>();

  void Device_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Device_destroy(
      handle,
    );
  }

  late final _Device_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Device_destroy');
  late final _Device_destroy =
      _Device_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DictionarySymbolStyleConfiguration_created(
    imp1.RT_DictionarySymbolStyleConfigurationHandle handle,
  ) {
    return _DictionarySymbolStyleConfiguration_created(
      handle,
    );
  }

  late final _DictionarySymbolStyleConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_DictionarySymbolStyleConfigurationHandle)>>(
      'DictionarySymbolStyleConfiguration_created');
  late final _DictionarySymbolStyleConfiguration_created =
      _DictionarySymbolStyleConfiguration_createdPtr.asFunction<
          void Function(imp1.RT_DictionarySymbolStyleConfigurationHandle)>();

  void DictionarySymbolStyleConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DictionarySymbolStyleConfiguration_destroy(
      handle,
    );
  }

  late final _DictionarySymbolStyleConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DictionarySymbolStyleConfiguration_destroy');
  late final _DictionarySymbolStyleConfiguration_destroy =
      _DictionarySymbolStyleConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Dictionary_created(
    imp1.RT_DictionaryHandle handle,
  ) {
    return _Dictionary_created(
      handle,
    );
  }

  late final _Dictionary_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_DictionaryHandle)>>(
          'Dictionary_created');
  late final _Dictionary_created = _Dictionary_createdPtr.asFunction<
      void Function(imp1.RT_DictionaryHandle)>();

  void Dictionary_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Dictionary_destroy(
      handle,
    );
  }

  late final _Dictionary_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Dictionary_destroy');
  late final _Dictionary_destroy =
      _Dictionary_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DirectionEvent_created(
    imp1.RT_DirectionEventHandle handle,
  ) {
    return _DirectionEvent_created(
      handle,
    );
  }

  late final _DirectionEvent_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_DirectionEventHandle)>>(
      'DirectionEvent_created');
  late final _DirectionEvent_created = _DirectionEvent_createdPtr.asFunction<
      void Function(imp1.RT_DirectionEventHandle)>();

  void DirectionEvent_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DirectionEvent_destroy(
      handle,
    );
  }

  late final _DirectionEvent_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DirectionEvent_destroy');
  late final _DirectionEvent_destroy = _DirectionEvent_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void DirectionManeuver_created(
    imp1.RT_DirectionManeuverHandle handle,
  ) {
    return _DirectionManeuver_created(
      handle,
    );
  }

  late final _DirectionManeuver_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_DirectionManeuverHandle)>>(
      'DirectionManeuver_created');
  late final _DirectionManeuver_created = _DirectionManeuver_createdPtr
      .asFunction<void Function(imp1.RT_DirectionManeuverHandle)>();

  void DirectionManeuver_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DirectionManeuver_destroy(
      handle,
    );
  }

  late final _DirectionManeuver_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DirectionManeuver_destroy');
  late final _DirectionManeuver_destroy = _DirectionManeuver_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DirectionMessage_created(
    imp1.RT_DirectionMessageHandle handle,
  ) {
    return _DirectionMessage_created(
      handle,
    );
  }

  late final _DirectionMessage_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_DirectionMessageHandle)>>(
      'DirectionMessage_created');
  late final _DirectionMessage_created = _DirectionMessage_createdPtr
      .asFunction<void Function(imp1.RT_DirectionMessageHandle)>();

  void DirectionMessage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DirectionMessage_destroy(
      handle,
    );
  }

  late final _DirectionMessage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DirectionMessage_destroy');
  late final _DirectionMessage_destroy = _DirectionMessage_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DisplayFilterDefinition_created(
    imp1.RT_DisplayFilterDefinitionHandle handle,
  ) {
    return _DisplayFilterDefinition_created(
      handle,
    );
  }

  late final _DisplayFilterDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DisplayFilterDefinitionHandle)>>(
      'DisplayFilterDefinition_created');
  late final _DisplayFilterDefinition_created =
      _DisplayFilterDefinition_createdPtr.asFunction<
          void Function(imp1.RT_DisplayFilterDefinitionHandle)>();

  void DisplayFilterDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DisplayFilterDefinition_destroy(
      handle,
    );
  }

  late final _DisplayFilterDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DisplayFilterDefinition_destroy');
  late final _DisplayFilterDefinition_destroy =
      _DisplayFilterDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DisplayFilter_created(
    imp1.RT_DisplayFilterHandle handle,
  ) {
    return _DisplayFilter_created(
      handle,
    );
  }

  late final _DisplayFilter_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_DisplayFilterHandle)>>(
      'DisplayFilter_created');
  late final _DisplayFilter_created = _DisplayFilter_createdPtr.asFunction<
      void Function(imp1.RT_DisplayFilterHandle)>();

  void DisplayFilter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DisplayFilter_destroy(
      handle,
    );
  }

  late final _DisplayFilter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DisplayFilter_destroy');
  late final _DisplayFilter_destroy = _DisplayFilter_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void DisplayFilter_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DisplayFilter_destroyInstance(
      handle,
    );
  }

  late final _DisplayFilter_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DisplayFilter_destroyInstance');
  late final _DisplayFilter_destroyInstance = _DisplayFilter_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DistanceSymbolRange_created(
    imp1.RT_DistanceSymbolRangeHandle handle,
  ) {
    return _DistanceSymbolRange_created(
      handle,
    );
  }

  late final _DistanceSymbolRange_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DistanceSymbolRangeHandle)>>(
      'DistanceSymbolRange_created');
  late final _DistanceSymbolRange_created = _DistanceSymbolRange_createdPtr
      .asFunction<void Function(imp1.RT_DistanceSymbolRangeHandle)>();

  void DistanceSymbolRange_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DistanceSymbolRange_destroy(
      handle,
    );
  }

  late final _DistanceSymbolRange_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DistanceSymbolRange_destroy');
  late final _DistanceSymbolRange_destroy = _DistanceSymbolRange_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Distance_created(
    imp1.RT_DistanceHandle handle,
  ) {
    return _Distance_created(
      handle,
    );
  }

  late final _Distance_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_DistanceHandle)>>(
          'Distance_created');
  late final _Distance_created =
      _Distance_createdPtr.asFunction<void Function(imp1.RT_DistanceHandle)>();

  void Distance_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Distance_destroy(
      handle,
    );
  }

  late final _Distance_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Distance_destroy');
  late final _Distance_destroy =
      _Distance_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DomainDescription_created(
    imp1.RT_DomainDescriptionHandle handle,
  ) {
    return _DomainDescription_created(
      handle,
    );
  }

  late final _DomainDescription_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_DomainDescriptionHandle)>>(
      'DomainDescription_created');
  late final _DomainDescription_created = _DomainDescription_createdPtr
      .asFunction<void Function(imp1.RT_DomainDescriptionHandle)>();

  void DomainDescription_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DomainDescription_destroy(
      handle,
    );
  }

  late final _DomainDescription_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DomainDescription_destroy');
  late final _DomainDescription_destroy = _DomainDescription_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Domain_created(
    imp1.RT_DomainHandle handle,
  ) {
    return _Domain_created(
      handle,
    );
  }

  late final _Domain_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_DomainHandle)>>(
          'Domain_created');
  late final _Domain_created =
      _Domain_createdPtr.asFunction<void Function(imp1.RT_DomainHandle)>();

  void Domain_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Domain_destroy(
      handle,
    );
  }

  late final _Domain_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Domain_destroy');
  late final _Domain_destroy =
      _Domain_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DownloadPreplannedOfflineMapParameters_created(
    imp1.RT_DownloadPreplannedOfflineMapParametersHandle handle,
  ) {
    return _DownloadPreplannedOfflineMapParameters_created(
      handle,
    );
  }

  late final _DownloadPreplannedOfflineMapParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_DownloadPreplannedOfflineMapParametersHandle)>>(
      'DownloadPreplannedOfflineMapParameters_created');
  late final _DownloadPreplannedOfflineMapParameters_created =
      _DownloadPreplannedOfflineMapParameters_createdPtr.asFunction<
          void Function(
              imp1.RT_DownloadPreplannedOfflineMapParametersHandle)>();

  void DownloadPreplannedOfflineMapParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DownloadPreplannedOfflineMapParameters_destroy(
      handle,
    );
  }

  late final _DownloadPreplannedOfflineMapParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DownloadPreplannedOfflineMapParameters_destroy');
  late final _DownloadPreplannedOfflineMapParameters_destroy =
      _DownloadPreplannedOfflineMapParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DownloadPreplannedOfflineMapResult_created(
    imp1.RT_DownloadPreplannedOfflineMapResultHandle handle,
  ) {
    return _DownloadPreplannedOfflineMapResult_created(
      handle,
    );
  }

  late final _DownloadPreplannedOfflineMapResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_DownloadPreplannedOfflineMapResultHandle)>>(
      'DownloadPreplannedOfflineMapResult_created');
  late final _DownloadPreplannedOfflineMapResult_created =
      _DownloadPreplannedOfflineMapResult_createdPtr.asFunction<
          void Function(imp1.RT_DownloadPreplannedOfflineMapResultHandle)>();

  void DownloadPreplannedOfflineMapResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DownloadPreplannedOfflineMapResult_destroy(
      handle,
    );
  }

  late final _DownloadPreplannedOfflineMapResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DownloadPreplannedOfflineMapResult_destroy');
  late final _DownloadPreplannedOfflineMapResult_destroy =
      _DownloadPreplannedOfflineMapResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DrawingInfo_created(
    imp1.RT_DrawingInfoHandle handle,
  ) {
    return _DrawingInfo_created(
      handle,
    );
  }

  late final _DrawingInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_DrawingInfoHandle)>>(
          'DrawingInfo_created');
  late final _DrawingInfo_created = _DrawingInfo_createdPtr.asFunction<
      void Function(imp1.RT_DrawingInfoHandle)>();

  void DrawingInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DrawingInfo_destroy(
      handle,
    );
  }

  late final _DrawingInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DrawingInfo_destroy');
  late final _DrawingInfo_destroy = _DrawingInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityChangedInfo_created(
    RT_DynamicEntityChangedInfoHandle handle,
  ) {
    return _DynamicEntityChangedInfo_created(
      handle,
    );
  }

  late final _DynamicEntityChangedInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_DynamicEntityChangedInfoHandle)>>(
      'DynamicEntityChangedInfo_created');
  late final _DynamicEntityChangedInfo_created =
      _DynamicEntityChangedInfo_createdPtr.asFunction<
          void Function(RT_DynamicEntityChangedInfoHandle)>();

  void DynamicEntityChangedInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityChangedInfo_destroy(
      handle,
    );
  }

  late final _DynamicEntityChangedInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityChangedInfo_destroy');
  late final _DynamicEntityChangedInfo_destroy =
      _DynamicEntityChangedInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityDataSourceInfo_created(
    RT_DynamicEntityDataSourceInfoHandle handle,
  ) {
    return _DynamicEntityDataSourceInfo_created(
      handle,
    );
  }

  late final _DynamicEntityDataSourceInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_DynamicEntityDataSourceInfoHandle)>>(
      'DynamicEntityDataSourceInfo_created');
  late final _DynamicEntityDataSourceInfo_created =
      _DynamicEntityDataSourceInfo_createdPtr.asFunction<
          void Function(RT_DynamicEntityDataSourceInfoHandle)>();

  void DynamicEntityDataSourceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityDataSourceInfo_destroy(
      handle,
    );
  }

  late final _DynamicEntityDataSourceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityDataSourceInfo_destroy');
  late final _DynamicEntityDataSourceInfo_destroy =
      _DynamicEntityDataSourceInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityDataSourcePurgeOptions_created(
    RT_DynamicEntityDataSourcePurgeOptionsHandle handle,
  ) {
    return _DynamicEntityDataSourcePurgeOptions_created(
      handle,
    );
  }

  late final _DynamicEntityDataSourcePurgeOptions_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_DynamicEntityDataSourcePurgeOptionsHandle)>>(
      'DynamicEntityDataSourcePurgeOptions_created');
  late final _DynamicEntityDataSourcePurgeOptions_created =
      _DynamicEntityDataSourcePurgeOptions_createdPtr.asFunction<
          void Function(RT_DynamicEntityDataSourcePurgeOptionsHandle)>();

  void DynamicEntityDataSourcePurgeOptions_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityDataSourcePurgeOptions_destroy(
      handle,
    );
  }

  late final _DynamicEntityDataSourcePurgeOptions_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityDataSourcePurgeOptions_destroy');
  late final _DynamicEntityDataSourcePurgeOptions_destroy =
      _DynamicEntityDataSourcePurgeOptions_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityDataSource_created(
    imp1.RT_DynamicEntityDataSourceHandle handle,
  ) {
    return _DynamicEntityDataSource_created(
      handle,
    );
  }

  late final _DynamicEntityDataSource_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DynamicEntityDataSourceHandle)>>(
      'DynamicEntityDataSource_created');
  late final _DynamicEntityDataSource_created =
      _DynamicEntityDataSource_createdPtr.asFunction<
          void Function(imp1.RT_DynamicEntityDataSourceHandle)>();

  void DynamicEntityDataSource_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityDataSource_destroy(
      handle,
    );
  }

  late final _DynamicEntityDataSource_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityDataSource_destroy');
  late final _DynamicEntityDataSource_destroy =
      _DynamicEntityDataSource_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityDataSource_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityDataSource_destroyInstance(
      handle,
    );
  }

  late final _DynamicEntityDataSource_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityDataSource_destroyInstance');
  late final _DynamicEntityDataSource_destroyInstance =
      _DynamicEntityDataSource_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityInfo_created(
    RT_DynamicEntityInfoHandle handle,
  ) {
    return _DynamicEntityInfo_created(
      handle,
    );
  }

  late final _DynamicEntityInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_DynamicEntityInfoHandle)>>(
      'DynamicEntityInfo_created');
  late final _DynamicEntityInfo_created = _DynamicEntityInfo_createdPtr
      .asFunction<void Function(RT_DynamicEntityInfoHandle)>();

  void DynamicEntityInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityInfo_destroy(
      handle,
    );
  }

  late final _DynamicEntityInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityInfo_destroy');
  late final _DynamicEntityInfo_destroy = _DynamicEntityInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityObservationInfo_created(
    RT_DynamicEntityObservationInfoHandle handle,
  ) {
    return _DynamicEntityObservationInfo_created(
      handle,
    );
  }

  late final _DynamicEntityObservationInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_DynamicEntityObservationInfoHandle)>>(
      'DynamicEntityObservationInfo_created');
  late final _DynamicEntityObservationInfo_created =
      _DynamicEntityObservationInfo_createdPtr.asFunction<
          void Function(RT_DynamicEntityObservationInfoHandle)>();

  void DynamicEntityObservationInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityObservationInfo_destroy(
      handle,
    );
  }

  late final _DynamicEntityObservationInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityObservationInfo_destroy');
  late final _DynamicEntityObservationInfo_destroy =
      _DynamicEntityObservationInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntityObservation_created(
    imp1.RT_DynamicEntityObservationHandle handle,
  ) {
    return _DynamicEntityObservation_created(
      handle,
    );
  }

  late final _DynamicEntityObservation_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DynamicEntityObservationHandle)>>(
      'DynamicEntityObservation_created');
  late final _DynamicEntityObservation_created =
      _DynamicEntityObservation_createdPtr.asFunction<
          void Function(imp1.RT_DynamicEntityObservationHandle)>();

  void DynamicEntityObservation_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntityObservation_destroy(
      handle,
    );
  }

  late final _DynamicEntityObservation_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntityObservation_destroy');
  late final _DynamicEntityObservation_destroy =
      _DynamicEntityObservation_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntity_created(
    imp1.RT_DynamicEntityHandle handle,
  ) {
    return _DynamicEntity_created(
      handle,
    );
  }

  late final _DynamicEntity_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_DynamicEntityHandle)>>(
      'DynamicEntity_created');
  late final _DynamicEntity_created = _DynamicEntity_createdPtr.asFunction<
      void Function(imp1.RT_DynamicEntityHandle)>();

  void DynamicEntity_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntity_destroy(
      handle,
    );
  }

  late final _DynamicEntity_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntity_destroy');
  late final _DynamicEntity_destroy = _DynamicEntity_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void DynamicEntity_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _DynamicEntity_destroyInstance(
      handle,
    );
  }

  late final _DynamicEntity_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DynamicEntity_destroyInstance');
  late final _DynamicEntity_destroyInstance = _DynamicEntity_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCCell_created(
    imp1.RT_ENCCellHandle handle,
  ) {
    return _ENCCell_created(
      handle,
    );
  }

  late final _ENCCell_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ENCCellHandle)>>(
          'ENCCell_created');
  late final _ENCCell_created =
      _ENCCell_createdPtr.asFunction<void Function(imp1.RT_ENCCellHandle)>();

  void ENCCell_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCCell_destroy(
      handle,
    );
  }

  late final _ENCCell_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCCell_destroy');
  late final _ENCCell_destroy =
      _ENCCell_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCDataset_created(
    imp1.RT_ENCDatasetHandle handle,
  ) {
    return _ENCDataset_created(
      handle,
    );
  }

  late final _ENCDataset_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ENCDatasetHandle)>>(
          'ENCDataset_created');
  late final _ENCDataset_created = _ENCDataset_createdPtr.asFunction<
      void Function(imp1.RT_ENCDatasetHandle)>();

  void ENCDataset_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCDataset_destroy(
      handle,
    );
  }

  late final _ENCDataset_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCDataset_destroy');
  late final _ENCDataset_destroy =
      _ENCDataset_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCDisplayCategories_created(
    RT_ENCDisplayCategoriesHandle handle,
  ) {
    return _ENCDisplayCategories_created(
      handle,
    );
  }

  late final _ENCDisplayCategories_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_ENCDisplayCategoriesHandle)>>(
      'ENCDisplayCategories_created');
  late final _ENCDisplayCategories_created = _ENCDisplayCategories_createdPtr
      .asFunction<void Function(RT_ENCDisplayCategoriesHandle)>();

  void ENCDisplayCategories_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCDisplayCategories_destroy(
      handle,
    );
  }

  late final _ENCDisplayCategories_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCDisplayCategories_destroy');
  late final _ENCDisplayCategories_destroy = _ENCDisplayCategories_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCDisplaySettings_created(
    RT_ENCDisplaySettingsHandle handle,
  ) {
    return _ENCDisplaySettings_created(
      handle,
    );
  }

  late final _ENCDisplaySettings_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_ENCDisplaySettingsHandle)>>(
      'ENCDisplaySettings_created');
  late final _ENCDisplaySettings_created = _ENCDisplaySettings_createdPtr
      .asFunction<void Function(RT_ENCDisplaySettingsHandle)>();

  void ENCDisplaySettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCDisplaySettings_destroy(
      handle,
    );
  }

  late final _ENCDisplaySettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCDisplaySettings_destroy');
  late final _ENCDisplaySettings_destroy = _ENCDisplaySettings_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCEnvironmentSettings_created(
    imp1.RT_ENCEnvironmentSettingsHandle handle,
  ) {
    return _ENCEnvironmentSettings_created(
      handle,
    );
  }

  late final _ENCEnvironmentSettings_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ENCEnvironmentSettingsHandle)>>(
      'ENCEnvironmentSettings_created');
  late final _ENCEnvironmentSettings_created =
      _ENCEnvironmentSettings_createdPtr.asFunction<
          void Function(imp1.RT_ENCEnvironmentSettingsHandle)>();

  void ENCEnvironmentSettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCEnvironmentSettings_destroy(
      handle,
    );
  }

  late final _ENCEnvironmentSettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCEnvironmentSettings_destroy');
  late final _ENCEnvironmentSettings_destroy =
      _ENCEnvironmentSettings_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ENCExchangeSet_created(
    RT_ENCExchangeSetHandle handle,
  ) {
    return _ENCExchangeSet_created(
      handle,
    );
  }

  late final _ENCExchangeSet_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_ENCExchangeSetHandle)>>(
          'ENCExchangeSet_created');
  late final _ENCExchangeSet_created = _ENCExchangeSet_createdPtr.asFunction<
      void Function(RT_ENCExchangeSetHandle)>();

  void ENCExchangeSet_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCExchangeSet_destroy(
      handle,
    );
  }

  late final _ENCExchangeSet_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCExchangeSet_destroy');
  late final _ENCExchangeSet_destroy = _ENCExchangeSet_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ENCFeature_created(
    imp1.RT_ENCFeatureHandle handle,
  ) {
    return _ENCFeature_created(
      handle,
    );
  }

  late final _ENCFeature_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ENCFeatureHandle)>>(
          'ENCFeature_created');
  late final _ENCFeature_created = _ENCFeature_createdPtr.asFunction<
      void Function(imp1.RT_ENCFeatureHandle)>();

  void ENCFeature_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCFeature_destroy(
      handle,
    );
  }

  late final _ENCFeature_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCFeature_destroy');
  late final _ENCFeature_destroy =
      _ENCFeature_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCGraphicCursor_created(
    RT_ENCGraphicCursorHandle handle,
  ) {
    return _ENCGraphicCursor_created(
      handle,
    );
  }

  late final _ENCGraphicCursor_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_ENCGraphicCursorHandle)>>(
          'ENCGraphicCursor_created');
  late final _ENCGraphicCursor_created = _ENCGraphicCursor_createdPtr
      .asFunction<void Function(RT_ENCGraphicCursorHandle)>();

  void ENCGraphicCursor_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCGraphicCursor_destroy(
      handle,
    );
  }

  late final _ENCGraphicCursor_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCGraphicCursor_destroy');
  late final _ENCGraphicCursor_destroy = _ENCGraphicCursor_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCMarinerSettings_created(
    RT_ENCMarinerSettingsHandle handle,
  ) {
    return _ENCMarinerSettings_created(
      handle,
    );
  }

  late final _ENCMarinerSettings_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_ENCMarinerSettingsHandle)>>(
      'ENCMarinerSettings_created');
  late final _ENCMarinerSettings_created = _ENCMarinerSettings_createdPtr
      .asFunction<void Function(RT_ENCMarinerSettingsHandle)>();

  void ENCMarinerSettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCMarinerSettings_destroy(
      handle,
    );
  }

  late final _ENCMarinerSettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCMarinerSettings_destroy');
  late final _ENCMarinerSettings_destroy = _ENCMarinerSettings_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ENCTextGroupVisibilitySettings_created(
    RT_ENCTextGroupVisibilitySettingsHandle handle,
  ) {
    return _ENCTextGroupVisibilitySettings_created(
      handle,
    );
  }

  late final _ENCTextGroupVisibilitySettings_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_ENCTextGroupVisibilitySettingsHandle)>>(
      'ENCTextGroupVisibilitySettings_created');
  late final _ENCTextGroupVisibilitySettings_created =
      _ENCTextGroupVisibilitySettings_createdPtr.asFunction<
          void Function(RT_ENCTextGroupVisibilitySettingsHandle)>();

  void ENCTextGroupVisibilitySettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCTextGroupVisibilitySettings_destroy(
      handle,
    );
  }

  late final _ENCTextGroupVisibilitySettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCTextGroupVisibilitySettings_destroy');
  late final _ENCTextGroupVisibilitySettings_destroy =
      _ENCTextGroupVisibilitySettings_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ENCViewingGroupSettings_created(
    RT_ENCViewingGroupSettingsHandle handle,
  ) {
    return _ENCViewingGroupSettings_created(
      handle,
    );
  }

  late final _ENCViewingGroupSettings_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_ENCViewingGroupSettingsHandle)>>(
      'ENCViewingGroupSettings_created');
  late final _ENCViewingGroupSettings_created =
      _ENCViewingGroupSettings_createdPtr.asFunction<
          void Function(RT_ENCViewingGroupSettingsHandle)>();

  void ENCViewingGroupSettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ENCViewingGroupSettings_destroy(
      handle,
    );
  }

  late final _ENCViewingGroupSettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ENCViewingGroupSettings_destroy');
  late final _ENCViewingGroupSettings_destroy =
      _ENCViewingGroupSettings_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void EditFieldsInfo_created(
    imp1.RT_EditFieldsInfoHandle handle,
  ) {
    return _EditFieldsInfo_created(
      handle,
    );
  }

  late final _EditFieldsInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_EditFieldsInfoHandle)>>(
      'EditFieldsInfo_created');
  late final _EditFieldsInfo_created = _EditFieldsInfo_createdPtr.asFunction<
      void Function(imp1.RT_EditFieldsInfoHandle)>();

  void EditFieldsInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _EditFieldsInfo_destroy(
      handle,
    );
  }

  late final _EditFieldsInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'EditFieldsInfo_destroy');
  late final _EditFieldsInfo_destroy = _EditFieldsInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void EditResult_created(
    imp1.RT_EditResultHandle handle,
  ) {
    return _EditResult_created(
      handle,
    );
  }

  late final _EditResult_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_EditResultHandle)>>(
          'EditResult_created');
  late final _EditResult_created = _EditResult_createdPtr.asFunction<
      void Function(imp1.RT_EditResultHandle)>();

  void EditResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _EditResult_destroy(
      handle,
    );
  }

  late final _EditResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'EditResult_destroy');
  late final _EditResult_destroy =
      _EditResult_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void EditorTrackingInfo_created(
    imp1.RT_EditorTrackingInfoHandle handle,
  ) {
    return _EditorTrackingInfo_created(
      handle,
    );
  }

  late final _EditorTrackingInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_EditorTrackingInfoHandle)>>(
      'EditorTrackingInfo_created');
  late final _EditorTrackingInfo_created = _EditorTrackingInfo_createdPtr
      .asFunction<void Function(imp1.RT_EditorTrackingInfoHandle)>();

  void EditorTrackingInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _EditorTrackingInfo_destroy(
      handle,
    );
  }

  late final _EditorTrackingInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'EditorTrackingInfo_destroy');
  late final _EditorTrackingInfo_destroy = _EditorTrackingInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ElementReference_created(
    imp1.RT_ElementReferenceHandle handle,
  ) {
    return _ElementReference_created(
      handle,
    );
  }

  late final _ElementReference_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ElementReferenceHandle)>>(
      'ElementReference_created');
  late final _ElementReference_created = _ElementReference_createdPtr
      .asFunction<void Function(imp1.RT_ElementReferenceHandle)>();

  void ElementReference_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ElementReference_destroy(
      handle,
    );
  }

  late final _ElementReference_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ElementReference_destroy');
  late final _ElementReference_destroy = _ElementReference_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Element_created(
    imp1.RT_ElementHandle handle,
  ) {
    return _Element_created(
      handle,
    );
  }

  late final _Element_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ElementHandle)>>(
          'Element_created');
  late final _Element_created =
      _Element_createdPtr.asFunction<void Function(imp1.RT_ElementHandle)>();

  void Element_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Element_destroy(
      handle,
    );
  }

  late final _Element_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Element_destroy');
  late final _Element_destroy =
      _Element_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ElevationSourceViewState_created(
    imp1.RT_ElevationSourceViewStateHandle handle,
  ) {
    return _ElevationSourceViewState_created(
      handle,
    );
  }

  late final _ElevationSourceViewState_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ElevationSourceViewStateHandle)>>(
      'ElevationSourceViewState_created');
  late final _ElevationSourceViewState_created =
      _ElevationSourceViewState_createdPtr.asFunction<
          void Function(imp1.RT_ElevationSourceViewStateHandle)>();

  void ElevationSourceViewState_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ElevationSourceViewState_destroy(
      handle,
    );
  }

  late final _ElevationSourceViewState_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ElevationSourceViewState_destroy');
  late final _ElevationSourceViewState_destroy =
      _ElevationSourceViewState_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ElevationSource_created(
    imp1.RT_ElevationSourceHandle handle,
  ) {
    return _ElevationSource_created(
      handle,
    );
  }

  late final _ElevationSource_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ElevationSourceHandle)>>(
      'ElevationSource_created');
  late final _ElevationSource_created = _ElevationSource_createdPtr.asFunction<
      void Function(imp1.RT_ElevationSourceHandle)>();

  void ElevationSource_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ElevationSource_destroy(
      handle,
    );
  }

  late final _ElevationSource_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ElevationSource_destroy');
  late final _ElevationSource_destroy = _ElevationSource_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ElevationSource_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ElevationSource_destroyInstance(
      handle,
    );
  }

  late final _ElevationSource_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ElevationSource_destroyInstance');
  late final _ElevationSource_destroyInstance =
      _ElevationSource_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Error_created(
    imp1.RT_ErrorHandle handle,
  ) {
    return _Error_created(
      handle,
    );
  }

  late final _Error_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ErrorHandle)>>(
          'Error_created');
  late final _Error_created =
      _Error_createdPtr.asFunction<void Function(imp1.RT_ErrorHandle)>();

  void Error_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Error_destroy(
      handle,
    );
  }

  late final _Error_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Error_destroy');
  late final _Error_destroy =
      _Error_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void EstimateTileCacheSizeResult_created(
    imp1.RT_EstimateTileCacheSizeResultHandle handle,
  ) {
    return _EstimateTileCacheSizeResult_created(
      handle,
    );
  }

  late final _EstimateTileCacheSizeResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_EstimateTileCacheSizeResultHandle)>>(
      'EstimateTileCacheSizeResult_created');
  late final _EstimateTileCacheSizeResult_created =
      _EstimateTileCacheSizeResult_createdPtr.asFunction<
          void Function(imp1.RT_EstimateTileCacheSizeResultHandle)>();

  void EstimateTileCacheSizeResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _EstimateTileCacheSizeResult_destroy(
      handle,
    );
  }

  late final _EstimateTileCacheSizeResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'EstimateTileCacheSizeResult_destroy');
  late final _EstimateTileCacheSizeResult_destroy =
      _EstimateTileCacheSizeResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Expiration_created(
    imp1.RT_ExpirationHandle handle,
  ) {
    return _Expiration_created(
      handle,
    );
  }

  late final _Expiration_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ExpirationHandle)>>(
          'Expiration_created');
  late final _Expiration_created = _Expiration_createdPtr.asFunction<
      void Function(imp1.RT_ExpirationHandle)>();

  void Expiration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Expiration_destroy(
      handle,
    );
  }

  late final _Expiration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Expiration_destroy');
  late final _Expiration_destroy =
      _Expiration_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ExportTileCacheParameters_created(
    imp1.RT_ExportTileCacheParametersHandle handle,
  ) {
    return _ExportTileCacheParameters_created(
      handle,
    );
  }

  late final _ExportTileCacheParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportTileCacheParametersHandle)>>(
      'ExportTileCacheParameters_created');
  late final _ExportTileCacheParameters_created =
      _ExportTileCacheParameters_createdPtr.asFunction<
          void Function(imp1.RT_ExportTileCacheParametersHandle)>();

  void ExportTileCacheParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExportTileCacheParameters_destroy(
      handle,
    );
  }

  late final _ExportTileCacheParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExportTileCacheParameters_destroy');
  late final _ExportTileCacheParameters_destroy =
      _ExportTileCacheParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ExportTileCacheParameters_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExportTileCacheParameters_destroyInstance(
      handle,
    );
  }

  late final _ExportTileCacheParameters_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExportTileCacheParameters_destroyInstance');
  late final _ExportTileCacheParameters_destroyInstance =
      _ExportTileCacheParameters_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ExportTileCacheTask_created(
    imp1.RT_ExportTileCacheTaskHandle handle,
  ) {
    return _ExportTileCacheTask_created(
      handle,
    );
  }

  late final _ExportTileCacheTask_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportTileCacheTaskHandle)>>(
      'ExportTileCacheTask_created');
  late final _ExportTileCacheTask_created = _ExportTileCacheTask_createdPtr
      .asFunction<void Function(imp1.RT_ExportTileCacheTaskHandle)>();

  void ExportTileCacheTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExportTileCacheTask_destroy(
      handle,
    );
  }

  late final _ExportTileCacheTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExportTileCacheTask_destroy');
  late final _ExportTileCacheTask_destroy = _ExportTileCacheTask_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ExportVectorTilesParameters_created(
    imp1.RT_ExportVectorTilesParametersHandle handle,
  ) {
    return _ExportVectorTilesParameters_created(
      handle,
    );
  }

  late final _ExportVectorTilesParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportVectorTilesParametersHandle)>>(
      'ExportVectorTilesParameters_created');
  late final _ExportVectorTilesParameters_created =
      _ExportVectorTilesParameters_createdPtr.asFunction<
          void Function(imp1.RT_ExportVectorTilesParametersHandle)>();

  void ExportVectorTilesParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExportVectorTilesParameters_destroy(
      handle,
    );
  }

  late final _ExportVectorTilesParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExportVectorTilesParameters_destroy');
  late final _ExportVectorTilesParameters_destroy =
      _ExportVectorTilesParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ExportVectorTilesParameters_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExportVectorTilesParameters_destroyInstance(
      handle,
    );
  }

  late final _ExportVectorTilesParameters_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExportVectorTilesParameters_destroyInstance');
  late final _ExportVectorTilesParameters_destroyInstance =
      _ExportVectorTilesParameters_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ExportVectorTilesResult_created(
    imp1.RT_ExportVectorTilesResultHandle handle,
  ) {
    return _ExportVectorTilesResult_created(
      handle,
    );
  }

  late final _ExportVectorTilesResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportVectorTilesResultHandle)>>(
      'ExportVectorTilesResult_created');
  late final _ExportVectorTilesResult_created =
      _ExportVectorTilesResult_createdPtr.asFunction<
          void Function(imp1.RT_ExportVectorTilesResultHandle)>();

  void ExportVectorTilesResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExportVectorTilesResult_destroy(
      handle,
    );
  }

  late final _ExportVectorTilesResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExportVectorTilesResult_destroy');
  late final _ExportVectorTilesResult_destroy =
      _ExportVectorTilesResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ExportVectorTilesTask_created(
    imp1.RT_ExportVectorTilesTaskHandle handle,
  ) {
    return _ExportVectorTilesTask_created(
      handle,
    );
  }

  late final _ExportVectorTilesTask_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportVectorTilesTaskHandle)>>(
      'ExportVectorTilesTask_created');
  late final _ExportVectorTilesTask_created = _ExportVectorTilesTask_createdPtr
      .asFunction<void Function(imp1.RT_ExportVectorTilesTaskHandle)>();

  void ExportVectorTilesTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExportVectorTilesTask_destroy(
      handle,
    );
  }

  late final _ExportVectorTilesTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExportVectorTilesTask_destroy');
  late final _ExportVectorTilesTask_destroy = _ExportVectorTilesTask_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ExpressionQueryResult_created(
    RT_ExpressionQueryResultHandle handle,
  ) {
    return _ExpressionQueryResult_created(
      handle,
    );
  }

  late final _ExpressionQueryResult_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_ExpressionQueryResultHandle)>>(
      'ExpressionQueryResult_created');
  late final _ExpressionQueryResult_created = _ExpressionQueryResult_createdPtr
      .asFunction<void Function(RT_ExpressionQueryResultHandle)>();

  void ExpressionQueryResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExpressionQueryResult_destroy(
      handle,
    );
  }

  late final _ExpressionQueryResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExpressionQueryResult_destroy');
  late final _ExpressionQueryResult_destroy = _ExpressionQueryResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ExtensionLicense_created(
    imp1.RT_ExtensionLicenseHandle handle,
  ) {
    return _ExtensionLicense_created(
      handle,
    );
  }

  late final _ExtensionLicense_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ExtensionLicenseHandle)>>(
      'ExtensionLicense_created');
  late final _ExtensionLicense_created = _ExtensionLicense_createdPtr
      .asFunction<void Function(imp1.RT_ExtensionLicenseHandle)>();

  void ExtensionLicense_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ExtensionLicense_destroy(
      handle,
    );
  }

  late final _ExtensionLicense_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ExtensionLicense_destroy');
  late final _ExtensionLicense_destroy = _ExtensionLicense_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FacilityLayerDefinition_created(
    RT_FacilityLayerDefinitionHandle handle,
  ) {
    return _FacilityLayerDefinition_created(
      handle,
    );
  }

  late final _FacilityLayerDefinition_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_FacilityLayerDefinitionHandle)>>(
      'FacilityLayerDefinition_created');
  late final _FacilityLayerDefinition_created =
      _FacilityLayerDefinition_createdPtr.asFunction<
          void Function(RT_FacilityLayerDefinitionHandle)>();

  void FacilityLayerDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FacilityLayerDefinition_destroy(
      handle,
    );
  }

  late final _FacilityLayerDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FacilityLayerDefinition_destroy');
  late final _FacilityLayerDefinition_destroy =
      _FacilityLayerDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Facility_created(
    imp1.RT_FacilityHandle handle,
  ) {
    return _Facility_created(
      handle,
    );
  }

  late final _Facility_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FacilityHandle)>>(
          'Facility_created');
  late final _Facility_created =
      _Facility_createdPtr.asFunction<void Function(imp1.RT_FacilityHandle)>();

  void Facility_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Facility_destroy(
      handle,
    );
  }

  late final _Facility_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Facility_destroy');
  late final _Facility_destroy =
      _Facility_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureCollection_created(
    imp1.RT_FeatureCollectionHandle handle,
  ) {
    return _FeatureCollection_created(
      handle,
    );
  }

  late final _FeatureCollection_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_FeatureCollectionHandle)>>(
      'FeatureCollection_created');
  late final _FeatureCollection_created = _FeatureCollection_createdPtr
      .asFunction<void Function(imp1.RT_FeatureCollectionHandle)>();

  void FeatureCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureCollection_destroy(
      handle,
    );
  }

  late final _FeatureCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureCollection_destroy');
  late final _FeatureCollection_destroy = _FeatureCollection_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureFormDefinition_created(
    imp1.RT_FeatureFormDefinitionHandle handle,
  ) {
    return _FeatureFormDefinition_created(
      handle,
    );
  }

  late final _FeatureFormDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FeatureFormDefinitionHandle)>>(
      'FeatureFormDefinition_created');
  late final _FeatureFormDefinition_created = _FeatureFormDefinition_createdPtr
      .asFunction<void Function(imp1.RT_FeatureFormDefinitionHandle)>();

  void FeatureFormDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureFormDefinition_destroy(
      handle,
    );
  }

  late final _FeatureFormDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureFormDefinition_destroy');
  late final _FeatureFormDefinition_destroy = _FeatureFormDefinition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureForm_created(
    RT_FeatureFormHandle handle,
  ) {
    return _FeatureForm_created(
      handle,
    );
  }

  late final _FeatureForm_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_FeatureFormHandle)>>(
          'FeatureForm_created');
  late final _FeatureForm_created =
      _FeatureForm_createdPtr.asFunction<void Function(RT_FeatureFormHandle)>();

  void FeatureForm_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureForm_destroy(
      handle,
    );
  }

  late final _FeatureForm_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureForm_destroy');
  late final _FeatureForm_destroy = _FeatureForm_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureQueryResult_created(
    imp1.RT_FeatureQueryResultHandle handle,
  ) {
    return _FeatureQueryResult_created(
      handle,
    );
  }

  late final _FeatureQueryResult_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_FeatureQueryResultHandle)>>(
      'FeatureQueryResult_created');
  late final _FeatureQueryResult_created = _FeatureQueryResult_createdPtr
      .asFunction<void Function(imp1.RT_FeatureQueryResultHandle)>();

  void FeatureQueryResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureQueryResult_destroy(
      handle,
    );
  }

  late final _FeatureQueryResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureQueryResult_destroy');
  late final _FeatureQueryResult_destroy = _FeatureQueryResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureReduction_created(
    imp1.RT_FeatureReductionHandle handle,
  ) {
    return _FeatureReduction_created(
      handle,
    );
  }

  late final _FeatureReduction_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_FeatureReductionHandle)>>(
      'FeatureReduction_created');
  late final _FeatureReduction_created = _FeatureReduction_createdPtr
      .asFunction<void Function(imp1.RT_FeatureReductionHandle)>();

  void FeatureReduction_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureReduction_destroy(
      handle,
    );
  }

  late final _FeatureReduction_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureReduction_destroy');
  late final _FeatureReduction_destroy = _FeatureReduction_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureServiceCapabilities_created(
    imp1.RT_FeatureServiceCapabilitiesHandle handle,
  ) {
    return _FeatureServiceCapabilities_created(
      handle,
    );
  }

  late final _FeatureServiceCapabilities_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FeatureServiceCapabilitiesHandle)>>(
      'FeatureServiceCapabilities_created');
  late final _FeatureServiceCapabilities_created =
      _FeatureServiceCapabilities_createdPtr.asFunction<
          void Function(imp1.RT_FeatureServiceCapabilitiesHandle)>();

  void FeatureServiceCapabilities_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureServiceCapabilities_destroy(
      handle,
    );
  }

  late final _FeatureServiceCapabilities_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureServiceCapabilities_destroy');
  late final _FeatureServiceCapabilities_destroy =
      _FeatureServiceCapabilities_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureSubtype_created(
    imp1.RT_FeatureSubtypeHandle handle,
  ) {
    return _FeatureSubtype_created(
      handle,
    );
  }

  late final _FeatureSubtype_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureSubtypeHandle)>>(
      'FeatureSubtype_created');
  late final _FeatureSubtype_created = _FeatureSubtype_createdPtr.asFunction<
      void Function(imp1.RT_FeatureSubtypeHandle)>();

  void FeatureSubtype_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureSubtype_destroy(
      handle,
    );
  }

  late final _FeatureSubtype_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureSubtype_destroy');
  late final _FeatureSubtype_destroy = _FeatureSubtype_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureTableEditResult_created(
    imp1.RT_FeatureTableEditResultHandle handle,
  ) {
    return _FeatureTableEditResult_created(
      handle,
    );
  }

  late final _FeatureTableEditResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FeatureTableEditResultHandle)>>(
      'FeatureTableEditResult_created');
  late final _FeatureTableEditResult_created =
      _FeatureTableEditResult_createdPtr.asFunction<
          void Function(imp1.RT_FeatureTableEditResultHandle)>();

  void FeatureTableEditResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureTableEditResult_destroy(
      handle,
    );
  }

  late final _FeatureTableEditResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureTableEditResult_destroy');
  late final _FeatureTableEditResult_destroy =
      _FeatureTableEditResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureTable_created(
    imp1.RT_FeatureTableHandle handle,
  ) {
    return _FeatureTable_created(
      handle,
    );
  }

  late final _FeatureTable_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureTableHandle)>>(
      'FeatureTable_created');
  late final _FeatureTable_created = _FeatureTable_createdPtr.asFunction<
      void Function(imp1.RT_FeatureTableHandle)>();

  void FeatureTable_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureTable_destroy(
      handle,
    );
  }

  late final _FeatureTable_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureTable_destroy');
  late final _FeatureTable_destroy = _FeatureTable_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureTable_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureTable_destroyInstance(
      handle,
    );
  }

  late final _FeatureTable_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureTable_destroyInstance');
  late final _FeatureTable_destroyInstance = _FeatureTable_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureTemplate_created(
    imp1.RT_FeatureTemplateHandle handle,
  ) {
    return _FeatureTemplate_created(
      handle,
    );
  }

  late final _FeatureTemplate_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureTemplateHandle)>>(
      'FeatureTemplate_created');
  late final _FeatureTemplate_created = _FeatureTemplate_createdPtr.asFunction<
      void Function(imp1.RT_FeatureTemplateHandle)>();

  void FeatureTemplate_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureTemplate_destroy(
      handle,
    );
  }

  late final _FeatureTemplate_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureTemplate_destroy');
  late final _FeatureTemplate_destroy = _FeatureTemplate_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FeatureType_created(
    imp1.RT_FeatureTypeHandle handle,
  ) {
    return _FeatureType_created(
      handle,
    );
  }

  late final _FeatureType_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureTypeHandle)>>(
          'FeatureType_created');
  late final _FeatureType_created = _FeatureType_createdPtr.asFunction<
      void Function(imp1.RT_FeatureTypeHandle)>();

  void FeatureType_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FeatureType_destroy(
      handle,
    );
  }

  late final _FeatureType_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FeatureType_destroy');
  late final _FeatureType_destroy = _FeatureType_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Feature_created(
    imp1.RT_FeatureHandle handle,
  ) {
    return _Feature_created(
      handle,
    );
  }

  late final _Feature_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureHandle)>>(
          'Feature_created');
  late final _Feature_created =
      _Feature_createdPtr.asFunction<void Function(imp1.RT_FeatureHandle)>();

  void Feature_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Feature_destroy(
      handle,
    );
  }

  late final _Feature_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Feature_destroy');
  late final _Feature_destroy =
      _Feature_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Feature_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Feature_destroyInstance(
      handle,
    );
  }

  late final _Feature_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Feature_destroyInstance');
  late final _Feature_destroyInstance = _Feature_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FenceParameters_created(
    RT_FenceParametersHandle handle,
  ) {
    return _FenceParameters_created(
      handle,
    );
  }

  late final _FenceParameters_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_FenceParametersHandle)>>(
          'FenceParameters_created');
  late final _FenceParameters_created = _FenceParameters_createdPtr.asFunction<
      void Function(RT_FenceParametersHandle)>();

  void FenceParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FenceParameters_destroy(
      handle,
    );
  }

  late final _FenceParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FenceParameters_destroy');
  late final _FenceParameters_destroy = _FenceParameters_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FieldDescription_created(
    imp1.RT_FieldDescriptionHandle handle,
  ) {
    return _FieldDescription_created(
      handle,
    );
  }

  late final _FieldDescription_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_FieldDescriptionHandle)>>(
      'FieldDescription_created');
  late final _FieldDescription_created = _FieldDescription_createdPtr
      .asFunction<void Function(imp1.RT_FieldDescriptionHandle)>();

  void FieldDescription_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FieldDescription_destroy(
      handle,
    );
  }

  late final _FieldDescription_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FieldDescription_destroy');
  late final _FieldDescription_destroy = _FieldDescription_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FieldGroup_created(
    imp1.RT_FieldGroupHandle handle,
  ) {
    return _FieldGroup_created(
      handle,
    );
  }

  late final _FieldGroup_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FieldGroupHandle)>>(
          'FieldGroup_created');
  late final _FieldGroup_created = _FieldGroup_createdPtr.asFunction<
      void Function(imp1.RT_FieldGroupHandle)>();

  void FieldGroup_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FieldGroup_destroy(
      handle,
    );
  }

  late final _FieldGroup_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FieldGroup_destroy');
  late final _FieldGroup_destroy =
      _FieldGroup_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Field_created(
    imp1.RT_FieldHandle handle,
  ) {
    return _Field_created(
      handle,
    );
  }

  late final _Field_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FieldHandle)>>(
          'Field_created');
  late final _Field_created =
      _Field_createdPtr.asFunction<void Function(imp1.RT_FieldHandle)>();

  void Field_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Field_destroy(
      handle,
    );
  }

  late final _Field_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Field_destroy');
  late final _Field_destroy =
      _Field_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FloorFacility_created(
    imp1.RT_FloorFacilityHandle handle,
  ) {
    return _FloorFacility_created(
      handle,
    );
  }

  late final _FloorFacility_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorFacilityHandle)>>(
      'FloorFacility_created');
  late final _FloorFacility_created = _FloorFacility_createdPtr.asFunction<
      void Function(imp1.RT_FloorFacilityHandle)>();

  void FloorFacility_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorFacility_destroy(
      handle,
    );
  }

  late final _FloorFacility_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorFacility_destroy');
  late final _FloorFacility_destroy = _FloorFacility_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FloorFacility_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorFacility_destroyInstance(
      handle,
    );
  }

  late final _FloorFacility_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorFacility_destroyInstance');
  late final _FloorFacility_destroyInstance = _FloorFacility_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FloorLevel_created(
    imp1.RT_FloorLevelHandle handle,
  ) {
    return _FloorLevel_created(
      handle,
    );
  }

  late final _FloorLevel_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorLevelHandle)>>(
          'FloorLevel_created');
  late final _FloorLevel_created = _FloorLevel_createdPtr.asFunction<
      void Function(imp1.RT_FloorLevelHandle)>();

  void FloorLevel_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorLevel_destroy(
      handle,
    );
  }

  late final _FloorLevel_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorLevel_destroy');
  late final _FloorLevel_destroy =
      _FloorLevel_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FloorLevel_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorLevel_destroyInstance(
      handle,
    );
  }

  late final _FloorLevel_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorLevel_destroyInstance');
  late final _FloorLevel_destroyInstance = _FloorLevel_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FloorManager_created(
    imp1.RT_FloorManagerHandle handle,
  ) {
    return _FloorManager_created(
      handle,
    );
  }

  late final _FloorManager_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorManagerHandle)>>(
      'FloorManager_created');
  late final _FloorManager_created = _FloorManager_createdPtr.asFunction<
      void Function(imp1.RT_FloorManagerHandle)>();

  void FloorManager_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorManager_destroy(
      handle,
    );
  }

  late final _FloorManager_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorManager_destroy');
  late final _FloorManager_destroy = _FloorManager_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FloorManager_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorManager_destroyInstance(
      handle,
    );
  }

  late final _FloorManager_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorManager_destroyInstance');
  late final _FloorManager_destroyInstance = _FloorManager_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FloorSite_created(
    imp1.RT_FloorSiteHandle handle,
  ) {
    return _FloorSite_created(
      handle,
    );
  }

  late final _FloorSite_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorSiteHandle)>>(
          'FloorSite_created');
  late final _FloorSite_created = _FloorSite_createdPtr.asFunction<
      void Function(imp1.RT_FloorSiteHandle)>();

  void FloorSite_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorSite_destroy(
      handle,
    );
  }

  late final _FloorSite_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorSite_destroy');
  late final _FloorSite_destroy =
      _FloorSite_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FloorSite_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FloorSite_destroyInstance(
      handle,
    );
  }

  late final _FloorSite_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FloorSite_destroyInstance');
  late final _FloorSite_destroyInstance = _FloorSite_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FormAttachment_created(
    imp1.RT_FormAttachmentHandle handle,
  ) {
    return _FormAttachment_created(
      handle,
    );
  }

  late final _FormAttachment_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FormAttachmentHandle)>>(
      'FormAttachment_created');
  late final _FormAttachment_created = _FormAttachment_createdPtr.asFunction<
      void Function(imp1.RT_FormAttachmentHandle)>();

  void FormAttachment_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FormAttachment_destroy(
      handle,
    );
  }

  late final _FormAttachment_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FormAttachment_destroy');
  late final _FormAttachment_destroy = _FormAttachment_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FormAttachment_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FormAttachment_destroyInstance(
      handle,
    );
  }

  late final _FormAttachment_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FormAttachment_destroyInstance');
  late final _FormAttachment_destroyInstance =
      _FormAttachment_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void FormElementDefinition_created(
    imp1.RT_FormElementDefinitionHandle handle,
  ) {
    return _FormElementDefinition_created(
      handle,
    );
  }

  late final _FormElementDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FormElementDefinitionHandle)>>(
      'FormElementDefinition_created');
  late final _FormElementDefinition_created = _FormElementDefinition_createdPtr
      .asFunction<void Function(imp1.RT_FormElementDefinitionHandle)>();

  void FormElementDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FormElementDefinition_destroy(
      handle,
    );
  }

  late final _FormElementDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FormElementDefinition_destroy');
  late final _FormElementDefinition_destroy = _FormElementDefinition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FormElement_created(
    imp1.RT_FormElementHandle handle,
  ) {
    return _FormElement_created(
      handle,
    );
  }

  late final _FormElement_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_FormElementHandle)>>(
          'FormElement_created');
  late final _FormElement_created = _FormElement_createdPtr.asFunction<
      void Function(imp1.RT_FormElementHandle)>();

  void FormElement_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FormElement_destroy(
      handle,
    );
  }

  late final _FormElement_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FormElement_destroy');
  late final _FormElement_destroy = _FormElement_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void FormElement_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FormElement_destroyInstance(
      handle,
    );
  }

  late final _FormElement_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FormElement_destroyInstance');
  late final _FormElement_destroyInstance = _FormElement_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void FormExpressionEvaluationError_created(
    imp1.RT_FormExpressionEvaluationErrorHandle handle,
  ) {
    return _FormExpressionEvaluationError_created(
      handle,
    );
  }

  late final _FormExpressionEvaluationError_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FormExpressionEvaluationErrorHandle)>>(
      'FormExpressionEvaluationError_created');
  late final _FormExpressionEvaluationError_created =
      _FormExpressionEvaluationError_createdPtr.asFunction<
          void Function(imp1.RT_FormExpressionEvaluationErrorHandle)>();

  void FormExpressionEvaluationError_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FormExpressionEvaluationError_destroy(
      handle,
    );
  }

  late final _FormExpressionEvaluationError_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FormExpressionEvaluationError_destroy');
  late final _FormExpressionEvaluationError_destroy =
      _FormExpressionEvaluationError_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void FormInput_created(
    RT_FormInputHandle handle,
  ) {
    return _FormInput_created(
      handle,
    );
  }

  late final _FormInput_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_FormInputHandle)>>(
          'FormInput_created');
  late final _FormInput_created =
      _FormInput_createdPtr.asFunction<void Function(RT_FormInputHandle)>();

  void FormInput_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _FormInput_destroy(
      handle,
    );
  }

  late final _FormInput_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'FormInput_destroy');
  late final _FormInput_destroy =
      _FormInput_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEAttributeProcessor_created(
    RT_GEAttributeProcessorHandle handle,
  ) {
    return _GEAttributeProcessor_created(
      handle,
    );
  }

  late final _GEAttributeProcessor_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GEAttributeProcessorHandle)>>(
      'GEAttributeProcessor_created');
  late final _GEAttributeProcessor_created = _GEAttributeProcessor_createdPtr
      .asFunction<void Function(RT_GEAttributeProcessorHandle)>();

  void GEAttributeProcessor_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEAttributeProcessor_destroy(
      handle,
    );
  }

  late final _GEAttributeProcessor_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEAttributeProcessor_destroy');
  late final _GEAttributeProcessor_destroy = _GEAttributeProcessor_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEAttribute_created(
    imp1.RT_GEAttributeHandle handle,
  ) {
    return _GEAttribute_created(
      handle,
    );
  }

  late final _GEAttribute_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GEAttributeHandle)>>(
          'GEAttribute_created');
  late final _GEAttribute_created = _GEAttribute_createdPtr.asFunction<
      void Function(imp1.RT_GEAttributeHandle)>();

  void GEAttribute_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEAttribute_destroy(
      handle,
    );
  }

  late final _GEAttribute_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEAttribute_destroy');
  late final _GEAttribute_destroy = _GEAttribute_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GEAuthenticationChallenge_created(
    RT_GEAuthenticationChallengeHandle handle,
  ) {
    return _GEAuthenticationChallenge_created(
      handle,
    );
  }

  late final _GEAuthenticationChallenge_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEAuthenticationChallengeHandle)>>(
      'GEAuthenticationChallenge_created');
  late final _GEAuthenticationChallenge_created =
      _GEAuthenticationChallenge_createdPtr.asFunction<
          void Function(RT_GEAuthenticationChallengeHandle)>();

  void GEAuthenticationChallenge_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEAuthenticationChallenge_destroy(
      handle,
    );
  }

  late final _GEAuthenticationChallenge_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEAuthenticationChallenge_destroy');
  late final _GEAuthenticationChallenge_destroy =
      _GEAuthenticationChallenge_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEAuthenticationConfiguration_created(
    imp1.RT_GEAuthenticationConfigurationHandle handle,
  ) {
    return _GEAuthenticationConfiguration_created(
      handle,
    );
  }

  late final _GEAuthenticationConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GEAuthenticationConfigurationHandle)>>(
      'GEAuthenticationConfiguration_created');
  late final _GEAuthenticationConfiguration_created =
      _GEAuthenticationConfiguration_createdPtr.asFunction<
          void Function(imp1.RT_GEAuthenticationConfigurationHandle)>();

  void GEAuthenticationConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEAuthenticationConfiguration_destroy(
      handle,
    );
  }

  late final _GEAuthenticationConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEAuthenticationConfiguration_destroy');
  late final _GEAuthenticationConfiguration_destroy =
      _GEAuthenticationConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEBasemap_created(
    RT_GEBasemapHandle handle,
  ) {
    return _GEBasemap_created(
      handle,
    );
  }

  late final _GEBasemap_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEBasemapHandle)>>(
          'GEBasemap_created');
  late final _GEBasemap_created =
      _GEBasemap_createdPtr.asFunction<void Function(RT_GEBasemapHandle)>();

  void GEBasemap_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEBasemap_destroy(
      handle,
    );
  }

  late final _GEBasemap_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEBasemap_destroy');
  late final _GEBasemap_destroy =
      _GEBasemap_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEBuildingSceneLayerAttributeStatistics_created(
    imp1.RT_GEBuildingSceneLayerAttributeStatisticsHandle handle,
  ) {
    return _GEBuildingSceneLayerAttributeStatistics_created(
      handle,
    );
  }

  late final _GEBuildingSceneLayerAttributeStatistics_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_GEBuildingSceneLayerAttributeStatisticsHandle)>>(
      'GEBuildingSceneLayerAttributeStatistics_created');
  late final _GEBuildingSceneLayerAttributeStatistics_created =
      _GEBuildingSceneLayerAttributeStatistics_createdPtr.asFunction<
          void Function(
              imp1.RT_GEBuildingSceneLayerAttributeStatisticsHandle)>();

  void GEBuildingSceneLayerAttributeStatistics_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEBuildingSceneLayerAttributeStatistics_destroy(
      handle,
    );
  }

  late final _GEBuildingSceneLayerAttributeStatistics_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEBuildingSceneLayerAttributeStatistics_destroy');
  late final _GEBuildingSceneLayerAttributeStatistics_destroy =
      _GEBuildingSceneLayerAttributeStatistics_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEBuildingSceneSublayerImmutableCollection_created(
    RT_GEBuildingSceneSublayerImmutableCollectionHandle handle,
  ) {
    return _GEBuildingSceneSublayerImmutableCollection_created(
      handle,
    );
  }

  late final _GEBuildingSceneSublayerImmutableCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  RT_GEBuildingSceneSublayerImmutableCollectionHandle)>>(
      'GEBuildingSceneSublayerImmutableCollection_created');
  late final _GEBuildingSceneSublayerImmutableCollection_created =
      _GEBuildingSceneSublayerImmutableCollection_createdPtr.asFunction<
          void Function(RT_GEBuildingSceneSublayerImmutableCollectionHandle)>();

  void GEBuildingSceneSublayerImmutableCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEBuildingSceneSublayerImmutableCollection_destroy(
      handle,
    );
  }

  late final _GEBuildingSceneSublayerImmutableCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEBuildingSceneSublayerImmutableCollection_destroy');
  late final _GEBuildingSceneSublayerImmutableCollection_destroy =
      _GEBuildingSceneSublayerImmutableCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEBuildingSceneSublayer_created(
    RT_GEBuildingSceneSublayerHandle handle,
  ) {
    return _GEBuildingSceneSublayer_created(
      handle,
    );
  }

  late final _GEBuildingSceneSublayer_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_GEBuildingSceneSublayerHandle)>>(
      'GEBuildingSceneSublayer_created');
  late final _GEBuildingSceneSublayer_created =
      _GEBuildingSceneSublayer_createdPtr.asFunction<
          void Function(RT_GEBuildingSceneSublayerHandle)>();

  void GEBuildingSceneSublayer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEBuildingSceneSublayer_destroy(
      handle,
    );
  }

  late final _GEBuildingSceneSublayer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEBuildingSceneSublayer_destroy');
  late final _GEBuildingSceneSublayer_destroy =
      _GEBuildingSceneSublayer_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEElevationMonitor_created(
    RT_GEElevationMonitorHandle handle,
  ) {
    return _GEElevationMonitor_created(
      handle,
    );
  }

  late final _GEElevationMonitor_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GEElevationMonitorHandle)>>(
      'GEElevationMonitor_created');
  late final _GEElevationMonitor_created = _GEElevationMonitor_createdPtr
      .asFunction<void Function(RT_GEElevationMonitorHandle)>();

  void GEElevationMonitor_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEElevationMonitor_destroy(
      handle,
    );
  }

  late final _GEElevationMonitor_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEElevationMonitor_destroy');
  late final _GEElevationMonitor_destroy = _GEElevationMonitor_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEElevationProvider_created(
    RT_GEElevationProviderHandle handle,
  ) {
    return _GEElevationProvider_created(
      handle,
    );
  }

  late final _GEElevationProvider_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GEElevationProviderHandle)>>(
      'GEElevationProvider_created');
  late final _GEElevationProvider_created = _GEElevationProvider_createdPtr
      .asFunction<void Function(RT_GEElevationProviderHandle)>();

  void GEElevationProvider_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEElevationProvider_destroy(
      handle,
    );
  }

  late final _GEElevationProvider_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEElevationProvider_destroy');
  late final _GEElevationProvider_destroy = _GEElevationProvider_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEElevationSourceCollection_created(
    RT_GEElevationSourceCollectionHandle handle,
  ) {
    return _GEElevationSourceCollection_created(
      handle,
    );
  }

  late final _GEElevationSourceCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEElevationSourceCollectionHandle)>>(
      'GEElevationSourceCollection_created');
  late final _GEElevationSourceCollection_created =
      _GEElevationSourceCollection_createdPtr.asFunction<
          void Function(RT_GEElevationSourceCollectionHandle)>();

  void GEElevationSourceCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEElevationSourceCollection_destroy(
      handle,
    );
  }

  late final _GEElevationSourceCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEElevationSourceCollection_destroy');
  late final _GEElevationSourceCollection_destroy =
      _GEElevationSourceCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEElevationSourceViewState_created(
    RT_GEElevationSourceViewStateHandle handle,
  ) {
    return _GEElevationSourceViewState_created(
      handle,
    );
  }

  late final _GEElevationSourceViewState_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEElevationSourceViewStateHandle)>>(
      'GEElevationSourceViewState_created');
  late final _GEElevationSourceViewState_created =
      _GEElevationSourceViewState_createdPtr.asFunction<
          void Function(RT_GEElevationSourceViewStateHandle)>();

  void GEElevationSourceViewState_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEElevationSourceViewState_destroy(
      handle,
    );
  }

  late final _GEElevationSourceViewState_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEElevationSourceViewState_destroy');
  late final _GEElevationSourceViewState_destroy =
      _GEElevationSourceViewState_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEElevationSource_created(
    RT_GEElevationSourceHandle handle,
  ) {
    return _GEElevationSource_created(
      handle,
    );
  }

  late final _GEElevationSource_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GEElevationSourceHandle)>>(
      'GEElevationSource_created');
  late final _GEElevationSource_created = _GEElevationSource_createdPtr
      .asFunction<void Function(RT_GEElevationSourceHandle)>();

  void GEElevationSource_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEElevationSource_destroy(
      handle,
    );
  }

  late final _GEElevationSource_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEElevationSource_destroy');
  late final _GEElevationSource_destroy = _GEElevationSource_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEExtent_created(
    RT_GEExtentHandle handle,
  ) {
    return _GEExtent_created(
      handle,
    );
  }

  late final _GEExtent_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEExtentHandle)>>(
          'GEExtent_created');
  late final _GEExtent_created =
      _GEExtent_createdPtr.asFunction<void Function(RT_GEExtentHandle)>();

  void GEExtent_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEExtent_destroy(
      handle,
    );
  }

  late final _GEExtent_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEExtent_destroy');
  late final _GEExtent_destroy =
      _GEExtent_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEHTTPRequest_created(
    RT_GEHTTPRequestHandle handle,
  ) {
    return _GEHTTPRequest_created(
      handle,
    );
  }

  late final _GEHTTPRequest_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEHTTPRequestHandle)>>(
          'GEHTTPRequest_created');
  late final _GEHTTPRequest_created = _GEHTTPRequest_createdPtr.asFunction<
      void Function(RT_GEHTTPRequestHandle)>();

  void GEHTTPRequest_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEHTTPRequest_destroy(
      handle,
    );
  }

  late final _GEHTTPRequest_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEHTTPRequest_destroy');
  late final _GEHTTPRequest_destroy = _GEHTTPRequest_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GEHTTPResponse_created(
    RT_GEHTTPResponseHandle handle,
  ) {
    return _GEHTTPResponse_created(
      handle,
    );
  }

  late final _GEHTTPResponse_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEHTTPResponseHandle)>>(
          'GEHTTPResponse_created');
  late final _GEHTTPResponse_created = _GEHTTPResponse_createdPtr.asFunction<
      void Function(RT_GEHTTPResponseHandle)>();

  void GEHTTPResponse_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEHTTPResponse_destroy(
      handle,
    );
  }

  late final _GEHTTPResponse_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEHTTPResponse_destroy');
  late final _GEHTTPResponse_destroy = _GEHTTPResponse_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GELayerCollection_created(
    RT_GELayerCollectionHandle handle,
  ) {
    return _GELayerCollection_created(
      handle,
    );
  }

  late final _GELayerCollection_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GELayerCollectionHandle)>>(
      'GELayerCollection_created');
  late final _GELayerCollection_created = _GELayerCollection_createdPtr
      .asFunction<void Function(RT_GELayerCollectionHandle)>();

  void GELayerCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GELayerCollection_destroy(
      handle,
    );
  }

  late final _GELayerCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GELayerCollection_destroy');
  late final _GELayerCollection_destroy = _GELayerCollection_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GELayerViewState_created(
    RT_GELayerViewStateHandle handle,
  ) {
    return _GELayerViewState_created(
      handle,
    );
  }

  late final _GELayerViewState_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GELayerViewStateHandle)>>(
          'GELayerViewState_created');
  late final _GELayerViewState_created = _GELayerViewState_createdPtr
      .asFunction<void Function(RT_GELayerViewStateHandle)>();

  void GELayerViewState_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GELayerViewState_destroy(
      handle,
    );
  }

  late final _GELayerViewState_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GELayerViewState_destroy');
  late final _GELayerViewState_destroy = _GELayerViewState_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GELayer_created(
    RT_GELayerHandle handle,
  ) {
    return _GELayer_created(
      handle,
    );
  }

  late final _GELayer_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GELayerHandle)>>(
          'GELayer_created');
  late final _GELayer_created =
      _GELayer_createdPtr.asFunction<void Function(RT_GELayerHandle)>();

  void GELayer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GELayer_destroy(
      handle,
    );
  }

  late final _GELayer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GELayer_destroy');
  late final _GELayer_destroy =
      _GELayer_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEMapElevation_created(
    RT_GEMapElevationHandle handle,
  ) {
    return _GEMapElevation_created(
      handle,
    );
  }

  late final _GEMapElevation_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEMapElevationHandle)>>(
          'GEMapElevation_created');
  late final _GEMapElevation_created = _GEMapElevation_createdPtr.asFunction<
      void Function(RT_GEMapElevationHandle)>();

  void GEMapElevation_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEMapElevation_destroy(
      handle,
    );
  }

  late final _GEMapElevation_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEMapElevation_destroy');
  late final _GEMapElevation_destroy = _GEMapElevation_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GEMap_created(
    RT_GEMapHandle handle,
  ) {
    return _GEMap_created(
      handle,
    );
  }

  late final _GEMap_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEMapHandle)>>(
          'GEMap_created');
  late final _GEMap_created =
      _GEMap_createdPtr.asFunction<void Function(RT_GEMapHandle)>();

  void GEMap_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEMap_destroy(
      handle,
    );
  }

  late final _GEMap_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEMap_destroy');
  late final _GEMap_destroy =
      _GEMap_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEMeshModificationCollection_created(
    RT_GEMeshModificationCollectionHandle handle,
  ) {
    return _GEMeshModificationCollection_created(
      handle,
    );
  }

  late final _GEMeshModificationCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEMeshModificationCollectionHandle)>>(
      'GEMeshModificationCollection_created');
  late final _GEMeshModificationCollection_created =
      _GEMeshModificationCollection_createdPtr.asFunction<
          void Function(RT_GEMeshModificationCollectionHandle)>();

  void GEMeshModificationCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEMeshModificationCollection_destroy(
      handle,
    );
  }

  late final _GEMeshModificationCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEMeshModificationCollection_destroy');
  late final _GEMeshModificationCollection_destroy =
      _GEMeshModificationCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEMeshModification_created(
    RT_GEMeshModificationHandle handle,
  ) {
    return _GEMeshModification_created(
      handle,
    );
  }

  late final _GEMeshModification_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GEMeshModificationHandle)>>(
      'GEMeshModification_created');
  late final _GEMeshModification_created = _GEMeshModification_createdPtr
      .asFunction<void Function(RT_GEMeshModificationHandle)>();

  void GEMeshModification_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEMeshModification_destroy(
      handle,
    );
  }

  late final _GEMeshModification_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEMeshModification_destroy');
  late final _GEMeshModification_destroy = _GEMeshModification_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEOAuthAuthorizationCredential_created(
    RT_GEOAuthAuthorizationCredentialHandle handle,
  ) {
    return _GEOAuthAuthorizationCredential_created(
      handle,
    );
  }

  late final _GEOAuthAuthorizationCredential_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEOAuthAuthorizationCredentialHandle)>>(
      'GEOAuthAuthorizationCredential_created');
  late final _GEOAuthAuthorizationCredential_created =
      _GEOAuthAuthorizationCredential_createdPtr.asFunction<
          void Function(RT_GEOAuthAuthorizationCredentialHandle)>();

  void GEOAuthAuthorizationCredential_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEOAuthAuthorizationCredential_destroy(
      handle,
    );
  }

  late final _GEOAuthAuthorizationCredential_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEOAuthAuthorizationCredential_destroy');
  late final _GEOAuthAuthorizationCredential_destroy =
      _GEOAuthAuthorizationCredential_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GESpatialFeatureFilter_created(
    RT_GESpatialFeatureFilterHandle handle,
  ) {
    return _GESpatialFeatureFilter_created(
      handle,
    );
  }

  late final _GESpatialFeatureFilter_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_GESpatialFeatureFilterHandle)>>(
      'GESpatialFeatureFilter_created');
  late final _GESpatialFeatureFilter_created =
      _GESpatialFeatureFilter_createdPtr.asFunction<
          void Function(RT_GESpatialFeatureFilterHandle)>();

  void GESpatialFeatureFilter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GESpatialFeatureFilter_destroy(
      handle,
    );
  }

  late final _GESpatialFeatureFilter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GESpatialFeatureFilter_destroy');
  late final _GESpatialFeatureFilter_destroy =
      _GESpatialFeatureFilter_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEViewStateMessage_created(
    RT_GEViewStateMessageHandle handle,
  ) {
    return _GEViewStateMessage_created(
      handle,
    );
  }

  late final _GEViewStateMessage_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GEViewStateMessageHandle)>>(
      'GEViewStateMessage_created');
  late final _GEViewStateMessage_created = _GEViewStateMessage_createdPtr
      .asFunction<void Function(RT_GEViewStateMessageHandle)>();

  void GEViewStateMessage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEViewStateMessage_destroy(
      handle,
    );
  }

  late final _GEViewStateMessage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEViewStateMessage_destroy');
  late final _GEViewStateMessage_destroy = _GEViewStateMessage_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEViewState_created(
    RT_GEViewStateHandle handle,
  ) {
    return _GEViewState_created(
      handle,
    );
  }

  late final _GEViewState_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEViewStateHandle)>>(
          'GEViewState_created');
  late final _GEViewState_created =
      _GEViewState_createdPtr.asFunction<void Function(RT_GEViewStateHandle)>();

  void GEViewState_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEViewState_destroy(
      handle,
    );
  }

  late final _GEViewState_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEViewState_destroy');
  late final _GEViewState_destroy = _GEViewState_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GEView_created(
    RT_GEViewHandle handle,
  ) {
    return _GEView_created(
      handle,
    );
  }

  late final _GEView_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GEViewHandle)>>(
          'GEView_created');
  late final _GEView_created =
      _GEView_createdPtr.asFunction<void Function(RT_GEViewHandle)>();

  void GEView_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEView_destroy(
      handle,
    );
  }

  late final _GEView_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEView_destroy');
  late final _GEView_destroy =
      _GEView_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GEVisualizationAttributeDescription_created(
    imp1.RT_GEVisualizationAttributeDescriptionHandle handle,
  ) {
    return _GEVisualizationAttributeDescription_created(
      handle,
    );
  }

  late final _GEVisualizationAttributeDescription_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_GEVisualizationAttributeDescriptionHandle)>>(
      'GEVisualizationAttributeDescription_created');
  late final _GEVisualizationAttributeDescription_created =
      _GEVisualizationAttributeDescription_createdPtr.asFunction<
          void Function(imp1.RT_GEVisualizationAttributeDescriptionHandle)>();

  void GEVisualizationAttributeDescription_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEVisualizationAttributeDescription_destroy(
      handle,
    );
  }

  late final _GEVisualizationAttributeDescription_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEVisualizationAttributeDescription_destroy');
  late final _GEVisualizationAttributeDescription_destroy =
      _GEVisualizationAttributeDescription_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GEVisualizationAttribute_created(
    imp1.RT_GEVisualizationAttributeHandle handle,
  ) {
    return _GEVisualizationAttribute_created(
      handle,
    );
  }

  late final _GEVisualizationAttribute_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GEVisualizationAttributeHandle)>>(
      'GEVisualizationAttribute_created');
  late final _GEVisualizationAttribute_created =
      _GEVisualizationAttribute_createdPtr.asFunction<
          void Function(imp1.RT_GEVisualizationAttributeHandle)>();

  void GEVisualizationAttribute_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GEVisualizationAttribute_destroy(
      handle,
    );
  }

  late final _GEVisualizationAttribute_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GEVisualizationAttribute_destroy');
  late final _GEVisualizationAttribute_destroy =
      _GEVisualizationAttribute_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GUID_created(
    imp1.RT_GUIDHandle handle,
  ) {
    return _GUID_created(
      handle,
    );
  }

  late final _GUID_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GUIDHandle)>>(
          'GUID_created');
  late final _GUID_created =
      _GUID_createdPtr.asFunction<void Function(imp1.RT_GUIDHandle)>();

  void GUID_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GUID_destroy(
      handle,
    );
  }

  late final _GUID_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GUID_destroy');
  late final _GUID_destroy =
      _GUID_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GenerateGeodatabaseParameters_created(
    imp1.RT_GenerateGeodatabaseParametersHandle handle,
  ) {
    return _GenerateGeodatabaseParameters_created(
      handle,
    );
  }

  late final _GenerateGeodatabaseParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GenerateGeodatabaseParametersHandle)>>(
      'GenerateGeodatabaseParameters_created');
  late final _GenerateGeodatabaseParameters_created =
      _GenerateGeodatabaseParameters_createdPtr.asFunction<
          void Function(imp1.RT_GenerateGeodatabaseParametersHandle)>();

  void GenerateGeodatabaseParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GenerateGeodatabaseParameters_destroy(
      handle,
    );
  }

  late final _GenerateGeodatabaseParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GenerateGeodatabaseParameters_destroy');
  late final _GenerateGeodatabaseParameters_destroy =
      _GenerateGeodatabaseParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GenerateGeodatabaseParameters_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GenerateGeodatabaseParameters_destroyInstance(
      handle,
    );
  }

  late final _GenerateGeodatabaseParameters_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GenerateGeodatabaseParameters_destroyInstance');
  late final _GenerateGeodatabaseParameters_destroyInstance =
      _GenerateGeodatabaseParameters_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GenerateLayerOption_created(
    imp1.RT_GenerateLayerOptionHandle handle,
  ) {
    return _GenerateLayerOption_created(
      handle,
    );
  }

  late final _GenerateLayerOption_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GenerateLayerOptionHandle)>>(
      'GenerateLayerOption_created');
  late final _GenerateLayerOption_created = _GenerateLayerOption_createdPtr
      .asFunction<void Function(imp1.RT_GenerateLayerOptionHandle)>();

  void GenerateLayerOption_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GenerateLayerOption_destroy(
      handle,
    );
  }

  late final _GenerateLayerOption_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GenerateLayerOption_destroy');
  late final _GenerateLayerOption_destroy = _GenerateLayerOption_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GenerateOfflineMapParameterOverrides_created(
    imp1.RT_GenerateOfflineMapParameterOverridesHandle handle,
  ) {
    return _GenerateOfflineMapParameterOverrides_created(
      handle,
    );
  }

  late final _GenerateOfflineMapParameterOverrides_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_GenerateOfflineMapParameterOverridesHandle)>>(
      'GenerateOfflineMapParameterOverrides_created');
  late final _GenerateOfflineMapParameterOverrides_created =
      _GenerateOfflineMapParameterOverrides_createdPtr.asFunction<
          void Function(imp1.RT_GenerateOfflineMapParameterOverridesHandle)>();

  void GenerateOfflineMapParameterOverrides_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GenerateOfflineMapParameterOverrides_destroy(
      handle,
    );
  }

  late final _GenerateOfflineMapParameterOverrides_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GenerateOfflineMapParameterOverrides_destroy');
  late final _GenerateOfflineMapParameterOverrides_destroy =
      _GenerateOfflineMapParameterOverrides_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GenerateOfflineMapParameters_created(
    imp1.RT_GenerateOfflineMapParametersHandle handle,
  ) {
    return _GenerateOfflineMapParameters_created(
      handle,
    );
  }

  late final _GenerateOfflineMapParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GenerateOfflineMapParametersHandle)>>(
      'GenerateOfflineMapParameters_created');
  late final _GenerateOfflineMapParameters_created =
      _GenerateOfflineMapParameters_createdPtr.asFunction<
          void Function(imp1.RT_GenerateOfflineMapParametersHandle)>();

  void GenerateOfflineMapParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GenerateOfflineMapParameters_destroy(
      handle,
    );
  }

  late final _GenerateOfflineMapParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GenerateOfflineMapParameters_destroy');
  late final _GenerateOfflineMapParameters_destroy =
      _GenerateOfflineMapParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GenerateOfflineMapResult_created(
    imp1.RT_GenerateOfflineMapResultHandle handle,
  ) {
    return _GenerateOfflineMapResult_created(
      handle,
    );
  }

  late final _GenerateOfflineMapResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GenerateOfflineMapResultHandle)>>(
      'GenerateOfflineMapResult_created');
  late final _GenerateOfflineMapResult_created =
      _GenerateOfflineMapResult_createdPtr.asFunction<
          void Function(imp1.RT_GenerateOfflineMapResultHandle)>();

  void GenerateOfflineMapResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GenerateOfflineMapResult_destroy(
      handle,
    );
  }

  late final _GenerateOfflineMapResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GenerateOfflineMapResult_destroy');
  late final _GenerateOfflineMapResult_destroy =
      _GenerateOfflineMapResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeoModelFloorDefinition_created(
    imp1.RT_GeoModelFloorDefinitionHandle handle,
  ) {
    return _GeoModelFloorDefinition_created(
      handle,
    );
  }

  late final _GeoModelFloorDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoModelFloorDefinitionHandle)>>(
      'GeoModelFloorDefinition_created');
  late final _GeoModelFloorDefinition_created =
      _GeoModelFloorDefinition_createdPtr.asFunction<
          void Function(imp1.RT_GeoModelFloorDefinitionHandle)>();

  void GeoModelFloorDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoModelFloorDefinition_destroy(
      handle,
    );
  }

  late final _GeoModelFloorDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoModelFloorDefinition_destroy');
  late final _GeoModelFloorDefinition_destroy =
      _GeoModelFloorDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeoModel_created(
    imp1.RT_GeoModelHandle handle,
  ) {
    return _GeoModel_created(
      handle,
    );
  }

  late final _GeoModel_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeoModelHandle)>>(
          'GeoModel_created');
  late final _GeoModel_created =
      _GeoModel_createdPtr.asFunction<void Function(imp1.RT_GeoModelHandle)>();

  void GeoModel_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoModel_destroy(
      handle,
    );
  }

  late final _GeoModel_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoModel_destroy');
  late final _GeoModel_destroy =
      _GeoModel_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoModel_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoModel_destroyInstance(
      handle,
    );
  }

  late final _GeoModel_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoModel_destroyInstance');
  late final _GeoModel_destroyInstance = _GeoModel_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoPackage_created(
    imp1.RT_GeoPackageHandle handle,
  ) {
    return _GeoPackage_created(
      handle,
    );
  }

  late final _GeoPackage_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeoPackageHandle)>>(
          'GeoPackage_created');
  late final _GeoPackage_created = _GeoPackage_createdPtr.asFunction<
      void Function(imp1.RT_GeoPackageHandle)>();

  void GeoPackage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoPackage_destroy(
      handle,
    );
  }

  late final _GeoPackage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoPackage_destroy');
  late final _GeoPackage_destroy =
      _GeoPackage_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoPackage_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoPackage_destroyInstance(
      handle,
    );
  }

  late final _GeoPackage_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoPackage_destroyInstance');
  late final _GeoPackage_destroyInstance = _GeoPackage_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoViewViewState_created(
    imp1.RT_GeoViewViewStateHandle handle,
  ) {
    return _GeoViewViewState_created(
      handle,
    );
  }

  late final _GeoViewViewState_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_GeoViewViewStateHandle)>>(
      'GeoViewViewState_created');
  late final _GeoViewViewState_created = _GeoViewViewState_createdPtr
      .asFunction<void Function(imp1.RT_GeoViewViewStateHandle)>();

  void GeoViewViewState_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoViewViewState_destroy(
      handle,
    );
  }

  late final _GeoViewViewState_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoViewViewState_destroy');
  late final _GeoViewViewState_destroy = _GeoViewViewState_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoView_created(
    imp1.RT_GeoViewHandle handle,
  ) {
    return _GeoView_created(
      handle,
    );
  }

  late final _GeoView_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeoViewHandle)>>(
          'GeoView_created');
  late final _GeoView_created =
      _GeoView_createdPtr.asFunction<void Function(imp1.RT_GeoViewHandle)>();

  void GeoView_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoView_destroy(
      handle,
    );
  }

  late final _GeoView_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoView_destroy');
  late final _GeoView_destroy =
      _GeoView_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeocodeParameters_created(
    imp1.RT_GeocodeParametersHandle handle,
  ) {
    return _GeocodeParameters_created(
      handle,
    );
  }

  late final _GeocodeParameters_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_GeocodeParametersHandle)>>(
      'GeocodeParameters_created');
  late final _GeocodeParameters_created = _GeocodeParameters_createdPtr
      .asFunction<void Function(imp1.RT_GeocodeParametersHandle)>();

  void GeocodeParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeocodeParameters_destroy(
      handle,
    );
  }

  late final _GeocodeParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeocodeParameters_destroy');
  late final _GeocodeParameters_destroy = _GeocodeParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeocodeResult_created(
    imp1.RT_GeocodeResultHandle handle,
  ) {
    return _GeocodeResult_created(
      handle,
    );
  }

  late final _GeocodeResult_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeocodeResultHandle)>>(
      'GeocodeResult_created');
  late final _GeocodeResult_created = _GeocodeResult_createdPtr.asFunction<
      void Function(imp1.RT_GeocodeResultHandle)>();

  void GeocodeResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeocodeResult_destroy(
      handle,
    );
  }

  late final _GeocodeResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeocodeResult_destroy');
  late final _GeocodeResult_destroy = _GeocodeResult_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GeodatabaseDeltaInfo_created(
    imp1.RT_GeodatabaseDeltaInfoHandle handle,
  ) {
    return _GeodatabaseDeltaInfo_created(
      handle,
    );
  }

  late final _GeodatabaseDeltaInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodatabaseDeltaInfoHandle)>>(
      'GeodatabaseDeltaInfo_created');
  late final _GeodatabaseDeltaInfo_created = _GeodatabaseDeltaInfo_createdPtr
      .asFunction<void Function(imp1.RT_GeodatabaseDeltaInfoHandle)>();

  void GeodatabaseDeltaInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeodatabaseDeltaInfo_destroy(
      handle,
    );
  }

  late final _GeodatabaseDeltaInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeodatabaseDeltaInfo_destroy');
  late final _GeodatabaseDeltaInfo_destroy = _GeodatabaseDeltaInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeodatabaseSyncTask_created(
    imp1.RT_GeodatabaseSyncTaskHandle handle,
  ) {
    return _GeodatabaseSyncTask_created(
      handle,
    );
  }

  late final _GeodatabaseSyncTask_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodatabaseSyncTaskHandle)>>(
      'GeodatabaseSyncTask_created');
  late final _GeodatabaseSyncTask_created = _GeodatabaseSyncTask_createdPtr
      .asFunction<void Function(imp1.RT_GeodatabaseSyncTaskHandle)>();

  void GeodatabaseSyncTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeodatabaseSyncTask_destroy(
      handle,
    );
  }

  late final _GeodatabaseSyncTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeodatabaseSyncTask_destroy');
  late final _GeodatabaseSyncTask_destroy = _GeodatabaseSyncTask_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Geodatabase_created(
    imp1.RT_GeodatabaseHandle handle,
  ) {
    return _Geodatabase_created(
      handle,
    );
  }

  late final _Geodatabase_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeodatabaseHandle)>>(
          'Geodatabase_created');
  late final _Geodatabase_created = _Geodatabase_createdPtr.asFunction<
      void Function(imp1.RT_GeodatabaseHandle)>();

  void Geodatabase_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Geodatabase_destroy(
      handle,
    );
  }

  late final _Geodatabase_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Geodatabase_destroy');
  late final _Geodatabase_destroy = _Geodatabase_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Geodatabase_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Geodatabase_destroyInstance(
      handle,
    );
  }

  late final _Geodatabase_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Geodatabase_destroyInstance');
  late final _Geodatabase_destroyInstance = _Geodatabase_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeodesicEllipseParameters_created(
    imp1.RT_GeodesicEllipseParametersHandle handle,
  ) {
    return _GeodesicEllipseParameters_created(
      handle,
    );
  }

  late final _GeodesicEllipseParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodesicEllipseParametersHandle)>>(
      'GeodesicEllipseParameters_created');
  late final _GeodesicEllipseParameters_created =
      _GeodesicEllipseParameters_createdPtr.asFunction<
          void Function(imp1.RT_GeodesicEllipseParametersHandle)>();

  void GeodesicEllipseParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeodesicEllipseParameters_destroy(
      handle,
    );
  }

  late final _GeodesicEllipseParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeodesicEllipseParameters_destroy');
  late final _GeodesicEllipseParameters_destroy =
      _GeodesicEllipseParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeodesicSectorParameters_created(
    imp1.RT_GeodesicSectorParametersHandle handle,
  ) {
    return _GeodesicSectorParameters_created(
      handle,
    );
  }

  late final _GeodesicSectorParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodesicSectorParametersHandle)>>(
      'GeodesicSectorParameters_created');
  late final _GeodesicSectorParameters_created =
      _GeodesicSectorParameters_createdPtr.asFunction<
          void Function(imp1.RT_GeodesicSectorParametersHandle)>();

  void GeodesicSectorParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeodesicSectorParameters_destroy(
      handle,
    );
  }

  late final _GeodesicSectorParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeodesicSectorParameters_destroy');
  late final _GeodesicSectorParameters_destroy =
      _GeodesicSectorParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeodeticDistanceResult_created(
    imp1.RT_GeodeticDistanceResultHandle handle,
  ) {
    return _GeodeticDistanceResult_created(
      handle,
    );
  }

  late final _GeodeticDistanceResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodeticDistanceResultHandle)>>(
      'GeodeticDistanceResult_created');
  late final _GeodeticDistanceResult_created =
      _GeodeticDistanceResult_createdPtr.asFunction<
          void Function(imp1.RT_GeodeticDistanceResultHandle)>();

  void GeodeticDistanceResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeodeticDistanceResult_destroy(
      handle,
    );
  }

  late final _GeodeticDistanceResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeodeticDistanceResult_destroy');
  late final _GeodeticDistanceResult_destroy =
      _GeodeticDistanceResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeographicTransformationStep_created(
    imp1.RT_GeographicTransformationStepHandle handle,
  ) {
    return _GeographicTransformationStep_created(
      handle,
    );
  }

  late final _GeographicTransformationStep_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeographicTransformationStepHandle)>>(
      'GeographicTransformationStep_created');
  late final _GeographicTransformationStep_created =
      _GeographicTransformationStep_createdPtr.asFunction<
          void Function(imp1.RT_GeographicTransformationStepHandle)>();

  void GeographicTransformationStep_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeographicTransformationStep_destroy(
      handle,
    );
  }

  late final _GeographicTransformationStep_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeographicTransformationStep_destroy');
  late final _GeographicTransformationStep_destroy =
      _GeographicTransformationStep_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeometricEffect_created(
    imp1.RT_GeometricEffectHandle handle,
  ) {
    return _GeometricEffect_created(
      handle,
    );
  }

  late final _GeometricEffect_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometricEffectHandle)>>(
      'GeometricEffect_created');
  late final _GeometricEffect_created = _GeometricEffect_createdPtr.asFunction<
      void Function(imp1.RT_GeometricEffectHandle)>();

  void GeometricEffect_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeometricEffect_destroy(
      handle,
    );
  }

  late final _GeometricEffect_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeometricEffect_destroy');
  late final _GeometricEffect_destroy = _GeometricEffect_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GeometryBuilder_created(
    imp1.RT_GeometryBuilderHandle handle,
  ) {
    return _GeometryBuilder_created(
      handle,
    );
  }

  late final _GeometryBuilder_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometryBuilderHandle)>>(
      'GeometryBuilder_created');
  late final _GeometryBuilder_created = _GeometryBuilder_createdPtr.asFunction<
      void Function(imp1.RT_GeometryBuilderHandle)>();

  void GeometryBuilder_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeometryBuilder_destroy(
      handle,
    );
  }

  late final _GeometryBuilder_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeometryBuilder_destroy');
  late final _GeometryBuilder_destroy = _GeometryBuilder_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GeometryEditorElement_created(
    RT_GeometryEditorElementHandle handle,
  ) {
    return _GeometryEditorElement_created(
      handle,
    );
  }

  late final _GeometryEditorElement_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_GeometryEditorElementHandle)>>(
      'GeometryEditorElement_created');
  late final _GeometryEditorElement_created = _GeometryEditorElement_createdPtr
      .asFunction<void Function(RT_GeometryEditorElementHandle)>();

  void GeometryEditorElement_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeometryEditorElement_destroy(
      handle,
    );
  }

  late final _GeometryEditorElement_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeometryEditorElement_destroy');
  late final _GeometryEditorElement_destroy = _GeometryEditorElement_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeometryEditorReticle_created(
    RT_GeometryEditorReticleHandle handle,
  ) {
    return _GeometryEditorReticle_created(
      handle,
    );
  }

  late final _GeometryEditorReticle_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_GeometryEditorReticleHandle)>>(
      'GeometryEditorReticle_created');
  late final _GeometryEditorReticle_created = _GeometryEditorReticle_createdPtr
      .asFunction<void Function(RT_GeometryEditorReticleHandle)>();

  void GeometryEditorReticle_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeometryEditorReticle_destroy(
      handle,
    );
  }

  late final _GeometryEditorReticle_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeometryEditorReticle_destroy');
  late final _GeometryEditorReticle_destroy = _GeometryEditorReticle_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeometryEditorStyle_created(
    RT_GeometryEditorStyleHandle handle,
  ) {
    return _GeometryEditorStyle_created(
      handle,
    );
  }

  late final _GeometryEditorStyle_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GeometryEditorStyleHandle)>>(
      'GeometryEditorStyle_created');
  late final _GeometryEditorStyle_created = _GeometryEditorStyle_createdPtr
      .asFunction<void Function(RT_GeometryEditorStyleHandle)>();

  void GeometryEditorStyle_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeometryEditorStyle_destroy(
      handle,
    );
  }

  late final _GeometryEditorStyle_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeometryEditorStyle_destroy');
  late final _GeometryEditorStyle_destroy = _GeometryEditorStyle_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeometryEditorTool_created(
    RT_GeometryEditorToolHandle handle,
  ) {
    return _GeometryEditorTool_created(
      handle,
    );
  }

  late final _GeometryEditorTool_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GeometryEditorToolHandle)>>(
      'GeometryEditorTool_created');
  late final _GeometryEditorTool_created = _GeometryEditorTool_createdPtr
      .asFunction<void Function(RT_GeometryEditorToolHandle)>();

  void GeometryEditorTool_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeometryEditorTool_destroy(
      handle,
    );
  }

  late final _GeometryEditorTool_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeometryEditorTool_destroy');
  late final _GeometryEditorTool_destroy = _GeometryEditorTool_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeometryEditor_created(
    imp1.RT_GeometryEditorHandle handle,
  ) {
    return _GeometryEditor_created(
      handle,
    );
  }

  late final _GeometryEditor_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometryEditorHandle)>>(
      'GeometryEditor_created');
  late final _GeometryEditor_created = _GeometryEditor_createdPtr.asFunction<
      void Function(imp1.RT_GeometryEditorHandle)>();

  void GeometryEditor_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeometryEditor_destroy(
      handle,
    );
  }

  late final _GeometryEditor_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeometryEditor_destroy');
  late final _GeometryEditor_destroy = _GeometryEditor_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Geometry_created(
    imp1.RT_GeometryHandle handle,
  ) {
    return _Geometry_created(
      handle,
    );
  }

  late final _Geometry_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometryHandle)>>(
          'Geometry_created');
  late final _Geometry_created =
      _Geometry_createdPtr.asFunction<void Function(imp1.RT_GeometryHandle)>();

  void Geometry_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Geometry_destroy(
      handle,
    );
  }

  late final _Geometry_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Geometry_destroy');
  late final _Geometry_destroy =
      _Geometry_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingFeatureSet_created(
    imp1.RT_GeoprocessingFeatureSetHandle handle,
  ) {
    return _GeoprocessingFeatureSet_created(
      handle,
    );
  }

  late final _GeoprocessingFeatureSet_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingFeatureSetHandle)>>(
      'GeoprocessingFeatureSet_created');
  late final _GeoprocessingFeatureSet_created =
      _GeoprocessingFeatureSet_createdPtr.asFunction<
          void Function(imp1.RT_GeoprocessingFeatureSetHandle)>();

  void GeoprocessingFeatureSet_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingFeatureSet_destroy(
      handle,
    );
  }

  late final _GeoprocessingFeatureSet_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingFeatureSet_destroy');
  late final _GeoprocessingFeatureSet_destroy =
      _GeoprocessingFeatureSet_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingParameterInfo_created(
    imp1.RT_GeoprocessingParameterInfoHandle handle,
  ) {
    return _GeoprocessingParameterInfo_created(
      handle,
    );
  }

  late final _GeoprocessingParameterInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingParameterInfoHandle)>>(
      'GeoprocessingParameterInfo_created');
  late final _GeoprocessingParameterInfo_created =
      _GeoprocessingParameterInfo_createdPtr.asFunction<
          void Function(imp1.RT_GeoprocessingParameterInfoHandle)>();

  void GeoprocessingParameterInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingParameterInfo_destroy(
      handle,
    );
  }

  late final _GeoprocessingParameterInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingParameterInfo_destroy');
  late final _GeoprocessingParameterInfo_destroy =
      _GeoprocessingParameterInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingParameter_created(
    imp1.RT_GeoprocessingParameterHandle handle,
  ) {
    return _GeoprocessingParameter_created(
      handle,
    );
  }

  late final _GeoprocessingParameter_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingParameterHandle)>>(
      'GeoprocessingParameter_created');
  late final _GeoprocessingParameter_created =
      _GeoprocessingParameter_createdPtr.asFunction<
          void Function(imp1.RT_GeoprocessingParameterHandle)>();

  void GeoprocessingParameter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingParameter_destroy(
      handle,
    );
  }

  late final _GeoprocessingParameter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingParameter_destroy');
  late final _GeoprocessingParameter_destroy =
      _GeoprocessingParameter_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingParameter_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingParameter_destroyInstance(
      handle,
    );
  }

  late final _GeoprocessingParameter_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingParameter_destroyInstance');
  late final _GeoprocessingParameter_destroyInstance =
      _GeoprocessingParameter_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingParameters_created(
    imp1.RT_GeoprocessingParametersHandle handle,
  ) {
    return _GeoprocessingParameters_created(
      handle,
    );
  }

  late final _GeoprocessingParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingParametersHandle)>>(
      'GeoprocessingParameters_created');
  late final _GeoprocessingParameters_created =
      _GeoprocessingParameters_createdPtr.asFunction<
          void Function(imp1.RT_GeoprocessingParametersHandle)>();

  void GeoprocessingParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingParameters_destroy(
      handle,
    );
  }

  late final _GeoprocessingParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingParameters_destroy');
  late final _GeoprocessingParameters_destroy =
      _GeoprocessingParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingResult_created(
    RT_GeoprocessingResultHandle handle,
  ) {
    return _GeoprocessingResult_created(
      handle,
    );
  }

  late final _GeoprocessingResult_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GeoprocessingResultHandle)>>(
      'GeoprocessingResult_created');
  late final _GeoprocessingResult_created = _GeoprocessingResult_createdPtr
      .asFunction<void Function(RT_GeoprocessingResultHandle)>();

  void GeoprocessingResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingResult_destroy(
      handle,
    );
  }

  late final _GeoprocessingResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingResult_destroy');
  late final _GeoprocessingResult_destroy = _GeoprocessingResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingTaskInfo_created(
    RT_GeoprocessingTaskInfoHandle handle,
  ) {
    return _GeoprocessingTaskInfo_created(
      handle,
    );
  }

  late final _GeoprocessingTaskInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_GeoprocessingTaskInfoHandle)>>(
      'GeoprocessingTaskInfo_created');
  late final _GeoprocessingTaskInfo_created = _GeoprocessingTaskInfo_createdPtr
      .asFunction<void Function(RT_GeoprocessingTaskInfoHandle)>();

  void GeoprocessingTaskInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingTaskInfo_destroy(
      handle,
    );
  }

  late final _GeoprocessingTaskInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingTaskInfo_destroy');
  late final _GeoprocessingTaskInfo_destroy = _GeoprocessingTaskInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeoprocessingTask_created(
    RT_GeoprocessingTaskHandle handle,
  ) {
    return _GeoprocessingTask_created(
      handle,
    );
  }

  late final _GeoprocessingTask_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GeoprocessingTaskHandle)>>(
      'GeoprocessingTask_created');
  late final _GeoprocessingTask_created = _GeoprocessingTask_createdPtr
      .asFunction<void Function(RT_GeoprocessingTaskHandle)>();

  void GeoprocessingTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeoprocessingTask_destroy(
      handle,
    );
  }

  late final _GeoprocessingTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeoprocessingTask_destroy');
  late final _GeoprocessingTask_destroy = _GeoprocessingTask_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeotriggerFeed_created(
    RT_GeotriggerFeedHandle handle,
  ) {
    return _GeotriggerFeed_created(
      handle,
    );
  }

  late final _GeotriggerFeed_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_GeotriggerFeedHandle)>>(
          'GeotriggerFeed_created');
  late final _GeotriggerFeed_created = _GeotriggerFeed_createdPtr.asFunction<
      void Function(RT_GeotriggerFeedHandle)>();

  void GeotriggerFeed_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeotriggerFeed_destroy(
      handle,
    );
  }

  late final _GeotriggerFeed_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeotriggerFeed_destroy');
  late final _GeotriggerFeed_destroy = _GeotriggerFeed_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GeotriggerMonitor_created(
    RT_GeotriggerMonitorHandle handle,
  ) {
    return _GeotriggerMonitor_created(
      handle,
    );
  }

  late final _GeotriggerMonitor_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_GeotriggerMonitorHandle)>>(
      'GeotriggerMonitor_created');
  late final _GeotriggerMonitor_created = _GeotriggerMonitor_createdPtr
      .asFunction<void Function(RT_GeotriggerMonitorHandle)>();

  void GeotriggerMonitor_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeotriggerMonitor_destroy(
      handle,
    );
  }

  late final _GeotriggerMonitor_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeotriggerMonitor_destroy');
  late final _GeotriggerMonitor_destroy = _GeotriggerMonitor_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeotriggerMonitor_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeotriggerMonitor_destroyInstance(
      handle,
    );
  }

  late final _GeotriggerMonitor_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeotriggerMonitor_destroyInstance');
  late final _GeotriggerMonitor_destroyInstance =
      _GeotriggerMonitor_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void GeotriggerNotificationInfo_created(
    RT_GeotriggerNotificationInfoHandle handle,
  ) {
    return _GeotriggerNotificationInfo_created(
      handle,
    );
  }

  late final _GeotriggerNotificationInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_GeotriggerNotificationInfoHandle)>>(
      'GeotriggerNotificationInfo_created');
  late final _GeotriggerNotificationInfo_created =
      _GeotriggerNotificationInfo_createdPtr.asFunction<
          void Function(RT_GeotriggerNotificationInfoHandle)>();

  void GeotriggerNotificationInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeotriggerNotificationInfo_destroy(
      handle,
    );
  }

  late final _GeotriggerNotificationInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeotriggerNotificationInfo_destroy');
  late final _GeotriggerNotificationInfo_destroy =
      _GeotriggerNotificationInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Geotrigger_created(
    imp1.RT_GeotriggerHandle handle,
  ) {
    return _Geotrigger_created(
      handle,
    );
  }

  late final _Geotrigger_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeotriggerHandle)>>(
          'Geotrigger_created');
  late final _Geotrigger_created = _Geotrigger_createdPtr.asFunction<
      void Function(imp1.RT_GeotriggerHandle)>();

  void Geotrigger_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Geotrigger_destroy(
      handle,
    );
  }

  late final _Geotrigger_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Geotrigger_destroy');
  late final _Geotrigger_destroy =
      _Geotrigger_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Geotrigger_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Geotrigger_destroyInstance(
      handle,
    );
  }

  late final _Geotrigger_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Geotrigger_destroyInstance');
  late final _Geotrigger_destroyInstance = _Geotrigger_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void GeotriggersInfo_created(
    imp1.RT_GeotriggersInfoHandle handle,
  ) {
    return _GeotriggersInfo_created(
      handle,
    );
  }

  late final _GeotriggersInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeotriggersInfoHandle)>>(
      'GeotriggersInfo_created');
  late final _GeotriggersInfo_created = _GeotriggersInfo_createdPtr.asFunction<
      void Function(imp1.RT_GeotriggersInfoHandle)>();

  void GeotriggersInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GeotriggersInfo_destroy(
      handle,
    );
  }

  late final _GeotriggersInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GeotriggersInfo_destroy');
  late final _GeotriggersInfo_destroy = _GeotriggersInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Graphic_created(
    imp1.RT_GraphicHandle handle,
  ) {
    return _Graphic_created(
      handle,
    );
  }

  late final _Graphic_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GraphicHandle)>>(
          'Graphic_created');
  late final _Graphic_created =
      _Graphic_createdPtr.asFunction<void Function(imp1.RT_GraphicHandle)>();

  void Graphic_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Graphic_destroy(
      handle,
    );
  }

  late final _Graphic_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Graphic_destroy');
  late final _Graphic_destroy =
      _Graphic_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Graphic_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Graphic_destroyInstance(
      handle,
    );
  }

  late final _Graphic_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Graphic_destroyInstance');
  late final _Graphic_destroyInstance = _Graphic_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GraphicsOverlay_created(
    imp1.RT_GraphicsOverlayHandle handle,
  ) {
    return _GraphicsOverlay_created(
      handle,
    );
  }

  late final _GraphicsOverlay_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GraphicsOverlayHandle)>>(
      'GraphicsOverlay_created');
  late final _GraphicsOverlay_created = _GraphicsOverlay_createdPtr.asFunction<
      void Function(imp1.RT_GraphicsOverlayHandle)>();

  void GraphicsOverlay_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GraphicsOverlay_destroy(
      handle,
    );
  }

  late final _GraphicsOverlay_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GraphicsOverlay_destroy');
  late final _GraphicsOverlay_destroy = _GraphicsOverlay_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void GraphicsOverlay_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _GraphicsOverlay_destroyInstance(
      handle,
    );
  }

  late final _GraphicsOverlay_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'GraphicsOverlay_destroyInstance');
  late final _GraphicsOverlay_destroyInstance =
      _GraphicsOverlay_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Grid_created(
    imp1.RT_GridHandle handle,
  ) {
    return _Grid_created(
      handle,
    );
  }

  late final _Grid_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_GridHandle)>>(
          'Grid_created');
  late final _Grid_created =
      _Grid_createdPtr.asFunction<void Function(imp1.RT_GridHandle)>();

  void Grid_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Grid_destroy(
      handle,
    );
  }

  late final _Grid_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Grid_destroy');
  late final _Grid_destroy =
      _Grid_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void HorizontalVerticalTransformationStep_created(
    imp1.RT_HorizontalVerticalTransformationStepHandle handle,
  ) {
    return _HorizontalVerticalTransformationStep_created(
      handle,
    );
  }

  late final _HorizontalVerticalTransformationStep_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_HorizontalVerticalTransformationStepHandle)>>(
      'HorizontalVerticalTransformationStep_created');
  late final _HorizontalVerticalTransformationStep_created =
      _HorizontalVerticalTransformationStep_createdPtr.asFunction<
          void Function(imp1.RT_HorizontalVerticalTransformationStepHandle)>();

  void HorizontalVerticalTransformationStep_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _HorizontalVerticalTransformationStep_destroy(
      handle,
    );
  }

  late final _HorizontalVerticalTransformationStep_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'HorizontalVerticalTransformationStep_destroy');
  late final _HorizontalVerticalTransformationStep_destroy =
      _HorizontalVerticalTransformationStep_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void IPSInfoMessage_created(
    RT_IPSInfoMessageHandle handle,
  ) {
    return _IPSInfoMessage_created(
      handle,
    );
  }

  late final _IPSInfoMessage_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_IPSInfoMessageHandle)>>(
          'IPSInfoMessage_created');
  late final _IPSInfoMessage_created = _IPSInfoMessage_createdPtr.asFunction<
      void Function(RT_IPSInfoMessageHandle)>();

  void IPSInfoMessage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _IPSInfoMessage_destroy(
      handle,
    );
  }

  late final _IPSInfoMessage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'IPSInfoMessage_destroy');
  late final _IPSInfoMessage_destroy = _IPSInfoMessage_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void IdInfo_created(
    imp1.RT_IdInfoHandle handle,
  ) {
    return _IdInfo_created(
      handle,
    );
  }

  late final _IdInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_IdInfoHandle)>>(
          'IdInfo_created');
  late final _IdInfo_created =
      _IdInfo_createdPtr.asFunction<void Function(imp1.RT_IdInfoHandle)>();

  void IdInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _IdInfo_destroy(
      handle,
    );
  }

  late final _IdInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'IdInfo_destroy');
  late final _IdInfo_destroy =
      _IdInfo_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void IdentifyGraphicsOverlayResult_created(
    imp1.RT_IdentifyGraphicsOverlayResultHandle handle,
  ) {
    return _IdentifyGraphicsOverlayResult_created(
      handle,
    );
  }

  late final _IdentifyGraphicsOverlayResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_IdentifyGraphicsOverlayResultHandle)>>(
      'IdentifyGraphicsOverlayResult_created');
  late final _IdentifyGraphicsOverlayResult_created =
      _IdentifyGraphicsOverlayResult_createdPtr.asFunction<
          void Function(imp1.RT_IdentifyGraphicsOverlayResultHandle)>();

  void IdentifyGraphicsOverlayResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _IdentifyGraphicsOverlayResult_destroy(
      handle,
    );
  }

  late final _IdentifyGraphicsOverlayResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'IdentifyGraphicsOverlayResult_destroy');
  late final _IdentifyGraphicsOverlayResult_destroy =
      _IdentifyGraphicsOverlayResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void IdentifyLayerResult_created(
    imp1.RT_IdentifyLayerResultHandle handle,
  ) {
    return _IdentifyLayerResult_created(
      handle,
    );
  }

  late final _IdentifyLayerResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_IdentifyLayerResultHandle)>>(
      'IdentifyLayerResult_created');
  late final _IdentifyLayerResult_created = _IdentifyLayerResult_createdPtr
      .asFunction<void Function(imp1.RT_IdentifyLayerResultHandle)>();

  void IdentifyLayerResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _IdentifyLayerResult_destroy(
      handle,
    );
  }

  late final _IdentifyLayerResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'IdentifyLayerResult_destroy');
  late final _IdentifyLayerResult_destroy = _IdentifyLayerResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ImageFrame_created(
    imp1.RT_ImageFrameHandle handle,
  ) {
    return _ImageFrame_created(
      handle,
    );
  }

  late final _ImageFrame_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ImageFrameHandle)>>(
          'ImageFrame_created');
  late final _ImageFrame_created = _ImageFrame_createdPtr.asFunction<
      void Function(imp1.RT_ImageFrameHandle)>();

  void ImageFrame_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ImageFrame_destroy(
      handle,
    );
  }

  late final _ImageFrame_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ImageFrame_destroy');
  late final _ImageFrame_destroy =
      _ImageFrame_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ImageOverlay_created(
    imp1.RT_ImageOverlayHandle handle,
  ) {
    return _ImageOverlay_created(
      handle,
    );
  }

  late final _ImageOverlay_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ImageOverlayHandle)>>(
      'ImageOverlay_created');
  late final _ImageOverlay_created = _ImageOverlay_createdPtr.asFunction<
      void Function(imp1.RT_ImageOverlayHandle)>();

  void ImageOverlay_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ImageOverlay_destroy(
      handle,
    );
  }

  late final _ImageOverlay_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ImageOverlay_destroy');
  late final _ImageOverlay_destroy = _ImageOverlay_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Image_created(
    imp1.RT_ImageHandle handle,
  ) {
    return _Image_created(
      handle,
    );
  }

  late final _Image_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ImageHandle)>>(
          'Image_created');
  late final _Image_created =
      _Image_createdPtr.asFunction<void Function(imp1.RT_ImageHandle)>();

  void Image_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Image_destroy(
      handle,
    );
  }

  late final _Image_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Image_destroy');
  late final _Image_destroy =
      _Image_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ImmutablePartCollection_created(
    imp1.RT_ImmutablePartCollectionHandle handle,
  ) {
    return _ImmutablePartCollection_created(
      handle,
    );
  }

  late final _ImmutablePartCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ImmutablePartCollectionHandle)>>(
      'ImmutablePartCollection_created');
  late final _ImmutablePartCollection_created =
      _ImmutablePartCollection_createdPtr.asFunction<
          void Function(imp1.RT_ImmutablePartCollectionHandle)>();

  void ImmutablePartCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ImmutablePartCollection_destroy(
      handle,
    );
  }

  late final _ImmutablePartCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ImmutablePartCollection_destroy');
  late final _ImmutablePartCollection_destroy =
      _ImmutablePartCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ImmutablePart_created(
    imp1.RT_ImmutablePartHandle handle,
  ) {
    return _ImmutablePart_created(
      handle,
    );
  }

  late final _ImmutablePart_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ImmutablePartHandle)>>(
      'ImmutablePart_created');
  late final _ImmutablePart_created = _ImmutablePart_createdPtr.asFunction<
      void Function(imp1.RT_ImmutablePartHandle)>();

  void ImmutablePart_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ImmutablePart_destroy(
      handle,
    );
  }

  late final _ImmutablePart_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ImmutablePart_destroy');
  late final _ImmutablePart_destroy = _ImmutablePart_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ImmutablePointCollection_created(
    imp1.RT_ImmutablePointCollectionHandle handle,
  ) {
    return _ImmutablePointCollection_created(
      handle,
    );
  }

  late final _ImmutablePointCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ImmutablePointCollectionHandle)>>(
      'ImmutablePointCollection_created');
  late final _ImmutablePointCollection_created =
      _ImmutablePointCollection_createdPtr.asFunction<
          void Function(imp1.RT_ImmutablePointCollectionHandle)>();

  void ImmutablePointCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ImmutablePointCollection_destroy(
      handle,
    );
  }

  late final _ImmutablePointCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ImmutablePointCollection_destroy');
  late final _ImmutablePointCollection_destroy =
      _ImmutablePointCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Incident_created(
    imp1.RT_IncidentHandle handle,
  ) {
    return _Incident_created(
      handle,
    );
  }

  late final _Incident_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_IncidentHandle)>>(
          'Incident_created');
  late final _Incident_created =
      _Incident_createdPtr.asFunction<void Function(imp1.RT_IncidentHandle)>();

  void Incident_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Incident_destroy(
      handle,
    );
  }

  late final _Incident_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Incident_destroy');
  late final _Incident_destroy =
      _Incident_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void IndoorPositioningDefinition_created(
    imp1.RT_IndoorPositioningDefinitionHandle handle,
  ) {
    return _IndoorPositioningDefinition_created(
      handle,
    );
  }

  late final _IndoorPositioningDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_IndoorPositioningDefinitionHandle)>>(
      'IndoorPositioningDefinition_created');
  late final _IndoorPositioningDefinition_created =
      _IndoorPositioningDefinition_createdPtr.asFunction<
          void Function(imp1.RT_IndoorPositioningDefinitionHandle)>();

  void IndoorPositioningDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _IndoorPositioningDefinition_destroy(
      handle,
    );
  }

  late final _IndoorPositioningDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'IndoorPositioningDefinition_destroy');
  late final _IndoorPositioningDefinition_destroy =
      _IndoorPositioningDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void IndoorPositioningTableInfo_created(
    RT_IndoorPositioningTableInfoHandle handle,
  ) {
    return _IndoorPositioningTableInfo_created(
      handle,
    );
  }

  late final _IndoorPositioningTableInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_IndoorPositioningTableInfoHandle)>>(
      'IndoorPositioningTableInfo_created');
  late final _IndoorPositioningTableInfo_created =
      _IndoorPositioningTableInfo_createdPtr.asFunction<
          void Function(RT_IndoorPositioningTableInfoHandle)>();

  void IndoorPositioningTableInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _IndoorPositioningTableInfo_destroy(
      handle,
    );
  }

  late final _IndoorPositioningTableInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'IndoorPositioningTableInfo_destroy');
  late final _IndoorPositioningTableInfo_destroy =
      _IndoorPositioningTableInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void IndoorsLocationDataSourceConfiguration_created(
    RT_IndoorsLocationDataSourceConfigurationHandle handle,
  ) {
    return _IndoorsLocationDataSourceConfiguration_created(
      handle,
    );
  }

  late final _IndoorsLocationDataSourceConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  RT_IndoorsLocationDataSourceConfigurationHandle)>>(
      'IndoorsLocationDataSourceConfiguration_created');
  late final _IndoorsLocationDataSourceConfiguration_created =
      _IndoorsLocationDataSourceConfiguration_createdPtr.asFunction<
          void Function(RT_IndoorsLocationDataSourceConfigurationHandle)>();

  void IndoorsLocationDataSourceConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _IndoorsLocationDataSourceConfiguration_destroy(
      handle,
    );
  }

  late final _IndoorsLocationDataSourceConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'IndoorsLocationDataSourceConfiguration_destroy');
  late final _IndoorsLocationDataSourceConfiguration_destroy =
      _IndoorsLocationDataSourceConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Insets_created(
    imp1.RT_InsetsHandle handle,
  ) {
    return _Insets_created(
      handle,
    );
  }

  late final _Insets_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_InsetsHandle)>>(
          'Insets_created');
  late final _Insets_created =
      _Insets_createdPtr.asFunction<void Function(imp1.RT_InsetsHandle)>();

  void Insets_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Insets_destroy(
      handle,
    );
  }

  late final _Insets_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Insets_destroy');
  late final _Insets_destroy =
      _Insets_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void InteractionConfiguration_created(
    RT_InteractionConfigurationHandle handle,
  ) {
    return _InteractionConfiguration_created(
      handle,
    );
  }

  late final _InteractionConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_InteractionConfigurationHandle)>>(
      'InteractionConfiguration_created');
  late final _InteractionConfiguration_created =
      _InteractionConfiguration_createdPtr.asFunction<
          void Function(RT_InteractionConfigurationHandle)>();

  void InteractionConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _InteractionConfiguration_destroy(
      handle,
    );
  }

  late final _InteractionConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'InteractionConfiguration_destroy');
  late final _InteractionConfiguration_destroy =
      _InteractionConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ItemResourceCache_created(
    imp1.RT_ItemResourceCacheHandle handle,
  ) {
    return _ItemResourceCache_created(
      handle,
    );
  }

  late final _ItemResourceCache_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ItemResourceCacheHandle)>>(
      'ItemResourceCache_created');
  late final _ItemResourceCache_created = _ItemResourceCache_createdPtr
      .asFunction<void Function(imp1.RT_ItemResourceCacheHandle)>();

  void ItemResourceCache_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ItemResourceCache_destroy(
      handle,
    );
  }

  late final _ItemResourceCache_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ItemResourceCache_destroy');
  late final _ItemResourceCache_destroy = _ItemResourceCache_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Item_created(
    imp1.RT_ItemHandle handle,
  ) {
    return _Item_created(
      handle,
    );
  }

  late final _Item_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ItemHandle)>>(
          'Item_created');
  late final _Item_created =
      _Item_createdPtr.asFunction<void Function(imp1.RT_ItemHandle)>();

  void Item_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Item_destroy(
      handle,
    );
  }

  late final _Item_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Item_destroy');
  late final _Item_destroy =
      _Item_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Item_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Item_destroyInstance(
      handle,
    );
  }

  late final _Item_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Item_destroyInstance');
  late final _Item_destroyInstance = _Item_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Iterator_created(
    imp1.RT_IteratorHandle handle,
  ) {
    return _Iterator_created(
      handle,
    );
  }

  late final _Iterator_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_IteratorHandle)>>(
          'Iterator_created');
  late final _Iterator_created =
      _Iterator_createdPtr.asFunction<void Function(imp1.RT_IteratorHandle)>();

  void Iterator_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Iterator_destroy(
      handle,
    );
  }

  late final _Iterator_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Iterator_destroy');
  late final _Iterator_destroy =
      _Iterator_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void JobMessage_created(
    imp1.RT_JobMessageHandle handle,
  ) {
    return _JobMessage_created(
      handle,
    );
  }

  late final _JobMessage_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_JobMessageHandle)>>(
          'JobMessage_created');
  late final _JobMessage_created = _JobMessage_createdPtr.asFunction<
      void Function(imp1.RT_JobMessageHandle)>();

  void JobMessage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _JobMessage_destroy(
      handle,
    );
  }

  late final _JobMessage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'JobMessage_destroy');
  late final _JobMessage_destroy =
      _JobMessage_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Job_created(
    imp1.RT_JobHandle handle,
  ) {
    return _Job_created(
      handle,
    );
  }

  late final _Job_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_JobHandle)>>(
          'Job_created');
  late final _Job_created =
      _Job_createdPtr.asFunction<void Function(imp1.RT_JobHandle)>();

  void Job_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Job_destroy(
      handle,
    );
  }

  late final _Job_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Job_destroy');
  late final _Job_destroy =
      _Job_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Job_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Job_destroyInstance(
      handle,
    );
  }

  late final _Job_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Job_destroyInstance');
  late final _Job_destroyInstance = _Job_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLAudioPlayer_created(
    RT_KMLAudioPlayerHandle handle,
  ) {
    return _KMLAudioPlayer_created(
      handle,
    );
  }

  late final _KMLAudioPlayer_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_KMLAudioPlayerHandle)>>(
          'KMLAudioPlayer_created');
  late final _KMLAudioPlayer_created = _KMLAudioPlayer_createdPtr.asFunction<
      void Function(RT_KMLAudioPlayerHandle)>();

  void KMLAudioPlayer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLAudioPlayer_destroy(
      handle,
    );
  }

  late final _KMLAudioPlayer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLAudioPlayer_destroy');
  late final _KMLAudioPlayer_destroy = _KMLAudioPlayer_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLColorStyle_created(
    RT_KMLColorStyleHandle handle,
  ) {
    return _KMLColorStyle_created(
      handle,
    );
  }

  late final _KMLColorStyle_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_KMLColorStyleHandle)>>(
          'KMLColorStyle_created');
  late final _KMLColorStyle_created = _KMLColorStyle_createdPtr.asFunction<
      void Function(RT_KMLColorStyleHandle)>();

  void KMLColorStyle_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLColorStyle_destroy(
      handle,
    );
  }

  late final _KMLColorStyle_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLColorStyle_destroy');
  late final _KMLColorStyle_destroy = _KMLColorStyle_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLDataset_created(
    imp1.RT_KMLDatasetHandle handle,
  ) {
    return _KMLDataset_created(
      handle,
    );
  }

  late final _KMLDataset_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLDatasetHandle)>>(
          'KMLDataset_created');
  late final _KMLDataset_created = _KMLDataset_createdPtr.asFunction<
      void Function(imp1.RT_KMLDatasetHandle)>();

  void KMLDataset_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLDataset_destroy(
      handle,
    );
  }

  late final _KMLDataset_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLDataset_destroy');
  late final _KMLDataset_destroy =
      _KMLDataset_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLDataset_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLDataset_destroyInstance(
      handle,
    );
  }

  late final _KMLDataset_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLDataset_destroyInstance');
  late final _KMLDataset_destroyInstance = _KMLDataset_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLGeometry_created(
    imp1.RT_KMLGeometryHandle handle,
  ) {
    return _KMLGeometry_created(
      handle,
    );
  }

  late final _KMLGeometry_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLGeometryHandle)>>(
          'KMLGeometry_created');
  late final _KMLGeometry_created = _KMLGeometry_createdPtr.asFunction<
      void Function(imp1.RT_KMLGeometryHandle)>();

  void KMLGeometry_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLGeometry_destroy(
      handle,
    );
  }

  late final _KMLGeometry_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLGeometry_destroy');
  late final _KMLGeometry_destroy = _KMLGeometry_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLIcon_created(
    RT_KMLIconHandle handle,
  ) {
    return _KMLIcon_created(
      handle,
    );
  }

  late final _KMLIcon_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_KMLIconHandle)>>(
          'KMLIcon_created');
  late final _KMLIcon_created =
      _KMLIcon_createdPtr.asFunction<void Function(RT_KMLIconHandle)>();

  void KMLIcon_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLIcon_destroy(
      handle,
    );
  }

  late final _KMLIcon_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLIcon_destroy');
  late final _KMLIcon_destroy =
      _KMLIcon_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLImageCoordinate_created(
    RT_KMLImageCoordinateHandle handle,
  ) {
    return _KMLImageCoordinate_created(
      handle,
    );
  }

  late final _KMLImageCoordinate_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_KMLImageCoordinateHandle)>>(
      'KMLImageCoordinate_created');
  late final _KMLImageCoordinate_created = _KMLImageCoordinate_createdPtr
      .asFunction<void Function(RT_KMLImageCoordinateHandle)>();

  void KMLImageCoordinate_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLImageCoordinate_destroy(
      handle,
    );
  }

  late final _KMLImageCoordinate_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLImageCoordinate_destroy');
  late final _KMLImageCoordinate_destroy = _KMLImageCoordinate_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLNode_created(
    imp1.RT_KMLNodeHandle handle,
  ) {
    return _KMLNode_created(
      handle,
    );
  }

  late final _KMLNode_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLNodeHandle)>>(
          'KMLNode_created');
  late final _KMLNode_created =
      _KMLNode_createdPtr.asFunction<void Function(imp1.RT_KMLNodeHandle)>();

  void KMLNode_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLNode_destroy(
      handle,
    );
  }

  late final _KMLNode_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLNode_destroy');
  late final _KMLNode_destroy =
      _KMLNode_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLNode_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLNode_destroyInstance(
      handle,
    );
  }

  late final _KMLNode_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLNode_destroyInstance');
  late final _KMLNode_destroyInstance = _KMLNode_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLNonSchemaData_created(
    RT_KMLNonSchemaDataHandle handle,
  ) {
    return _KMLNonSchemaData_created(
      handle,
    );
  }

  late final _KMLNonSchemaData_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_KMLNonSchemaDataHandle)>>(
          'KMLNonSchemaData_created');
  late final _KMLNonSchemaData_created = _KMLNonSchemaData_createdPtr
      .asFunction<void Function(RT_KMLNonSchemaDataHandle)>();

  void KMLNonSchemaData_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLNonSchemaData_destroy(
      handle,
    );
  }

  late final _KMLNonSchemaData_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLNonSchemaData_destroy');
  late final _KMLNonSchemaData_destroy = _KMLNonSchemaData_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLSchemaData_created(
    imp1.RT_KMLSchemaDataHandle handle,
  ) {
    return _KMLSchemaData_created(
      handle,
    );
  }

  late final _KMLSchemaData_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLSchemaDataHandle)>>(
      'KMLSchemaData_created');
  late final _KMLSchemaData_created = _KMLSchemaData_createdPtr.asFunction<
      void Function(imp1.RT_KMLSchemaDataHandle)>();

  void KMLSchemaData_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLSchemaData_destroy(
      handle,
    );
  }

  late final _KMLSchemaData_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLSchemaData_destroy');
  late final _KMLSchemaData_destroy = _KMLSchemaData_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLSchema_created(
    imp1.RT_KMLSchemaHandle handle,
  ) {
    return _KMLSchema_created(
      handle,
    );
  }

  late final _KMLSchema_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLSchemaHandle)>>(
          'KMLSchema_created');
  late final _KMLSchema_created = _KMLSchema_createdPtr.asFunction<
      void Function(imp1.RT_KMLSchemaHandle)>();

  void KMLSchema_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLSchema_destroy(
      handle,
    );
  }

  late final _KMLSchema_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLSchema_destroy');
  late final _KMLSchema_destroy =
      _KMLSchema_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLSimpleField_created(
    imp1.RT_KMLSimpleFieldHandle handle,
  ) {
    return _KMLSimpleField_created(
      handle,
    );
  }

  late final _KMLSimpleField_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLSimpleFieldHandle)>>(
      'KMLSimpleField_created');
  late final _KMLSimpleField_created = _KMLSimpleField_createdPtr.asFunction<
      void Function(imp1.RT_KMLSimpleFieldHandle)>();

  void KMLSimpleField_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLSimpleField_destroy(
      handle,
    );
  }

  late final _KMLSimpleField_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLSimpleField_destroy');
  late final _KMLSimpleField_destroy = _KMLSimpleField_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLStyle_created(
    RT_KMLStyleHandle handle,
  ) {
    return _KMLStyle_created(
      handle,
    );
  }

  late final _KMLStyle_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_KMLStyleHandle)>>(
          'KMLStyle_created');
  late final _KMLStyle_created =
      _KMLStyle_createdPtr.asFunction<void Function(RT_KMLStyleHandle)>();

  void KMLStyle_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLStyle_destroy(
      handle,
    );
  }

  late final _KMLStyle_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLStyle_destroy');
  late final _KMLStyle_destroy =
      _KMLStyle_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLTourController_created(
    RT_KMLTourControllerHandle handle,
  ) {
    return _KMLTourController_created(
      handle,
    );
  }

  late final _KMLTourController_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_KMLTourControllerHandle)>>(
      'KMLTourController_created');
  late final _KMLTourController_created = _KMLTourController_createdPtr
      .asFunction<void Function(RT_KMLTourControllerHandle)>();

  void KMLTourController_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLTourController_destroy(
      handle,
    );
  }

  late final _KMLTourController_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLTourController_destroy');
  late final _KMLTourController_destroy = _KMLTourController_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void KMLViewInfo_created(
    RT_KMLViewInfoHandle handle,
  ) {
    return _KMLViewInfo_created(
      handle,
    );
  }

  late final _KMLViewInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_KMLViewInfoHandle)>>(
          'KMLViewInfo_created');
  late final _KMLViewInfo_created =
      _KMLViewInfo_createdPtr.asFunction<void Function(RT_KMLViewInfoHandle)>();

  void KMLViewInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLViewInfo_destroy(
      handle,
    );
  }

  late final _KMLViewInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLViewInfo_destroy');
  late final _KMLViewInfo_destroy = _KMLViewInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void KMLViewpoint_created(
    RT_KMLViewpointHandle handle,
  ) {
    return _KMLViewpoint_created(
      handle,
    );
  }

  late final _KMLViewpoint_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_KMLViewpointHandle)>>(
          'KMLViewpoint_created');
  late final _KMLViewpoint_created = _KMLViewpoint_createdPtr.asFunction<
      void Function(RT_KMLViewpointHandle)>();

  void KMLViewpoint_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _KMLViewpoint_destroy(
      handle,
    );
  }

  late final _KMLViewpoint_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'KMLViewpoint_destroy');
  late final _KMLViewpoint_destroy = _KMLViewpoint_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LabelAngle_created(
    RT_LabelAngleHandle handle,
  ) {
    return _LabelAngle_created(
      handle,
    );
  }

  late final _LabelAngle_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_LabelAngleHandle)>>(
          'LabelAngle_created');
  late final _LabelAngle_created =
      _LabelAngle_createdPtr.asFunction<void Function(RT_LabelAngleHandle)>();

  void LabelAngle_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LabelAngle_destroy(
      handle,
    );
  }

  late final _LabelAngle_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LabelAngle_destroy');
  late final _LabelAngle_destroy =
      _LabelAngle_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LabelDefinition_created(
    imp1.RT_LabelDefinitionHandle handle,
  ) {
    return _LabelDefinition_created(
      handle,
    );
  }

  late final _LabelDefinition_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LabelDefinitionHandle)>>(
      'LabelDefinition_created');
  late final _LabelDefinition_created = _LabelDefinition_createdPtr.asFunction<
      void Function(imp1.RT_LabelDefinitionHandle)>();

  void LabelDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LabelDefinition_destroy(
      handle,
    );
  }

  late final _LabelDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LabelDefinition_destroy');
  late final _LabelDefinition_destroy = _LabelDefinition_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LabelExpression_created(
    RT_LabelExpressionHandle handle,
  ) {
    return _LabelExpression_created(
      handle,
    );
  }

  late final _LabelExpression_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_LabelExpressionHandle)>>(
          'LabelExpression_created');
  late final _LabelExpression_created = _LabelExpression_createdPtr.asFunction<
      void Function(RT_LabelExpressionHandle)>();

  void LabelExpression_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LabelExpression_destroy(
      handle,
    );
  }

  late final _LabelExpression_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LabelExpression_destroy');
  late final _LabelExpression_destroy = _LabelExpression_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LabelStackSeparator_created(
    imp1.RT_LabelStackSeparatorHandle handle,
  ) {
    return _LabelStackSeparator_created(
      handle,
    );
  }

  late final _LabelStackSeparator_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LabelStackSeparatorHandle)>>(
      'LabelStackSeparator_created');
  late final _LabelStackSeparator_created = _LabelStackSeparator_createdPtr
      .asFunction<void Function(imp1.RT_LabelStackSeparatorHandle)>();

  void LabelStackSeparator_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LabelStackSeparator_destroy(
      handle,
    );
  }

  late final _LabelStackSeparator_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LabelStackSeparator_destroy');
  late final _LabelStackSeparator_destroy = _LabelStackSeparator_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LabelingInfo_created(
    imp1.RT_LabelingInfoHandle handle,
  ) {
    return _LabelingInfo_created(
      handle,
    );
  }

  late final _LabelingInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LabelingInfoHandle)>>(
      'LabelingInfo_created');
  late final _LabelingInfo_created = _LabelingInfo_createdPtr.asFunction<
      void Function(imp1.RT_LabelingInfoHandle)>();

  void LabelingInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LabelingInfo_destroy(
      handle,
    );
  }

  late final _LabelingInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LabelingInfo_destroy');
  late final _LabelingInfo_destroy = _LabelingInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LayerFloorDefinition_created(
    imp1.RT_LayerFloorDefinitionHandle handle,
  ) {
    return _LayerFloorDefinition_created(
      handle,
    );
  }

  late final _LayerFloorDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LayerFloorDefinitionHandle)>>(
      'LayerFloorDefinition_created');
  late final _LayerFloorDefinition_created = _LayerFloorDefinition_createdPtr
      .asFunction<void Function(imp1.RT_LayerFloorDefinitionHandle)>();

  void LayerFloorDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LayerFloorDefinition_destroy(
      handle,
    );
  }

  late final _LayerFloorDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LayerFloorDefinition_destroy');
  late final _LayerFloorDefinition_destroy = _LayerFloorDefinition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LayerSceneProperties_created(
    imp1.RT_LayerScenePropertiesHandle handle,
  ) {
    return _LayerSceneProperties_created(
      handle,
    );
  }

  late final _LayerSceneProperties_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LayerScenePropertiesHandle)>>(
      'LayerSceneProperties_created');
  late final _LayerSceneProperties_created = _LayerSceneProperties_createdPtr
      .asFunction<void Function(imp1.RT_LayerScenePropertiesHandle)>();

  void LayerSceneProperties_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LayerSceneProperties_destroy(
      handle,
    );
  }

  late final _LayerSceneProperties_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LayerSceneProperties_destroy');
  late final _LayerSceneProperties_destroy = _LayerSceneProperties_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LayerTimeInfo_created(
    imp1.RT_LayerTimeInfoHandle handle,
  ) {
    return _LayerTimeInfo_created(
      handle,
    );
  }

  late final _LayerTimeInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LayerTimeInfoHandle)>>(
      'LayerTimeInfo_created');
  late final _LayerTimeInfo_created = _LayerTimeInfo_createdPtr.asFunction<
      void Function(imp1.RT_LayerTimeInfoHandle)>();

  void LayerTimeInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LayerTimeInfo_destroy(
      handle,
    );
  }

  late final _LayerTimeInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LayerTimeInfo_destroy');
  late final _LayerTimeInfo_destroy = _LayerTimeInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LayerViewState_created(
    imp1.RT_LayerViewStateHandle handle,
  ) {
    return _LayerViewState_created(
      handle,
    );
  }

  late final _LayerViewState_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LayerViewStateHandle)>>(
      'LayerViewState_created');
  late final _LayerViewState_created = _LayerViewState_createdPtr.asFunction<
      void Function(imp1.RT_LayerViewStateHandle)>();

  void LayerViewState_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LayerViewState_destroy(
      handle,
    );
  }

  late final _LayerViewState_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LayerViewState_destroy');
  late final _LayerViewState_destroy = _LayerViewState_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Layer_created(
    imp1.RT_LayerHandle handle,
  ) {
    return _Layer_created(
      handle,
    );
  }

  late final _Layer_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LayerHandle)>>(
          'Layer_created');
  late final _Layer_created =
      _Layer_createdPtr.asFunction<void Function(imp1.RT_LayerHandle)>();

  void Layer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Layer_destroy(
      handle,
    );
  }

  late final _Layer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Layer_destroy');
  late final _Layer_destroy =
      _Layer_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Layer_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Layer_destroyInstance(
      handle,
    );
  }

  late final _Layer_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Layer_destroyInstance');
  late final _Layer_destroyInstance = _Layer_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LegendInfo_created(
    imp1.RT_LegendInfoHandle handle,
  ) {
    return _LegendInfo_created(
      handle,
    );
  }

  late final _LegendInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LegendInfoHandle)>>(
          'LegendInfo_created');
  late final _LegendInfo_created = _LegendInfo_createdPtr.asFunction<
      void Function(imp1.RT_LegendInfoHandle)>();

  void LegendInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LegendInfo_destroy(
      handle,
    );
  }

  late final _LegendInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LegendInfo_destroy');
  late final _LegendInfo_destroy =
      _LegendInfo_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LevelLayerDefinition_created(
    RT_LevelLayerDefinitionHandle handle,
  ) {
    return _LevelLayerDefinition_created(
      handle,
    );
  }

  late final _LevelLayerDefinition_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_LevelLayerDefinitionHandle)>>(
      'LevelLayerDefinition_created');
  late final _LevelLayerDefinition_created = _LevelLayerDefinition_createdPtr
      .asFunction<void Function(RT_LevelLayerDefinitionHandle)>();

  void LevelLayerDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LevelLayerDefinition_destroy(
      handle,
    );
  }

  late final _LevelLayerDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LevelLayerDefinition_destroy');
  late final _LevelLayerDefinition_destroy = _LevelLayerDefinition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LevelOfDetail_created(
    imp1.RT_LevelOfDetailHandle handle,
  ) {
    return _LevelOfDetail_created(
      handle,
    );
  }

  late final _LevelOfDetail_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LevelOfDetailHandle)>>(
      'LevelOfDetail_created');
  late final _LevelOfDetail_created = _LevelOfDetail_createdPtr.asFunction<
      void Function(imp1.RT_LevelOfDetailHandle)>();

  void LevelOfDetail_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LevelOfDetail_destroy(
      handle,
    );
  }

  late final _LevelOfDetail_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LevelOfDetail_destroy');
  late final _LevelOfDetail_destroy = _LevelOfDetail_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LicenseInfo_created(
    imp1.RT_LicenseInfoHandle handle,
  ) {
    return _LicenseInfo_created(
      handle,
    );
  }

  late final _LicenseInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LicenseInfoHandle)>>(
          'LicenseInfo_created');
  late final _LicenseInfo_created = _LicenseInfo_createdPtr.asFunction<
      void Function(imp1.RT_LicenseInfoHandle)>();

  void LicenseInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LicenseInfo_destroy(
      handle,
    );
  }

  late final _LicenseInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LicenseInfo_destroy');
  late final _LicenseInfo_destroy = _LicenseInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LicenseResult_created(
    imp1.RT_LicenseResultHandle handle,
  ) {
    return _LicenseResult_created(
      handle,
    );
  }

  late final _LicenseResult_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LicenseResultHandle)>>(
      'LicenseResult_created');
  late final _LicenseResult_created = _LicenseResult_createdPtr.asFunction<
      void Function(imp1.RT_LicenseResultHandle)>();

  void LicenseResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LicenseResult_destroy(
      handle,
    );
  }

  late final _LicenseResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LicenseResult_destroy');
  late final _LicenseResult_destroy = _LicenseResult_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void License_created(
    imp1.RT_LicenseHandle handle,
  ) {
    return _License_created(
      handle,
    );
  }

  late final _License_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LicenseHandle)>>(
          'License_created');
  late final _License_created =
      _License_createdPtr.asFunction<void Function(imp1.RT_LicenseHandle)>();

  void License_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _License_destroy(
      handle,
    );
  }

  late final _License_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'License_destroy');
  late final _License_destroy =
      _License_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Lighting_created(
    imp1.RT_LightingHandle handle,
  ) {
    return _Lighting_created(
      handle,
    );
  }

  late final _Lighting_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LightingHandle)>>(
          'Lighting_created');
  late final _Lighting_created =
      _Lighting_createdPtr.asFunction<void Function(imp1.RT_LightingHandle)>();

  void Lighting_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Lighting_destroy(
      handle,
    );
  }

  late final _Lighting_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Lighting_destroy');
  late final _Lighting_destroy =
      _Lighting_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LoadSettings_created(
    imp1.RT_LoadSettingsHandle handle,
  ) {
    return _LoadSettings_created(
      handle,
    );
  }

  late final _LoadSettings_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LoadSettingsHandle)>>(
      'LoadSettings_created');
  late final _LoadSettings_created = _LoadSettings_createdPtr.asFunction<
      void Function(imp1.RT_LoadSettingsHandle)>();

  void LoadSettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LoadSettings_destroy(
      handle,
    );
  }

  late final _LoadSettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LoadSettings_destroy');
  late final _LoadSettings_destroy = _LoadSettings_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LoadableImage_created(
    imp1.RT_LoadableImageHandle handle,
  ) {
    return _LoadableImage_created(
      handle,
    );
  }

  late final _LoadableImage_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LoadableImageHandle)>>(
      'LoadableImage_created');
  late final _LoadableImage_created = _LoadableImage_createdPtr.asFunction<
      void Function(imp1.RT_LoadableImageHandle)>();

  void LoadableImage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LoadableImage_destroy(
      handle,
    );
  }

  late final _LoadableImage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LoadableImage_destroy');
  late final _LoadableImage_destroy = _LoadableImage_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LocalFeatureEdit_created(
    imp1.RT_LocalFeatureEditHandle handle,
  ) {
    return _LocalFeatureEdit_created(
      handle,
    );
  }

  late final _LocalFeatureEdit_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_LocalFeatureEditHandle)>>(
      'LocalFeatureEdit_created');
  late final _LocalFeatureEdit_created = _LocalFeatureEdit_createdPtr
      .asFunction<void Function(imp1.RT_LocalFeatureEditHandle)>();

  void LocalFeatureEdit_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocalFeatureEdit_destroy(
      handle,
    );
  }

  late final _LocalFeatureEdit_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocalFeatureEdit_destroy');
  late final _LocalFeatureEdit_destroy = _LocalFeatureEdit_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LocalFeatureEditsResult_created(
    imp1.RT_LocalFeatureEditsResultHandle handle,
  ) {
    return _LocalFeatureEditsResult_created(
      handle,
    );
  }

  late final _LocalFeatureEditsResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LocalFeatureEditsResultHandle)>>(
      'LocalFeatureEditsResult_created');
  late final _LocalFeatureEditsResult_created =
      _LocalFeatureEditsResult_createdPtr.asFunction<
          void Function(imp1.RT_LocalFeatureEditsResultHandle)>();

  void LocalFeatureEditsResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocalFeatureEditsResult_destroy(
      handle,
    );
  }

  late final _LocalFeatureEditsResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocalFeatureEditsResult_destroy');
  late final _LocalFeatureEditsResult_destroy =
      _LocalFeatureEditsResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void LocationDataSource_created(
    imp1.RT_LocationDataSourceHandle handle,
  ) {
    return _LocationDataSource_created(
      handle,
    );
  }

  late final _LocationDataSource_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_LocationDataSourceHandle)>>(
      'LocationDataSource_created');
  late final _LocationDataSource_created = _LocationDataSource_createdPtr
      .asFunction<void Function(imp1.RT_LocationDataSourceHandle)>();

  void LocationDataSource_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocationDataSource_destroy(
      handle,
    );
  }

  late final _LocationDataSource_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocationDataSource_destroy');
  late final _LocationDataSource_destroy = _LocationDataSource_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LocationDataSource_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocationDataSource_destroyInstance(
      handle,
    );
  }

  late final _LocationDataSource_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocationDataSource_destroyInstance');
  late final _LocationDataSource_destroyInstance =
      _LocationDataSource_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void LocationDisplay_created(
    imp1.RT_LocationDisplayHandle handle,
  ) {
    return _LocationDisplay_created(
      handle,
    );
  }

  late final _LocationDisplay_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LocationDisplayHandle)>>(
      'LocationDisplay_created');
  late final _LocationDisplay_created = _LocationDisplay_createdPtr.asFunction<
      void Function(imp1.RT_LocationDisplayHandle)>();

  void LocationDisplay_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocationDisplay_destroy(
      handle,
    );
  }

  late final _LocationDisplay_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocationDisplay_destroy');
  late final _LocationDisplay_destroy = _LocationDisplay_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LocationDisplay_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocationDisplay_destroyInstance(
      handle,
    );
  }

  late final _LocationDisplay_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocationDisplay_destroyInstance');
  late final _LocationDisplay_destroyInstance =
      _LocationDisplay_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void LocationToScreenResult_created(
    imp1.RT_LocationToScreenResultHandle handle,
  ) {
    return _LocationToScreenResult_created(
      handle,
    );
  }

  late final _LocationToScreenResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LocationToScreenResultHandle)>>(
      'LocationToScreenResult_created');
  late final _LocationToScreenResult_created =
      _LocationToScreenResult_createdPtr.asFunction<
          void Function(imp1.RT_LocationToScreenResultHandle)>();

  void LocationToScreenResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocationToScreenResult_destroy(
      handle,
    );
  }

  late final _LocationToScreenResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocationToScreenResult_destroy');
  late final _LocationToScreenResult_destroy =
      _LocationToScreenResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Location_created(
    imp1.RT_LocationHandle handle,
  ) {
    return _Location_created(
      handle,
    );
  }

  late final _Location_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LocationHandle)>>(
          'Location_created');
  late final _Location_created =
      _Location_createdPtr.asFunction<void Function(imp1.RT_LocationHandle)>();

  void Location_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Location_destroy(
      handle,
    );
  }

  late final _Location_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Location_destroy');
  late final _Location_destroy =
      _Location_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LocatorAttribute_created(
    imp1.RT_LocatorAttributeHandle handle,
  ) {
    return _LocatorAttribute_created(
      handle,
    );
  }

  late final _LocatorAttribute_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_LocatorAttributeHandle)>>(
      'LocatorAttribute_created');
  late final _LocatorAttribute_created = _LocatorAttribute_createdPtr
      .asFunction<void Function(imp1.RT_LocatorAttributeHandle)>();

  void LocatorAttribute_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocatorAttribute_destroy(
      handle,
    );
  }

  late final _LocatorAttribute_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocatorAttribute_destroy');
  late final _LocatorAttribute_destroy = _LocatorAttribute_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void LocatorInfo_created(
    imp1.RT_LocatorInfoHandle handle,
  ) {
    return _LocatorInfo_created(
      handle,
    );
  }

  late final _LocatorInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LocatorInfoHandle)>>(
          'LocatorInfo_created');
  late final _LocatorInfo_created = _LocatorInfo_createdPtr.asFunction<
      void Function(imp1.RT_LocatorInfoHandle)>();

  void LocatorInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocatorInfo_destroy(
      handle,
    );
  }

  late final _LocatorInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocatorInfo_destroy');
  late final _LocatorInfo_destroy = _LocatorInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void LocatorTask_created(
    imp1.RT_LocatorTaskHandle handle,
  ) {
    return _LocatorTask_created(
      handle,
    );
  }

  late final _LocatorTask_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_LocatorTaskHandle)>>(
          'LocatorTask_created');
  late final _LocatorTask_created = _LocatorTask_createdPtr.asFunction<
      void Function(imp1.RT_LocatorTaskHandle)>();

  void LocatorTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _LocatorTask_destroy(
      handle,
    );
  }

  late final _LocatorTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'LocatorTask_destroy');
  late final _LocatorTask_destroy = _LocatorTask_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void MapServiceCapabilities_created(
    imp1.RT_MapServiceCapabilitiesHandle handle,
  ) {
    return _MapServiceCapabilities_created(
      handle,
    );
  }

  late final _MapServiceCapabilities_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_MapServiceCapabilitiesHandle)>>(
      'MapServiceCapabilities_created');
  late final _MapServiceCapabilities_created =
      _MapServiceCapabilities_createdPtr.asFunction<
          void Function(imp1.RT_MapServiceCapabilitiesHandle)>();

  void MapServiceCapabilities_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MapServiceCapabilities_destroy(
      handle,
    );
  }

  late final _MapServiceCapabilities_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MapServiceCapabilities_destroy');
  late final _MapServiceCapabilities_destroy =
      _MapServiceCapabilities_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void MobileMapPackage_created(
    imp1.RT_MobileMapPackageHandle handle,
  ) {
    return _MobileMapPackage_created(
      handle,
    );
  }

  late final _MobileMapPackage_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_MobileMapPackageHandle)>>(
      'MobileMapPackage_created');
  late final _MobileMapPackage_created = _MobileMapPackage_createdPtr
      .asFunction<void Function(imp1.RT_MobileMapPackageHandle)>();

  void MobileMapPackage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MobileMapPackage_destroy(
      handle,
    );
  }

  late final _MobileMapPackage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MobileMapPackage_destroy');
  late final _MobileMapPackage_destroy = _MobileMapPackage_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void MobileScenePackage_created(
    imp1.RT_MobileScenePackageHandle handle,
  ) {
    return _MobileScenePackage_created(
      handle,
    );
  }

  late final _MobileScenePackage_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_MobileScenePackageHandle)>>(
      'MobileScenePackage_created');
  late final _MobileScenePackage_created = _MobileScenePackage_createdPtr
      .asFunction<void Function(imp1.RT_MobileScenePackageHandle)>();

  void MobileScenePackage_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MobileScenePackage_destroy(
      handle,
    );
  }

  late final _MobileScenePackage_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MobileScenePackage_destroy');
  late final _MobileScenePackage_destroy = _MobileScenePackage_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void MosaicDataset_created(
    RT_MosaicDatasetHandle handle,
  ) {
    return _MosaicDataset_created(
      handle,
    );
  }

  late final _MosaicDataset_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_MosaicDatasetHandle)>>(
          'MosaicDataset_created');
  late final _MosaicDataset_created = _MosaicDataset_createdPtr.asFunction<
      void Function(RT_MosaicDatasetHandle)>();

  void MosaicDataset_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MosaicDataset_destroy(
      handle,
    );
  }

  late final _MosaicDataset_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MosaicDataset_destroy');
  late final _MosaicDataset_destroy = _MosaicDataset_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void MosaicRule_created(
    RT_MosaicRuleHandle handle,
  ) {
    return _MosaicRule_created(
      handle,
    );
  }

  late final _MosaicRule_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_MosaicRuleHandle)>>(
          'MosaicRule_created');
  late final _MosaicRule_created =
      _MosaicRule_createdPtr.asFunction<void Function(RT_MosaicRuleHandle)>();

  void MosaicRule_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MosaicRule_destroy(
      handle,
    );
  }

  late final _MosaicRule_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MosaicRule_destroy');
  late final _MosaicRule_destroy =
      _MosaicRule_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void MutablePartCollection_created(
    imp1.RT_MutablePartCollectionHandle handle,
  ) {
    return _MutablePartCollection_created(
      handle,
    );
  }

  late final _MutablePartCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_MutablePartCollectionHandle)>>(
      'MutablePartCollection_created');
  late final _MutablePartCollection_created = _MutablePartCollection_createdPtr
      .asFunction<void Function(imp1.RT_MutablePartCollectionHandle)>();

  void MutablePartCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MutablePartCollection_destroy(
      handle,
    );
  }

  late final _MutablePartCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MutablePartCollection_destroy');
  late final _MutablePartCollection_destroy = _MutablePartCollection_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void MutablePart_created(
    imp1.RT_MutablePartHandle handle,
  ) {
    return _MutablePart_created(
      handle,
    );
  }

  late final _MutablePart_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_MutablePartHandle)>>(
          'MutablePart_created');
  late final _MutablePart_created = _MutablePart_createdPtr.asFunction<
      void Function(imp1.RT_MutablePartHandle)>();

  void MutablePart_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MutablePart_destroy(
      handle,
    );
  }

  late final _MutablePart_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MutablePart_destroy');
  late final _MutablePart_destroy = _MutablePart_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void MutablePointCollection_created(
    imp1.RT_MutablePointCollectionHandle handle,
  ) {
    return _MutablePointCollection_created(
      handle,
    );
  }

  late final _MutablePointCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_MutablePointCollectionHandle)>>(
      'MutablePointCollection_created');
  late final _MutablePointCollection_created =
      _MutablePointCollection_createdPtr.asFunction<
          void Function(imp1.RT_MutablePointCollectionHandle)>();

  void MutablePointCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _MutablePointCollection_destroy(
      handle,
    );
  }

  late final _MutablePointCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'MutablePointCollection_destroy');
  late final _MutablePointCollection_destroy =
      _MutablePointCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void NMEASatelliteInfo_created(
    imp1.RT_NMEASatelliteInfoHandle handle,
  ) {
    return _NMEASatelliteInfo_created(
      handle,
    );
  }

  late final _NMEASatelliteInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_NMEASatelliteInfoHandle)>>(
      'NMEASatelliteInfo_created');
  late final _NMEASatelliteInfo_created = _NMEASatelliteInfo_createdPtr
      .asFunction<void Function(imp1.RT_NMEASatelliteInfoHandle)>();

  void NMEASatelliteInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _NMEASatelliteInfo_destroy(
      handle,
    );
  }

  late final _NMEASatelliteInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'NMEASatelliteInfo_destroy');
  late final _NMEASatelliteInfo_destroy = _NMEASatelliteInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void NetworkLocation_created(
    imp1.RT_NetworkLocationHandle handle,
  ) {
    return _NetworkLocation_created(
      handle,
    );
  }

  late final _NetworkLocation_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_NetworkLocationHandle)>>(
      'NetworkLocation_created');
  late final _NetworkLocation_created = _NetworkLocation_createdPtr.asFunction<
      void Function(imp1.RT_NetworkLocationHandle)>();

  void NetworkLocation_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _NetworkLocation_destroy(
      handle,
    );
  }

  late final _NetworkLocation_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'NetworkLocation_destroy');
  late final _NetworkLocation_destroy = _NetworkLocation_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void OAuthApplicationTokenInfo_created(
    imp1.RT_OAuthApplicationTokenInfoHandle handle,
  ) {
    return _OAuthApplicationTokenInfo_created(
      handle,
    );
  }

  late final _OAuthApplicationTokenInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OAuthApplicationTokenInfoHandle)>>(
      'OAuthApplicationTokenInfo_created');
  late final _OAuthApplicationTokenInfo_created =
      _OAuthApplicationTokenInfo_createdPtr.asFunction<
          void Function(imp1.RT_OAuthApplicationTokenInfoHandle)>();

  void OAuthApplicationTokenInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OAuthApplicationTokenInfo_destroy(
      handle,
    );
  }

  late final _OAuthApplicationTokenInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OAuthApplicationTokenInfo_destroy');
  late final _OAuthApplicationTokenInfo_destroy =
      _OAuthApplicationTokenInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OAuthUserConfiguration_created(
    imp1.RT_OAuthUserConfigurationHandle handle,
  ) {
    return _OAuthUserConfiguration_created(
      handle,
    );
  }

  late final _OAuthUserConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OAuthUserConfigurationHandle)>>(
      'OAuthUserConfiguration_created');
  late final _OAuthUserConfiguration_created =
      _OAuthUserConfiguration_createdPtr.asFunction<
          void Function(imp1.RT_OAuthUserConfigurationHandle)>();

  void OAuthUserConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OAuthUserConfiguration_destroy(
      handle,
    );
  }

  late final _OAuthUserConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OAuthUserConfiguration_destroy');
  late final _OAuthUserConfiguration_destroy =
      _OAuthUserConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OAuthUserLoginPrompt_created(
    imp1.RT_OAuthUserLoginPromptHandle handle,
  ) {
    return _OAuthUserLoginPrompt_created(
      handle,
    );
  }

  late final _OAuthUserLoginPrompt_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OAuthUserLoginPromptHandle)>>(
      'OAuthUserLoginPrompt_created');
  late final _OAuthUserLoginPrompt_created = _OAuthUserLoginPrompt_createdPtr
      .asFunction<void Function(imp1.RT_OAuthUserLoginPromptHandle)>();

  void OAuthUserLoginPrompt_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OAuthUserLoginPrompt_destroy(
      handle,
    );
  }

  late final _OAuthUserLoginPrompt_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OAuthUserLoginPrompt_destroy');
  late final _OAuthUserLoginPrompt_destroy = _OAuthUserLoginPrompt_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OAuthUserTokenInfo_created(
    imp1.RT_OAuthUserTokenInfoHandle handle,
  ) {
    return _OAuthUserTokenInfo_created(
      handle,
    );
  }

  late final _OAuthUserTokenInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OAuthUserTokenInfoHandle)>>(
      'OAuthUserTokenInfo_created');
  late final _OAuthUserTokenInfo_created = _OAuthUserTokenInfo_createdPtr
      .asFunction<void Function(imp1.RT_OAuthUserTokenInfoHandle)>();

  void OAuthUserTokenInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OAuthUserTokenInfo_destroy(
      handle,
    );
  }

  late final _OAuthUserTokenInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OAuthUserTokenInfo_destroy');
  late final _OAuthUserTokenInfo_destroy = _OAuthUserTokenInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OGCFeatureCollectionInfo_created(
    imp1.RT_OGCFeatureCollectionInfoHandle handle,
  ) {
    return _OGCFeatureCollectionInfo_created(
      handle,
    );
  }

  late final _OGCFeatureCollectionInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OGCFeatureCollectionInfoHandle)>>(
      'OGCFeatureCollectionInfo_created');
  late final _OGCFeatureCollectionInfo_created =
      _OGCFeatureCollectionInfo_createdPtr.asFunction<
          void Function(imp1.RT_OGCFeatureCollectionInfoHandle)>();

  void OGCFeatureCollectionInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OGCFeatureCollectionInfo_destroy(
      handle,
    );
  }

  late final _OGCFeatureCollectionInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OGCFeatureCollectionInfo_destroy');
  late final _OGCFeatureCollectionInfo_destroy =
      _OGCFeatureCollectionInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OGCFeatureCollectionInfo_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OGCFeatureCollectionInfo_destroyInstance(
      handle,
    );
  }

  late final _OGCFeatureCollectionInfo_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OGCFeatureCollectionInfo_destroyInstance');
  late final _OGCFeatureCollectionInfo_destroyInstance =
      _OGCFeatureCollectionInfo_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OGCFeatureServiceInfo_created(
    RT_OGCFeatureServiceInfoHandle handle,
  ) {
    return _OGCFeatureServiceInfo_created(
      handle,
    );
  }

  late final _OGCFeatureServiceInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_OGCFeatureServiceInfoHandle)>>(
      'OGCFeatureServiceInfo_created');
  late final _OGCFeatureServiceInfo_created = _OGCFeatureServiceInfo_createdPtr
      .asFunction<void Function(RT_OGCFeatureServiceInfoHandle)>();

  void OGCFeatureServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OGCFeatureServiceInfo_destroy(
      handle,
    );
  }

  late final _OGCFeatureServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OGCFeatureServiceInfo_destroy');
  late final _OGCFeatureServiceInfo_destroy = _OGCFeatureServiceInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OGCFeatureService_created(
    RT_OGCFeatureServiceHandle handle,
  ) {
    return _OGCFeatureService_created(
      handle,
    );
  }

  late final _OGCFeatureService_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_OGCFeatureServiceHandle)>>(
      'OGCFeatureService_created');
  late final _OGCFeatureService_created = _OGCFeatureService_createdPtr
      .asFunction<void Function(RT_OGCFeatureServiceHandle)>();

  void OGCFeatureService_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OGCFeatureService_destroy(
      handle,
    );
  }

  late final _OGCFeatureService_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OGCFeatureService_destroy');
  late final _OGCFeatureService_destroy = _OGCFeatureService_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineCapability_created(
    imp1.RT_OfflineCapabilityHandle handle,
  ) {
    return _OfflineCapability_created(
      handle,
    );
  }

  late final _OfflineCapability_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OfflineCapabilityHandle)>>(
      'OfflineCapability_created');
  late final _OfflineCapability_created = _OfflineCapability_createdPtr
      .asFunction<void Function(imp1.RT_OfflineCapabilityHandle)>();

  void OfflineCapability_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineCapability_destroy(
      handle,
    );
  }

  late final _OfflineCapability_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineCapability_destroy');
  late final _OfflineCapability_destroy = _OfflineCapability_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapCapabilities_created(
    imp1.RT_OfflineMapCapabilitiesHandle handle,
  ) {
    return _OfflineMapCapabilities_created(
      handle,
    );
  }

  late final _OfflineMapCapabilities_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapCapabilitiesHandle)>>(
      'OfflineMapCapabilities_created');
  late final _OfflineMapCapabilities_created =
      _OfflineMapCapabilities_createdPtr.asFunction<
          void Function(imp1.RT_OfflineMapCapabilitiesHandle)>();

  void OfflineMapCapabilities_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapCapabilities_destroy(
      handle,
    );
  }

  late final _OfflineMapCapabilities_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapCapabilities_destroy');
  late final _OfflineMapCapabilities_destroy =
      _OfflineMapCapabilities_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapItemInfo_created(
    imp1.RT_OfflineMapItemInfoHandle handle,
  ) {
    return _OfflineMapItemInfo_created(
      handle,
    );
  }

  late final _OfflineMapItemInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OfflineMapItemInfoHandle)>>(
      'OfflineMapItemInfo_created');
  late final _OfflineMapItemInfo_created = _OfflineMapItemInfo_createdPtr
      .asFunction<void Function(imp1.RT_OfflineMapItemInfoHandle)>();

  void OfflineMapItemInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapItemInfo_destroy(
      handle,
    );
  }

  late final _OfflineMapItemInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapItemInfo_destroy');
  late final _OfflineMapItemInfo_destroy = _OfflineMapItemInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapParametersKey_created(
    imp1.RT_OfflineMapParametersKeyHandle handle,
  ) {
    return _OfflineMapParametersKey_created(
      handle,
    );
  }

  late final _OfflineMapParametersKey_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapParametersKeyHandle)>>(
      'OfflineMapParametersKey_created');
  late final _OfflineMapParametersKey_created =
      _OfflineMapParametersKey_createdPtr.asFunction<
          void Function(imp1.RT_OfflineMapParametersKeyHandle)>();

  void OfflineMapParametersKey_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapParametersKey_destroy(
      handle,
    );
  }

  late final _OfflineMapParametersKey_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapParametersKey_destroy');
  late final _OfflineMapParametersKey_destroy =
      _OfflineMapParametersKey_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapParametersKey_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapParametersKey_destroyInstance(
      handle,
    );
  }

  late final _OfflineMapParametersKey_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapParametersKey_destroyInstance');
  late final _OfflineMapParametersKey_destroyInstance =
      _OfflineMapParametersKey_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapSyncLayerResult_created(
    imp1.RT_OfflineMapSyncLayerResultHandle handle,
  ) {
    return _OfflineMapSyncLayerResult_created(
      handle,
    );
  }

  late final _OfflineMapSyncLayerResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapSyncLayerResultHandle)>>(
      'OfflineMapSyncLayerResult_created');
  late final _OfflineMapSyncLayerResult_created =
      _OfflineMapSyncLayerResult_createdPtr.asFunction<
          void Function(imp1.RT_OfflineMapSyncLayerResultHandle)>();

  void OfflineMapSyncLayerResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapSyncLayerResult_destroy(
      handle,
    );
  }

  late final _OfflineMapSyncLayerResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapSyncLayerResult_destroy');
  late final _OfflineMapSyncLayerResult_destroy =
      _OfflineMapSyncLayerResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapSyncParameters_created(
    imp1.RT_OfflineMapSyncParametersHandle handle,
  ) {
    return _OfflineMapSyncParameters_created(
      handle,
    );
  }

  late final _OfflineMapSyncParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapSyncParametersHandle)>>(
      'OfflineMapSyncParameters_created');
  late final _OfflineMapSyncParameters_created =
      _OfflineMapSyncParameters_createdPtr.asFunction<
          void Function(imp1.RT_OfflineMapSyncParametersHandle)>();

  void OfflineMapSyncParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapSyncParameters_destroy(
      handle,
    );
  }

  late final _OfflineMapSyncParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapSyncParameters_destroy');
  late final _OfflineMapSyncParameters_destroy =
      _OfflineMapSyncParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapSyncResult_created(
    imp1.RT_OfflineMapSyncResultHandle handle,
  ) {
    return _OfflineMapSyncResult_created(
      handle,
    );
  }

  late final _OfflineMapSyncResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapSyncResultHandle)>>(
      'OfflineMapSyncResult_created');
  late final _OfflineMapSyncResult_created = _OfflineMapSyncResult_createdPtr
      .asFunction<void Function(imp1.RT_OfflineMapSyncResultHandle)>();

  void OfflineMapSyncResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapSyncResult_destroy(
      handle,
    );
  }

  late final _OfflineMapSyncResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapSyncResult_destroy');
  late final _OfflineMapSyncResult_destroy = _OfflineMapSyncResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapSyncTask_created(
    imp1.RT_OfflineMapSyncTaskHandle handle,
  ) {
    return _OfflineMapSyncTask_created(
      handle,
    );
  }

  late final _OfflineMapSyncTask_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OfflineMapSyncTaskHandle)>>(
      'OfflineMapSyncTask_created');
  late final _OfflineMapSyncTask_created = _OfflineMapSyncTask_createdPtr
      .asFunction<void Function(imp1.RT_OfflineMapSyncTaskHandle)>();

  void OfflineMapSyncTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapSyncTask_destroy(
      handle,
    );
  }

  late final _OfflineMapSyncTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapSyncTask_destroy');
  late final _OfflineMapSyncTask_destroy = _OfflineMapSyncTask_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapTask_created(
    imp1.RT_OfflineMapTaskHandle handle,
  ) {
    return _OfflineMapTask_created(
      handle,
    );
  }

  late final _OfflineMapTask_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_OfflineMapTaskHandle)>>(
      'OfflineMapTask_created');
  late final _OfflineMapTask_created = _OfflineMapTask_createdPtr.asFunction<
      void Function(imp1.RT_OfflineMapTaskHandle)>();

  void OfflineMapTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapTask_destroy(
      handle,
    );
  }

  late final _OfflineMapTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapTask_destroy');
  late final _OfflineMapTask_destroy = _OfflineMapTask_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapUpdateCapabilities_created(
    imp1.RT_OfflineMapUpdateCapabilitiesHandle handle,
  ) {
    return _OfflineMapUpdateCapabilities_created(
      handle,
    );
  }

  late final _OfflineMapUpdateCapabilities_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapUpdateCapabilitiesHandle)>>(
      'OfflineMapUpdateCapabilities_created');
  late final _OfflineMapUpdateCapabilities_created =
      _OfflineMapUpdateCapabilities_createdPtr.asFunction<
          void Function(imp1.RT_OfflineMapUpdateCapabilitiesHandle)>();

  void OfflineMapUpdateCapabilities_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapUpdateCapabilities_destroy(
      handle,
    );
  }

  late final _OfflineMapUpdateCapabilities_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapUpdateCapabilities_destroy');
  late final _OfflineMapUpdateCapabilities_destroy =
      _OfflineMapUpdateCapabilities_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineMapUpdatesInfo_created(
    imp1.RT_OfflineMapUpdatesInfoHandle handle,
  ) {
    return _OfflineMapUpdatesInfo_created(
      handle,
    );
  }

  late final _OfflineMapUpdatesInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapUpdatesInfoHandle)>>(
      'OfflineMapUpdatesInfo_created');
  late final _OfflineMapUpdatesInfo_created = _OfflineMapUpdatesInfo_createdPtr
      .asFunction<void Function(imp1.RT_OfflineMapUpdatesInfoHandle)>();

  void OfflineMapUpdatesInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineMapUpdatesInfo_destroy(
      handle,
    );
  }

  late final _OfflineMapUpdatesInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineMapUpdatesInfo_destroy');
  late final _OfflineMapUpdatesInfo_destroy = _OfflineMapUpdatesInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OfflineSettings_created(
    imp1.RT_OfflineSettingsHandle handle,
  ) {
    return _OfflineSettings_created(
      handle,
    );
  }

  late final _OfflineSettings_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_OfflineSettingsHandle)>>(
      'OfflineSettings_created');
  late final _OfflineSettings_created = _OfflineSettings_createdPtr.asFunction<
      void Function(imp1.RT_OfflineSettingsHandle)>();

  void OfflineSettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OfflineSettings_destroy(
      handle,
    );
  }

  late final _OfflineSettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OfflineSettings_destroy');
  late final _OfflineSettings_destroy = _OfflineSettings_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void OmniView_created(
    imp1.RT_OmniViewHandle handle,
  ) {
    return _OmniView_created(
      handle,
    );
  }

  late final _OmniView_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_OmniViewHandle)>>(
          'OmniView_created');
  late final _OmniView_created =
      _OmniView_createdPtr.asFunction<void Function(imp1.RT_OmniViewHandle)>();

  void OmniView_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OmniView_destroy(
      handle,
    );
  }

  late final _OmniView_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OmniView_destroy');
  late final _OmniView_destroy =
      _OmniView_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OrderBy_created(
    imp1.RT_OrderByHandle handle,
  ) {
    return _OrderBy_created(
      handle,
    );
  }

  late final _OrderBy_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_OrderByHandle)>>(
          'OrderBy_created');
  late final _OrderBy_created =
      _OrderBy_createdPtr.asFunction<void Function(imp1.RT_OrderByHandle)>();

  void OrderBy_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OrderBy_destroy(
      handle,
    );
  }

  late final _OrderBy_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OrderBy_destroy');
  late final _OrderBy_destroy =
      _OrderBy_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void OwnershipBasedAccessControlInfo_created(
    imp1.RT_OwnershipBasedAccessControlInfoHandle handle,
  ) {
    return _OwnershipBasedAccessControlInfo_created(
      handle,
    );
  }

  late final _OwnershipBasedAccessControlInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_OwnershipBasedAccessControlInfoHandle)>>(
      'OwnershipBasedAccessControlInfo_created');
  late final _OwnershipBasedAccessControlInfo_created =
      _OwnershipBasedAccessControlInfo_createdPtr.asFunction<
          void Function(imp1.RT_OwnershipBasedAccessControlInfoHandle)>();

  void OwnershipBasedAccessControlInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _OwnershipBasedAccessControlInfo_destroy(
      handle,
    );
  }

  late final _OwnershipBasedAccessControlInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'OwnershipBasedAccessControlInfo_destroy');
  late final _OwnershipBasedAccessControlInfo_destroy =
      _OwnershipBasedAccessControlInfo_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PlatformHelpersProvider_created(
    imp1.RT_PlatformHelpersProviderHandle handle,
  ) {
    return _PlatformHelpersProvider_created(
      handle,
    );
  }

  late final _PlatformHelpersProvider_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PlatformHelpersProviderHandle)>>(
      'PlatformHelpersProvider_created');
  late final _PlatformHelpersProvider_created =
      _PlatformHelpersProvider_createdPtr.asFunction<
          void Function(imp1.RT_PlatformHelpersProviderHandle)>();

  void PlatformHelpersProvider_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PlatformHelpersProvider_destroy(
      handle,
    );
  }

  late final _PlatformHelpersProvider_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PlatformHelpersProvider_destroy');
  late final _PlatformHelpersProvider_destroy =
      _PlatformHelpersProvider_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PointBarrier_created(
    imp1.RT_PointBarrierHandle handle,
  ) {
    return _PointBarrier_created(
      handle,
    );
  }

  late final _PointBarrier_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PointBarrierHandle)>>(
      'PointBarrier_created');
  late final _PointBarrier_created = _PointBarrier_createdPtr.asFunction<
      void Function(imp1.RT_PointBarrierHandle)>();

  void PointBarrier_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PointBarrier_destroy(
      handle,
    );
  }

  late final _PointBarrier_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PointBarrier_destroy');
  late final _PointBarrier_destroy = _PointBarrier_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PolygonBarrier_created(
    imp1.RT_PolygonBarrierHandle handle,
  ) {
    return _PolygonBarrier_created(
      handle,
    );
  }

  late final _PolygonBarrier_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PolygonBarrierHandle)>>(
      'PolygonBarrier_created');
  late final _PolygonBarrier_created = _PolygonBarrier_createdPtr.asFunction<
      void Function(imp1.RT_PolygonBarrierHandle)>();

  void PolygonBarrier_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PolygonBarrier_destroy(
      handle,
    );
  }

  late final _PolygonBarrier_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PolygonBarrier_destroy');
  late final _PolygonBarrier_destroy = _PolygonBarrier_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PolygonCollection_created(
    RT_PolygonCollectionHandle handle,
  ) {
    return _PolygonCollection_created(
      handle,
    );
  }

  late final _PolygonCollection_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_PolygonCollectionHandle)>>(
      'PolygonCollection_created');
  late final _PolygonCollection_created = _PolygonCollection_createdPtr
      .asFunction<void Function(RT_PolygonCollectionHandle)>();

  void PolygonCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PolygonCollection_destroy(
      handle,
    );
  }

  late final _PolygonCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PolygonCollection_destroy');
  late final _PolygonCollection_destroy = _PolygonCollection_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void PolylineBarrier_created(
    imp1.RT_PolylineBarrierHandle handle,
  ) {
    return _PolylineBarrier_created(
      handle,
    );
  }

  late final _PolylineBarrier_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PolylineBarrierHandle)>>(
      'PolylineBarrier_created');
  late final _PolylineBarrier_created = _PolylineBarrier_createdPtr.asFunction<
      void Function(imp1.RT_PolylineBarrierHandle)>();

  void PolylineBarrier_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PolylineBarrier_destroy(
      handle,
    );
  }

  late final _PolylineBarrier_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PolylineBarrier_destroy');
  late final _PolylineBarrier_destroy = _PolylineBarrier_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PopupAttachmentManager_created(
    RT_PopupAttachmentManagerHandle handle,
  ) {
    return _PopupAttachmentManager_created(
      handle,
    );
  }

  late final _PopupAttachmentManager_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_PopupAttachmentManagerHandle)>>(
      'PopupAttachmentManager_created');
  late final _PopupAttachmentManager_created =
      _PopupAttachmentManager_createdPtr.asFunction<
          void Function(RT_PopupAttachmentManagerHandle)>();

  void PopupAttachmentManager_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupAttachmentManager_destroy(
      handle,
    );
  }

  late final _PopupAttachmentManager_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupAttachmentManager_destroy');
  late final _PopupAttachmentManager_destroy =
      _PopupAttachmentManager_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PopupAttachment_created(
    imp1.RT_PopupAttachmentHandle handle,
  ) {
    return _PopupAttachment_created(
      handle,
    );
  }

  late final _PopupAttachment_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupAttachmentHandle)>>(
      'PopupAttachment_created');
  late final _PopupAttachment_created = _PopupAttachment_createdPtr.asFunction<
      void Function(imp1.RT_PopupAttachmentHandle)>();

  void PopupAttachment_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupAttachment_destroy(
      handle,
    );
  }

  late final _PopupAttachment_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupAttachment_destroy');
  late final _PopupAttachment_destroy = _PopupAttachment_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PopupAttachment_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupAttachment_destroyInstance(
      handle,
    );
  }

  late final _PopupAttachment_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupAttachment_destroyInstance');
  late final _PopupAttachment_destroyInstance =
      _PopupAttachment_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PopupDefinition_created(
    imp1.RT_PopupDefinitionHandle handle,
  ) {
    return _PopupDefinition_created(
      handle,
    );
  }

  late final _PopupDefinition_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupDefinitionHandle)>>(
      'PopupDefinition_created');
  late final _PopupDefinition_created = _PopupDefinition_createdPtr.asFunction<
      void Function(imp1.RT_PopupDefinitionHandle)>();

  void PopupDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupDefinition_destroy(
      handle,
    );
  }

  late final _PopupDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupDefinition_destroy');
  late final _PopupDefinition_destroy = _PopupDefinition_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PopupDefinition_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupDefinition_destroyInstance(
      handle,
    );
  }

  late final _PopupDefinition_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupDefinition_destroyInstance');
  late final _PopupDefinition_destroyInstance =
      _PopupDefinition_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PopupElement_created(
    imp1.RT_PopupElementHandle handle,
  ) {
    return _PopupElement_created(
      handle,
    );
  }

  late final _PopupElement_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupElementHandle)>>(
      'PopupElement_created');
  late final _PopupElement_created = _PopupElement_createdPtr.asFunction<
      void Function(imp1.RT_PopupElementHandle)>();

  void PopupElement_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupElement_destroy(
      handle,
    );
  }

  late final _PopupElement_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupElement_destroy');
  late final _PopupElement_destroy = _PopupElement_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PopupExpressionEvaluation_created(
    imp1.RT_PopupExpressionEvaluationHandle handle,
  ) {
    return _PopupExpressionEvaluation_created(
      handle,
    );
  }

  late final _PopupExpressionEvaluation_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PopupExpressionEvaluationHandle)>>(
      'PopupExpressionEvaluation_created');
  late final _PopupExpressionEvaluation_created =
      _PopupExpressionEvaluation_createdPtr.asFunction<
          void Function(imp1.RT_PopupExpressionEvaluationHandle)>();

  void PopupExpressionEvaluation_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupExpressionEvaluation_destroy(
      handle,
    );
  }

  late final _PopupExpressionEvaluation_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupExpressionEvaluation_destroy');
  late final _PopupExpressionEvaluation_destroy =
      _PopupExpressionEvaluation_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PopupExpression_created(
    imp1.RT_PopupExpressionHandle handle,
  ) {
    return _PopupExpression_created(
      handle,
    );
  }

  late final _PopupExpression_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupExpressionHandle)>>(
      'PopupExpression_created');
  late final _PopupExpression_created = _PopupExpression_createdPtr.asFunction<
      void Function(imp1.RT_PopupExpressionHandle)>();

  void PopupExpression_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupExpression_destroy(
      handle,
    );
  }

  late final _PopupExpression_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupExpression_destroy');
  late final _PopupExpression_destroy = _PopupExpression_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PopupExpression_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupExpression_destroyInstance(
      handle,
    );
  }

  late final _PopupExpression_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupExpression_destroyInstance');
  late final _PopupExpression_destroyInstance =
      _PopupExpression_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PopupFieldFormat_created(
    RT_PopupFieldFormatHandle handle,
  ) {
    return _PopupFieldFormat_created(
      handle,
    );
  }

  late final _PopupFieldFormat_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_PopupFieldFormatHandle)>>(
          'PopupFieldFormat_created');
  late final _PopupFieldFormat_created = _PopupFieldFormat_createdPtr
      .asFunction<void Function(RT_PopupFieldFormatHandle)>();

  void PopupFieldFormat_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupFieldFormat_destroy(
      handle,
    );
  }

  late final _PopupFieldFormat_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupFieldFormat_destroy');
  late final _PopupFieldFormat_destroy = _PopupFieldFormat_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void PopupField_created(
    imp1.RT_PopupFieldHandle handle,
  ) {
    return _PopupField_created(
      handle,
    );
  }

  late final _PopupField_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupFieldHandle)>>(
          'PopupField_created');
  late final _PopupField_created = _PopupField_createdPtr.asFunction<
      void Function(imp1.RT_PopupFieldHandle)>();

  void PopupField_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupField_destroy(
      handle,
    );
  }

  late final _PopupField_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupField_destroy');
  late final _PopupField_destroy =
      _PopupField_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void PopupMediaValue_created(
    RT_PopupMediaValueHandle handle,
  ) {
    return _PopupMediaValue_created(
      handle,
    );
  }

  late final _PopupMediaValue_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_PopupMediaValueHandle)>>(
          'PopupMediaValue_created');
  late final _PopupMediaValue_created = _PopupMediaValue_createdPtr.asFunction<
      void Function(RT_PopupMediaValueHandle)>();

  void PopupMediaValue_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupMediaValue_destroy(
      handle,
    );
  }

  late final _PopupMediaValue_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupMediaValue_destroy');
  late final _PopupMediaValue_destroy = _PopupMediaValue_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PopupMedia_created(
    imp1.RT_PopupMediaHandle handle,
  ) {
    return _PopupMedia_created(
      handle,
    );
  }

  late final _PopupMedia_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupMediaHandle)>>(
          'PopupMedia_created');
  late final _PopupMedia_created = _PopupMedia_createdPtr.asFunction<
      void Function(imp1.RT_PopupMediaHandle)>();

  void PopupMedia_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupMedia_destroy(
      handle,
    );
  }

  late final _PopupMedia_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupMedia_destroy');
  late final _PopupMedia_destroy =
      _PopupMedia_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void PopupRelatedFeaturesDefinition_created(
    RT_PopupRelatedFeaturesDefinitionHandle handle,
  ) {
    return _PopupRelatedFeaturesDefinition_created(
      handle,
    );
  }

  late final _PopupRelatedFeaturesDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_PopupRelatedFeaturesDefinitionHandle)>>(
      'PopupRelatedFeaturesDefinition_created');
  late final _PopupRelatedFeaturesDefinition_created =
      _PopupRelatedFeaturesDefinition_createdPtr.asFunction<
          void Function(RT_PopupRelatedFeaturesDefinitionHandle)>();

  void PopupRelatedFeaturesDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupRelatedFeaturesDefinition_destroy(
      handle,
    );
  }

  late final _PopupRelatedFeaturesDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupRelatedFeaturesDefinition_destroy');
  late final _PopupRelatedFeaturesDefinition_destroy =
      _PopupRelatedFeaturesDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void PopupRelatedFeaturesSortOrder_created(
    imp1.RT_PopupRelatedFeaturesSortOrderHandle handle,
  ) {
    return _PopupRelatedFeaturesSortOrder_created(
      handle,
    );
  }

  late final _PopupRelatedFeaturesSortOrder_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PopupRelatedFeaturesSortOrderHandle)>>(
      'PopupRelatedFeaturesSortOrder_created');
  late final _PopupRelatedFeaturesSortOrder_created =
      _PopupRelatedFeaturesSortOrder_createdPtr.asFunction<
          void Function(imp1.RT_PopupRelatedFeaturesSortOrderHandle)>();

  void PopupRelatedFeaturesSortOrder_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PopupRelatedFeaturesSortOrder_destroy(
      handle,
    );
  }

  late final _PopupRelatedFeaturesSortOrder_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PopupRelatedFeaturesSortOrder_destroy');
  late final _PopupRelatedFeaturesSortOrder_destroy =
      _PopupRelatedFeaturesSortOrder_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Popup_created(
    imp1.RT_PopupHandle handle,
  ) {
    return _Popup_created(
      handle,
    );
  }

  late final _Popup_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupHandle)>>(
          'Popup_created');
  late final _Popup_created =
      _Popup_createdPtr.asFunction<void Function(imp1.RT_PopupHandle)>();

  void Popup_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Popup_destroy(
      handle,
    );
  }

  late final _Popup_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Popup_destroy');
  late final _Popup_destroy =
      _Popup_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void PortalInfo_created(
    imp1.RT_PortalInfoHandle handle,
  ) {
    return _PortalInfo_created(
      handle,
    );
  }

  late final _PortalInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_PortalInfoHandle)>>(
          'PortalInfo_created');
  late final _PortalInfo_created = _PortalInfo_createdPtr.asFunction<
      void Function(imp1.RT_PortalInfoHandle)>();

  void PortalInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PortalInfo_destroy(
      handle,
    );
  }

  late final _PortalInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PortalInfo_destroy');
  late final _PortalInfo_destroy =
      _PortalInfo_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void PortalNetworkSecuredInquiry_created(
    imp1.RT_PortalNetworkSecuredInquiryHandle handle,
  ) {
    return _PortalNetworkSecuredInquiry_created(
      handle,
    );
  }

  late final _PortalNetworkSecuredInquiry_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PortalNetworkSecuredInquiryHandle)>>(
      'PortalNetworkSecuredInquiry_created');
  late final _PortalNetworkSecuredInquiry_created =
      _PortalNetworkSecuredInquiry_createdPtr.asFunction<
          void Function(imp1.RT_PortalNetworkSecuredInquiryHandle)>();

  void PortalNetworkSecuredInquiry_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PortalNetworkSecuredInquiry_destroy(
      handle,
    );
  }

  late final _PortalNetworkSecuredInquiry_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PortalNetworkSecuredInquiry_destroy');
  late final _PortalNetworkSecuredInquiry_destroy =
      _PortalNetworkSecuredInquiry_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Portal_created(
    imp1.RT_PortalHandle handle,
  ) {
    return _Portal_created(
      handle,
    );
  }

  late final _Portal_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_PortalHandle)>>(
          'Portal_created');
  late final _Portal_created =
      _Portal_createdPtr.asFunction<void Function(imp1.RT_PortalHandle)>();

  void Portal_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Portal_destroy(
      handle,
    );
  }

  late final _Portal_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Portal_destroy');
  late final _Portal_destroy =
      _Portal_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Portal_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Portal_destroyInstance(
      handle,
    );
  }

  late final _Portal_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Portal_destroyInstance');
  late final _Portal_destroyInstance = _Portal_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PreplannedMapArea_created(
    imp1.RT_PreplannedMapAreaHandle handle,
  ) {
    return _PreplannedMapArea_created(
      handle,
    );
  }

  late final _PreplannedMapArea_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_PreplannedMapAreaHandle)>>(
      'PreplannedMapArea_created');
  late final _PreplannedMapArea_created = _PreplannedMapArea_createdPtr
      .asFunction<void Function(imp1.RT_PreplannedMapAreaHandle)>();

  void PreplannedMapArea_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PreplannedMapArea_destroy(
      handle,
    );
  }

  late final _PreplannedMapArea_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PreplannedMapArea_destroy');
  late final _PreplannedMapArea_destroy = _PreplannedMapArea_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void PreplannedMapArea_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PreplannedMapArea_destroyInstance(
      handle,
    );
  }

  late final _PreplannedMapArea_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PreplannedMapArea_destroyInstance');
  late final _PreplannedMapArea_destroyInstance =
      _PreplannedMapArea_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ProximityResult_created(
    imp1.RT_ProximityResultHandle handle,
  ) {
    return _ProximityResult_created(
      handle,
    );
  }

  late final _ProximityResult_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ProximityResultHandle)>>(
      'ProximityResult_created');
  late final _ProximityResult_created = _ProximityResult_createdPtr.asFunction<
      void Function(imp1.RT_ProximityResultHandle)>();

  void ProximityResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ProximityResult_destroy(
      handle,
    );
  }

  late final _ProximityResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ProximityResult_destroy');
  late final _ProximityResult_destroy = _ProximityResult_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void PublicKey_created(
    RT_PublicKeyHandle handle,
  ) {
    return _PublicKey_created(
      handle,
    );
  }

  late final _PublicKey_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_PublicKeyHandle)>>(
          'PublicKey_created');
  late final _PublicKey_created =
      _PublicKey_createdPtr.asFunction<void Function(RT_PublicKeyHandle)>();

  void PublicKey_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _PublicKey_destroy(
      handle,
    );
  }

  late final _PublicKey_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'PublicKey_destroy');
  late final _PublicKey_destroy =
      _PublicKey_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void QueryFormats_created(
    RT_QueryFormatsHandle handle,
  ) {
    return _QueryFormats_created(
      handle,
    );
  }

  late final _QueryFormats_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_QueryFormatsHandle)>>(
          'QueryFormats_created');
  late final _QueryFormats_created = _QueryFormats_createdPtr.asFunction<
      void Function(RT_QueryFormatsHandle)>();

  void QueryFormats_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _QueryFormats_destroy(
      handle,
    );
  }

  late final _QueryFormats_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'QueryFormats_destroy');
  late final _QueryFormats_destroy = _QueryFormats_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void QueryParameters_created(
    imp1.RT_QueryParametersHandle handle,
  ) {
    return _QueryParameters_created(
      handle,
    );
  }

  late final _QueryParameters_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_QueryParametersHandle)>>(
      'QueryParameters_created');
  late final _QueryParameters_created = _QueryParameters_createdPtr.asFunction<
      void Function(imp1.RT_QueryParametersHandle)>();

  void QueryParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _QueryParameters_destroy(
      handle,
    );
  }

  late final _QueryParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'QueryParameters_destroy');
  late final _QueryParameters_destroy = _QueryParameters_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void RasterCell_created(
    imp1.RT_RasterCellHandle handle,
  ) {
    return _RasterCell_created(
      handle,
    );
  }

  late final _RasterCell_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_RasterCellHandle)>>(
          'RasterCell_created');
  late final _RasterCell_created = _RasterCell_createdPtr.asFunction<
      void Function(imp1.RT_RasterCellHandle)>();

  void RasterCell_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RasterCell_destroy(
      handle,
    );
  }

  late final _RasterCell_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RasterCell_destroy');
  late final _RasterCell_destroy =
      _RasterCell_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RasterFunctionArguments_created(
    RT_RasterFunctionArgumentsHandle handle,
  ) {
    return _RasterFunctionArguments_created(
      handle,
    );
  }

  late final _RasterFunctionArguments_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_RasterFunctionArgumentsHandle)>>(
      'RasterFunctionArguments_created');
  late final _RasterFunctionArguments_created =
      _RasterFunctionArguments_createdPtr.asFunction<
          void Function(RT_RasterFunctionArgumentsHandle)>();

  void RasterFunctionArguments_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RasterFunctionArguments_destroy(
      handle,
    );
  }

  late final _RasterFunctionArguments_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RasterFunctionArguments_destroy');
  late final _RasterFunctionArguments_destroy =
      _RasterFunctionArguments_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void RasterFunction_created(
    RT_RasterFunctionHandle handle,
  ) {
    return _RasterFunction_created(
      handle,
    );
  }

  late final _RasterFunction_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_RasterFunctionHandle)>>(
          'RasterFunction_created');
  late final _RasterFunction_created = _RasterFunction_createdPtr.asFunction<
      void Function(RT_RasterFunctionHandle)>();

  void RasterFunction_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RasterFunction_destroy(
      handle,
    );
  }

  late final _RasterFunction_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RasterFunction_destroy');
  late final _RasterFunction_destroy = _RasterFunction_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void RasterRenderer_created(
    imp1.RT_RasterRendererHandle handle,
  ) {
    return _RasterRenderer_created(
      handle,
    );
  }

  late final _RasterRenderer_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RasterRendererHandle)>>(
      'RasterRenderer_created');
  late final _RasterRenderer_created = _RasterRenderer_createdPtr.asFunction<
      void Function(imp1.RT_RasterRendererHandle)>();

  void RasterRenderer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RasterRenderer_destroy(
      handle,
    );
  }

  late final _RasterRenderer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RasterRenderer_destroy');
  late final _RasterRenderer_destroy = _RasterRenderer_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Raster_created(
    imp1.RT_RasterHandle handle,
  ) {
    return _Raster_created(
      handle,
    );
  }

  late final _Raster_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_RasterHandle)>>(
          'Raster_created');
  late final _Raster_created =
      _Raster_createdPtr.asFunction<void Function(imp1.RT_RasterHandle)>();

  void Raster_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Raster_destroy(
      handle,
    );
  }

  late final _Raster_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Raster_destroy');
  late final _Raster_destroy =
      _Raster_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RelatedFeatureQueryResult_created(
    imp1.RT_RelatedFeatureQueryResultHandle handle,
  ) {
    return _RelatedFeatureQueryResult_created(
      handle,
    );
  }

  late final _RelatedFeatureQueryResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RelatedFeatureQueryResultHandle)>>(
      'RelatedFeatureQueryResult_created');
  late final _RelatedFeatureQueryResult_created =
      _RelatedFeatureQueryResult_createdPtr.asFunction<
          void Function(imp1.RT_RelatedFeatureQueryResultHandle)>();

  void RelatedFeatureQueryResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RelatedFeatureQueryResult_destroy(
      handle,
    );
  }

  late final _RelatedFeatureQueryResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RelatedFeatureQueryResult_destroy');
  late final _RelatedFeatureQueryResult_destroy =
      _RelatedFeatureQueryResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void RelatedQueryParameters_created(
    imp1.RT_RelatedQueryParametersHandle handle,
  ) {
    return _RelatedQueryParameters_created(
      handle,
    );
  }

  late final _RelatedQueryParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RelatedQueryParametersHandle)>>(
      'RelatedQueryParameters_created');
  late final _RelatedQueryParameters_created =
      _RelatedQueryParameters_createdPtr.asFunction<
          void Function(imp1.RT_RelatedQueryParametersHandle)>();

  void RelatedQueryParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RelatedQueryParameters_destroy(
      handle,
    );
  }

  late final _RelatedQueryParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RelatedQueryParameters_destroy');
  late final _RelatedQueryParameters_destroy =
      _RelatedQueryParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void RelationshipInfo_created(
    imp1.RT_RelationshipInfoHandle handle,
  ) {
    return _RelationshipInfo_created(
      handle,
    );
  }

  late final _RelationshipInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_RelationshipInfoHandle)>>(
      'RelationshipInfo_created');
  late final _RelationshipInfo_created = _RelationshipInfo_createdPtr
      .asFunction<void Function(imp1.RT_RelationshipInfoHandle)>();

  void RelationshipInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RelationshipInfo_destroy(
      handle,
    );
  }

  late final _RelationshipInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RelationshipInfo_destroy');
  late final _RelationshipInfo_destroy = _RelationshipInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RenderCommandServer_created(
    RT_RenderCommandServerHandle handle,
  ) {
    return _RenderCommandServer_created(
      handle,
    );
  }

  late final _RenderCommandServer_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_RenderCommandServerHandle)>>(
      'RenderCommandServer_created');
  late final _RenderCommandServer_created = _RenderCommandServer_createdPtr
      .asFunction<void Function(RT_RenderCommandServerHandle)>();

  void RenderCommandServer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RenderCommandServer_destroy(
      handle,
    );
  }

  late final _RenderCommandServer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RenderCommandServer_destroy');
  late final _RenderCommandServer_destroy = _RenderCommandServer_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RendererSceneProperties_created(
    imp1.RT_RendererScenePropertiesHandle handle,
  ) {
    return _RendererSceneProperties_created(
      handle,
    );
  }

  late final _RendererSceneProperties_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RendererScenePropertiesHandle)>>(
      'RendererSceneProperties_created');
  late final _RendererSceneProperties_created =
      _RendererSceneProperties_createdPtr.asFunction<
          void Function(imp1.RT_RendererScenePropertiesHandle)>();

  void RendererSceneProperties_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RendererSceneProperties_destroy(
      handle,
    );
  }

  late final _RendererSceneProperties_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RendererSceneProperties_destroy');
  late final _RendererSceneProperties_destroy =
      _RendererSceneProperties_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void Renderer_created(
    imp1.RT_RendererHandle handle,
  ) {
    return _Renderer_created(
      handle,
    );
  }

  late final _Renderer_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_RendererHandle)>>(
          'Renderer_created');
  late final _Renderer_created =
      _Renderer_createdPtr.asFunction<void Function(imp1.RT_RendererHandle)>();

  void Renderer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Renderer_destroy(
      handle,
    );
  }

  late final _Renderer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Renderer_destroy');
  late final _Renderer_destroy =
      _Renderer_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Renderer_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Renderer_destroyInstance(
      handle,
    );
  }

  late final _Renderer_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Renderer_destroyInstance');
  late final _Renderer_destroyInstance = _Renderer_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RenderingRuleInfo_created(
    imp1.RT_RenderingRuleInfoHandle handle,
  ) {
    return _RenderingRuleInfo_created(
      handle,
    );
  }

  late final _RenderingRuleInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_RenderingRuleInfoHandle)>>(
      'RenderingRuleInfo_created');
  late final _RenderingRuleInfo_created = _RenderingRuleInfo_createdPtr
      .asFunction<void Function(imp1.RT_RenderingRuleInfoHandle)>();

  void RenderingRuleInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RenderingRuleInfo_destroy(
      handle,
    );
  }

  late final _RenderingRuleInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RenderingRuleInfo_destroy');
  late final _RenderingRuleInfo_destroy = _RenderingRuleInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RenderingRule_created(
    RT_RenderingRuleHandle handle,
  ) {
    return _RenderingRule_created(
      handle,
    );
  }

  late final _RenderingRule_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_RenderingRuleHandle)>>(
          'RenderingRule_created');
  late final _RenderingRule_created = _RenderingRule_createdPtr.asFunction<
      void Function(RT_RenderingRuleHandle)>();

  void RenderingRule_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RenderingRule_destroy(
      handle,
    );
  }

  late final _RenderingRule_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RenderingRule_destroy');
  late final _RenderingRule_destroy = _RenderingRule_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void RequestAttachment_created(
    imp1.RT_RequestAttachmentHandle handle,
  ) {
    return _RequestAttachment_created(
      handle,
    );
  }

  late final _RequestAttachment_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_RequestAttachmentHandle)>>(
      'RequestAttachment_created');
  late final _RequestAttachment_created = _RequestAttachment_createdPtr
      .asFunction<void Function(imp1.RT_RequestAttachmentHandle)>();

  void RequestAttachment_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RequestAttachment_destroy(
      handle,
    );
  }

  late final _RequestAttachment_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RequestAttachment_destroy');
  late final _RequestAttachment_destroy = _RequestAttachment_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Request_created(
    imp1.RT_RequestHandle handle,
  ) {
    return _Request_created(
      handle,
    );
  }

  late final _Request_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_RequestHandle)>>(
          'Request_created');
  late final _Request_created =
      _Request_createdPtr.asFunction<void Function(imp1.RT_RequestHandle)>();

  void Request_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Request_destroy(
      handle,
    );
  }

  late final _Request_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Request_destroy');
  late final _Request_destroy =
      _Request_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Request_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Request_destroyInstance(
      handle,
    );
  }

  late final _Request_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Request_destroyInstance');
  late final _Request_destroyInstance = _Request_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ReroutingParameters_created(
    RT_ReroutingParametersHandle handle,
  ) {
    return _ReroutingParameters_created(
      handle,
    );
  }

  late final _ReroutingParameters_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_ReroutingParametersHandle)>>(
      'ReroutingParameters_created');
  late final _ReroutingParameters_created = _ReroutingParameters_createdPtr
      .asFunction<void Function(RT_ReroutingParametersHandle)>();

  void ReroutingParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ReroutingParameters_destroy(
      handle,
    );
  }

  late final _ReroutingParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ReroutingParameters_destroy');
  late final _ReroutingParameters_destroy = _ReroutingParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ResourceProvider_created(
    imp1.RT_ResourceProviderHandle handle,
  ) {
    return _ResourceProvider_created(
      handle,
    );
  }

  late final _ResourceProvider_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ResourceProviderHandle)>>(
      'ResourceProvider_created');
  late final _ResourceProvider_created = _ResourceProvider_createdPtr
      .asFunction<void Function(imp1.RT_ResourceProviderHandle)>();

  void ResourceProvider_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ResourceProvider_destroy(
      handle,
    );
  }

  late final _ResourceProvider_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ResourceProvider_destroy');
  late final _ResourceProvider_destroy = _ResourceProvider_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RestrictionAttribute_created(
    imp1.RT_RestrictionAttributeHandle handle,
  ) {
    return _RestrictionAttribute_created(
      handle,
    );
  }

  late final _RestrictionAttribute_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RestrictionAttributeHandle)>>(
      'RestrictionAttribute_created');
  late final _RestrictionAttribute_created = _RestrictionAttribute_createdPtr
      .asFunction<void Function(imp1.RT_RestrictionAttributeHandle)>();

  void RestrictionAttribute_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RestrictionAttribute_destroy(
      handle,
    );
  }

  late final _RestrictionAttribute_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RestrictionAttribute_destroy');
  late final _RestrictionAttribute_destroy = _RestrictionAttribute_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ReticleInteractionConfiguration_created(
    RT_ReticleInteractionConfigurationHandle handle,
  ) {
    return _ReticleInteractionConfiguration_created(
      handle,
    );
  }

  late final _ReticleInteractionConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_ReticleInteractionConfigurationHandle)>>(
      'ReticleInteractionConfiguration_created');
  late final _ReticleInteractionConfiguration_created =
      _ReticleInteractionConfiguration_createdPtr.asFunction<
          void Function(RT_ReticleInteractionConfigurationHandle)>();

  void ReticleInteractionConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ReticleInteractionConfiguration_destroy(
      handle,
    );
  }

  late final _ReticleInteractionConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ReticleInteractionConfiguration_destroy');
  late final _ReticleInteractionConfiguration_destroy =
      _ReticleInteractionConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ReverseGeocodeParameters_created(
    imp1.RT_ReverseGeocodeParametersHandle handle,
  ) {
    return _ReverseGeocodeParameters_created(
      handle,
    );
  }

  late final _ReverseGeocodeParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ReverseGeocodeParametersHandle)>>(
      'ReverseGeocodeParameters_created');
  late final _ReverseGeocodeParameters_created =
      _ReverseGeocodeParameters_createdPtr.asFunction<
          void Function(imp1.RT_ReverseGeocodeParametersHandle)>();

  void ReverseGeocodeParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ReverseGeocodeParameters_destroy(
      handle,
    );
  }

  late final _ReverseGeocodeParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ReverseGeocodeParameters_destroy');
  late final _ReverseGeocodeParameters_destroy =
      _ReverseGeocodeParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void RouteParameters_created(
    imp1.RT_RouteParametersHandle handle,
  ) {
    return _RouteParameters_created(
      handle,
    );
  }

  late final _RouteParameters_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteParametersHandle)>>(
      'RouteParameters_created');
  late final _RouteParameters_created = _RouteParameters_createdPtr.asFunction<
      void Function(imp1.RT_RouteParametersHandle)>();

  void RouteParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RouteParameters_destroy(
      handle,
    );
  }

  late final _RouteParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RouteParameters_destroy');
  late final _RouteParameters_destroy = _RouteParameters_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void RouteResult_created(
    imp1.RT_RouteResultHandle handle,
  ) {
    return _RouteResult_created(
      handle,
    );
  }

  late final _RouteResult_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteResultHandle)>>(
          'RouteResult_created');
  late final _RouteResult_created = _RouteResult_createdPtr.asFunction<
      void Function(imp1.RT_RouteResultHandle)>();

  void RouteResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RouteResult_destroy(
      handle,
    );
  }

  late final _RouteResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RouteResult_destroy');
  late final _RouteResult_destroy = _RouteResult_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void RouteTaskInfo_created(
    imp1.RT_RouteTaskInfoHandle handle,
  ) {
    return _RouteTaskInfo_created(
      handle,
    );
  }

  late final _RouteTaskInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteTaskInfoHandle)>>(
      'RouteTaskInfo_created');
  late final _RouteTaskInfo_created = _RouteTaskInfo_createdPtr.asFunction<
      void Function(imp1.RT_RouteTaskInfoHandle)>();

  void RouteTaskInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RouteTaskInfo_destroy(
      handle,
    );
  }

  late final _RouteTaskInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RouteTaskInfo_destroy');
  late final _RouteTaskInfo_destroy = _RouteTaskInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void RouteTask_created(
    imp1.RT_RouteTaskHandle handle,
  ) {
    return _RouteTask_created(
      handle,
    );
  }

  late final _RouteTask_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteTaskHandle)>>(
          'RouteTask_created');
  late final _RouteTask_created = _RouteTask_createdPtr.asFunction<
      void Function(imp1.RT_RouteTaskHandle)>();

  void RouteTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RouteTask_destroy(
      handle,
    );
  }

  late final _RouteTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RouteTask_destroy');
  late final _RouteTask_destroy =
      _RouteTask_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RouteTrackerLogger_created(
    RT_RouteTrackerLoggerHandle handle,
  ) {
    return _RouteTrackerLogger_created(
      handle,
    );
  }

  late final _RouteTrackerLogger_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_RouteTrackerLoggerHandle)>>(
      'RouteTrackerLogger_created');
  late final _RouteTrackerLogger_created = _RouteTrackerLogger_createdPtr
      .asFunction<void Function(RT_RouteTrackerLoggerHandle)>();

  void RouteTrackerLogger_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RouteTrackerLogger_destroy(
      handle,
    );
  }

  late final _RouteTrackerLogger_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RouteTrackerLogger_destroy');
  late final _RouteTrackerLogger_destroy = _RouteTrackerLogger_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void RouteTracker_created(
    imp1.RT_RouteTrackerHandle handle,
  ) {
    return _RouteTracker_created(
      handle,
    );
  }

  late final _RouteTracker_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteTrackerHandle)>>(
      'RouteTracker_created');
  late final _RouteTracker_created = _RouteTracker_createdPtr.asFunction<
      void Function(imp1.RT_RouteTrackerHandle)>();

  void RouteTracker_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _RouteTracker_destroy(
      handle,
    );
  }

  late final _RouteTracker_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'RouteTracker_destroy');
  late final _RouteTracker_destroy = _RouteTracker_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Route_created(
    imp1.RT_RouteHandle handle,
  ) {
    return _Route_created(
      handle,
    );
  }

  late final _Route_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteHandle)>>(
          'Route_created');
  late final _Route_created =
      _Route_createdPtr.asFunction<void Function(imp1.RT_RouteHandle)>();

  void Route_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Route_destroy(
      handle,
    );
  }

  late final _Route_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Route_destroy');
  late final _Route_destroy =
      _Route_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void S57FeatureMetadata_created(
    imp1.RT_S57FeatureMetadataHandle handle,
  ) {
    return _S57FeatureMetadata_created(
      handle,
    );
  }

  late final _S57FeatureMetadata_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_S57FeatureMetadataHandle)>>(
      'S57FeatureMetadata_created');
  late final _S57FeatureMetadata_created = _S57FeatureMetadata_createdPtr
      .asFunction<void Function(imp1.RT_S57FeatureMetadataHandle)>();

  void S57FeatureMetadata_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _S57FeatureMetadata_destroy(
      handle,
    );
  }

  late final _S57FeatureMetadata_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'S57FeatureMetadata_destroy');
  late final _S57FeatureMetadata_destroy = _S57FeatureMetadata_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SceneEnvironment_created(
    imp1.RT_SceneEnvironmentHandle handle,
  ) {
    return _SceneEnvironment_created(
      handle,
    );
  }

  late final _SceneEnvironment_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SceneEnvironmentHandle)>>(
      'SceneEnvironment_created');
  late final _SceneEnvironment_created = _SceneEnvironment_createdPtr
      .asFunction<void Function(imp1.RT_SceneEnvironmentHandle)>();

  void SceneEnvironment_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SceneEnvironment_destroy(
      handle,
    );
  }

  late final _SceneEnvironment_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SceneEnvironment_destroy');
  late final _SceneEnvironment_destroy = _SceneEnvironment_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SceneLayerPolygonFilter_created(
    imp1.RT_SceneLayerPolygonFilterHandle handle,
  ) {
    return _SceneLayerPolygonFilter_created(
      handle,
    );
  }

  late final _SceneLayerPolygonFilter_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SceneLayerPolygonFilterHandle)>>(
      'SceneLayerPolygonFilter_created');
  late final _SceneLayerPolygonFilter_created =
      _SceneLayerPolygonFilter_createdPtr.asFunction<
          void Function(imp1.RT_SceneLayerPolygonFilterHandle)>();

  void SceneLayerPolygonFilter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SceneLayerPolygonFilter_destroy(
      handle,
    );
  }

  late final _SceneLayerPolygonFilter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SceneLayerPolygonFilter_destroy');
  late final _SceneLayerPolygonFilter_destroy =
      _SceneLayerPolygonFilter_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void SecurityProvider_created(
    imp1.RT_SecurityProviderHandle handle,
  ) {
    return _SecurityProvider_created(
      handle,
    );
  }

  late final _SecurityProvider_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SecurityProviderHandle)>>(
      'SecurityProvider_created');
  late final _SecurityProvider_created = _SecurityProvider_createdPtr
      .asFunction<void Function(imp1.RT_SecurityProviderHandle)>();

  void SecurityProvider_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SecurityProvider_destroy(
      handle,
    );
  }

  late final _SecurityProvider_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SecurityProvider_destroy');
  late final _SecurityProvider_destroy = _SecurityProvider_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Segment_created(
    imp1.RT_SegmentHandle handle,
  ) {
    return _Segment_created(
      handle,
    );
  }

  late final _Segment_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_SegmentHandle)>>(
          'Segment_created');
  late final _Segment_created =
      _Segment_createdPtr.asFunction<void Function(imp1.RT_SegmentHandle)>();

  void Segment_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Segment_destroy(
      handle,
    );
  }

  late final _Segment_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Segment_destroy');
  late final _Segment_destroy =
      _Segment_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SelectionProperties_created(
    imp1.RT_SelectionPropertiesHandle handle,
  ) {
    return _SelectionProperties_created(
      handle,
    );
  }

  late final _SelectionProperties_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SelectionPropertiesHandle)>>(
      'SelectionProperties_created');
  late final _SelectionProperties_created = _SelectionProperties_createdPtr
      .asFunction<void Function(imp1.RT_SelectionPropertiesHandle)>();

  void SelectionProperties_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SelectionProperties_destroy(
      handle,
    );
  }

  late final _SelectionProperties_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SelectionProperties_destroy');
  late final _SelectionProperties_destroy = _SelectionProperties_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceAreaFacility_created(
    imp1.RT_ServiceAreaFacilityHandle handle,
  ) {
    return _ServiceAreaFacility_created(
      handle,
    );
  }

  late final _ServiceAreaFacility_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ServiceAreaFacilityHandle)>>(
      'ServiceAreaFacility_created');
  late final _ServiceAreaFacility_created = _ServiceAreaFacility_createdPtr
      .asFunction<void Function(imp1.RT_ServiceAreaFacilityHandle)>();

  void ServiceAreaFacility_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceAreaFacility_destroy(
      handle,
    );
  }

  late final _ServiceAreaFacility_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceAreaFacility_destroy');
  late final _ServiceAreaFacility_destroy = _ServiceAreaFacility_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceAreaParameters_created(
    imp1.RT_ServiceAreaParametersHandle handle,
  ) {
    return _ServiceAreaParameters_created(
      handle,
    );
  }

  late final _ServiceAreaParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ServiceAreaParametersHandle)>>(
      'ServiceAreaParameters_created');
  late final _ServiceAreaParameters_created = _ServiceAreaParameters_createdPtr
      .asFunction<void Function(imp1.RT_ServiceAreaParametersHandle)>();

  void ServiceAreaParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceAreaParameters_destroy(
      handle,
    );
  }

  late final _ServiceAreaParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceAreaParameters_destroy');
  late final _ServiceAreaParameters_destroy = _ServiceAreaParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceAreaPolygon_created(
    imp1.RT_ServiceAreaPolygonHandle handle,
  ) {
    return _ServiceAreaPolygon_created(
      handle,
    );
  }

  late final _ServiceAreaPolygon_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaPolygonHandle)>>(
      'ServiceAreaPolygon_created');
  late final _ServiceAreaPolygon_created = _ServiceAreaPolygon_createdPtr
      .asFunction<void Function(imp1.RT_ServiceAreaPolygonHandle)>();

  void ServiceAreaPolygon_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceAreaPolygon_destroy(
      handle,
    );
  }

  late final _ServiceAreaPolygon_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceAreaPolygon_destroy');
  late final _ServiceAreaPolygon_destroy = _ServiceAreaPolygon_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceAreaPolyline_created(
    imp1.RT_ServiceAreaPolylineHandle handle,
  ) {
    return _ServiceAreaPolyline_created(
      handle,
    );
  }

  late final _ServiceAreaPolyline_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ServiceAreaPolylineHandle)>>(
      'ServiceAreaPolyline_created');
  late final _ServiceAreaPolyline_created = _ServiceAreaPolyline_createdPtr
      .asFunction<void Function(imp1.RT_ServiceAreaPolylineHandle)>();

  void ServiceAreaPolyline_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceAreaPolyline_destroy(
      handle,
    );
  }

  late final _ServiceAreaPolyline_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceAreaPolyline_destroy');
  late final _ServiceAreaPolyline_destroy = _ServiceAreaPolyline_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceAreaResult_created(
    imp1.RT_ServiceAreaResultHandle handle,
  ) {
    return _ServiceAreaResult_created(
      handle,
    );
  }

  late final _ServiceAreaResult_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaResultHandle)>>(
      'ServiceAreaResult_created');
  late final _ServiceAreaResult_created = _ServiceAreaResult_createdPtr
      .asFunction<void Function(imp1.RT_ServiceAreaResultHandle)>();

  void ServiceAreaResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceAreaResult_destroy(
      handle,
    );
  }

  late final _ServiceAreaResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceAreaResult_destroy');
  late final _ServiceAreaResult_destroy = _ServiceAreaResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceAreaTaskInfo_created(
    imp1.RT_ServiceAreaTaskInfoHandle handle,
  ) {
    return _ServiceAreaTaskInfo_created(
      handle,
    );
  }

  late final _ServiceAreaTaskInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ServiceAreaTaskInfoHandle)>>(
      'ServiceAreaTaskInfo_created');
  late final _ServiceAreaTaskInfo_created = _ServiceAreaTaskInfo_createdPtr
      .asFunction<void Function(imp1.RT_ServiceAreaTaskInfoHandle)>();

  void ServiceAreaTaskInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceAreaTaskInfo_destroy(
      handle,
    );
  }

  late final _ServiceAreaTaskInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceAreaTaskInfo_destroy');
  late final _ServiceAreaTaskInfo_destroy = _ServiceAreaTaskInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceAreaTask_created(
    imp1.RT_ServiceAreaTaskHandle handle,
  ) {
    return _ServiceAreaTask_created(
      handle,
    );
  }

  late final _ServiceAreaTask_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaTaskHandle)>>(
      'ServiceAreaTask_created');
  late final _ServiceAreaTask_created = _ServiceAreaTask_createdPtr.asFunction<
      void Function(imp1.RT_ServiceAreaTaskHandle)>();

  void ServiceAreaTask_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceAreaTask_destroy(
      handle,
    );
  }

  late final _ServiceAreaTask_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceAreaTask_destroy');
  late final _ServiceAreaTask_destroy = _ServiceAreaTask_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceDocumentInfo_created(
    imp1.RT_ServiceDocumentInfoHandle handle,
  ) {
    return _ServiceDocumentInfo_created(
      handle,
    );
  }

  late final _ServiceDocumentInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ServiceDocumentInfoHandle)>>(
      'ServiceDocumentInfo_created');
  late final _ServiceDocumentInfo_created = _ServiceDocumentInfo_createdPtr
      .asFunction<void Function(imp1.RT_ServiceDocumentInfoHandle)>();

  void ServiceDocumentInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceDocumentInfo_destroy(
      handle,
    );
  }

  late final _ServiceDocumentInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceDocumentInfo_destroy');
  late final _ServiceDocumentInfo_destroy = _ServiceDocumentInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceGeodatabase_created(
    imp1.RT_ServiceGeodatabaseHandle handle,
  ) {
    return _ServiceGeodatabase_created(
      handle,
    );
  }

  late final _ServiceGeodatabase_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceGeodatabaseHandle)>>(
      'ServiceGeodatabase_created');
  late final _ServiceGeodatabase_created = _ServiceGeodatabase_createdPtr
      .asFunction<void Function(imp1.RT_ServiceGeodatabaseHandle)>();

  void ServiceGeodatabase_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceGeodatabase_destroy(
      handle,
    );
  }

  late final _ServiceGeodatabase_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceGeodatabase_destroy');
  late final _ServiceGeodatabase_destroy = _ServiceGeodatabase_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceGeodatabase_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceGeodatabase_destroyInstance(
      handle,
    );
  }

  late final _ServiceGeodatabase_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceGeodatabase_destroyInstance');
  late final _ServiceGeodatabase_destroyInstance =
      _ServiceGeodatabase_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceTimeInfo_created(
    imp1.RT_ServiceTimeInfoHandle handle,
  ) {
    return _ServiceTimeInfo_created(
      handle,
    );
  }

  late final _ServiceTimeInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ServiceTimeInfoHandle)>>(
      'ServiceTimeInfo_created');
  late final _ServiceTimeInfo_created = _ServiceTimeInfo_createdPtr.asFunction<
      void Function(imp1.RT_ServiceTimeInfoHandle)>();

  void ServiceTimeInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceTimeInfo_destroy(
      handle,
    );
  }

  late final _ServiceTimeInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceTimeInfo_destroy');
  late final _ServiceTimeInfo_destroy = _ServiceTimeInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceVersionInfo_created(
    imp1.RT_ServiceVersionInfoHandle handle,
  ) {
    return _ServiceVersionInfo_created(
      handle,
    );
  }

  late final _ServiceVersionInfo_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceVersionInfoHandle)>>(
      'ServiceVersionInfo_created');
  late final _ServiceVersionInfo_created = _ServiceVersionInfo_createdPtr
      .asFunction<void Function(imp1.RT_ServiceVersionInfoHandle)>();

  void ServiceVersionInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceVersionInfo_destroy(
      handle,
    );
  }

  late final _ServiceVersionInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceVersionInfo_destroy');
  late final _ServiceVersionInfo_destroy = _ServiceVersionInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ServiceVersionParameters_created(
    RT_ServiceVersionParametersHandle handle,
  ) {
    return _ServiceVersionParameters_created(
      handle,
    );
  }

  late final _ServiceVersionParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_ServiceVersionParametersHandle)>>(
      'ServiceVersionParameters_created');
  late final _ServiceVersionParameters_created =
      _ServiceVersionParameters_createdPtr.asFunction<
          void Function(RT_ServiceVersionParametersHandle)>();

  void ServiceVersionParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ServiceVersionParameters_destroy(
      handle,
    );
  }

  late final _ServiceVersionParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ServiceVersionParameters_destroy');
  late final _ServiceVersionParameters_destroy =
      _ServiceVersionParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void ShapefileInfo_created(
    RT_ShapefileInfoHandle handle,
  ) {
    return _ShapefileInfo_created(
      handle,
    );
  }

  late final _ShapefileInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_ShapefileInfoHandle)>>(
          'ShapefileInfo_created');
  late final _ShapefileInfo_created = _ShapefileInfo_createdPtr.asFunction<
      void Function(RT_ShapefileInfoHandle)>();

  void ShapefileInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ShapefileInfo_destroy(
      handle,
    );
  }

  late final _ShapefileInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ShapefileInfo_destroy');
  late final _ShapefileInfo_destroy = _ShapefileInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void SimulationParameters_created(
    imp1.RT_SimulationParametersHandle handle,
  ) {
    return _SimulationParameters_created(
      handle,
    );
  }

  late final _SimulationParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SimulationParametersHandle)>>(
      'SimulationParameters_created');
  late final _SimulationParameters_created = _SimulationParameters_createdPtr
      .asFunction<void Function(imp1.RT_SimulationParametersHandle)>();

  void SimulationParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SimulationParameters_destroy(
      handle,
    );
  }

  late final _SimulationParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SimulationParameters_destroy');
  late final _SimulationParameters_destroy = _SimulationParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SiteLayerDefinition_created(
    RT_SiteLayerDefinitionHandle handle,
  ) {
    return _SiteLayerDefinition_created(
      handle,
    );
  }

  late final _SiteLayerDefinition_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_SiteLayerDefinitionHandle)>>(
      'SiteLayerDefinition_created');
  late final _SiteLayerDefinition_created = _SiteLayerDefinition_createdPtr
      .asFunction<void Function(RT_SiteLayerDefinitionHandle)>();

  void SiteLayerDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SiteLayerDefinition_destroy(
      handle,
    );
  }

  late final _SiteLayerDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SiteLayerDefinition_destroy');
  late final _SiteLayerDefinition_destroy = _SiteLayerDefinition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SnapSettings_created(
    RT_SnapSettingsHandle handle,
  ) {
    return _SnapSettings_created(
      handle,
    );
  }

  late final _SnapSettings_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_SnapSettingsHandle)>>(
          'SnapSettings_created');
  late final _SnapSettings_created = _SnapSettings_createdPtr.asFunction<
      void Function(RT_SnapSettingsHandle)>();

  void SnapSettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SnapSettings_destroy(
      handle,
    );
  }

  late final _SnapSettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SnapSettings_destroy');
  late final _SnapSettings_destroy = _SnapSettings_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void SnapSourceSettings_created(
    imp1.RT_SnapSourceSettingsHandle handle,
  ) {
    return _SnapSourceSettings_created(
      handle,
    );
  }

  late final _SnapSourceSettings_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SnapSourceSettingsHandle)>>(
      'SnapSourceSettings_created');
  late final _SnapSourceSettings_created = _SnapSourceSettings_createdPtr
      .asFunction<void Function(imp1.RT_SnapSourceSettingsHandle)>();

  void SnapSourceSettings_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SnapSourceSettings_destroy(
      handle,
    );
  }

  late final _SnapSourceSettings_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SnapSourceSettings_destroy');
  late final _SnapSourceSettings_destroy = _SnapSourceSettings_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SolidBuildingFilterDefinition_created(
    imp1.RT_SolidBuildingFilterDefinitionHandle handle,
  ) {
    return _SolidBuildingFilterDefinition_created(
      handle,
    );
  }

  late final _SolidBuildingFilterDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SolidBuildingFilterDefinitionHandle)>>(
      'SolidBuildingFilterDefinition_created');
  late final _SolidBuildingFilterDefinition_created =
      _SolidBuildingFilterDefinition_createdPtr.asFunction<
          void Function(imp1.RT_SolidBuildingFilterDefinitionHandle)>();

  void SolidBuildingFilterDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SolidBuildingFilterDefinition_destroy(
      handle,
    );
  }

  late final _SolidBuildingFilterDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SolidBuildingFilterDefinition_destroy');
  late final _SolidBuildingFilterDefinition_destroy =
      _SolidBuildingFilterDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void SourceObjectPosition_created(
    imp1.RT_SourceObjectPositionHandle handle,
  ) {
    return _SourceObjectPosition_created(
      handle,
    );
  }

  late final _SourceObjectPosition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SourceObjectPositionHandle)>>(
      'SourceObjectPosition_created');
  late final _SourceObjectPosition_created = _SourceObjectPosition_createdPtr
      .asFunction<void Function(imp1.RT_SourceObjectPositionHandle)>();

  void SourceObjectPosition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SourceObjectPosition_destroy(
      handle,
    );
  }

  late final _SourceObjectPosition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SourceObjectPosition_destroy');
  late final _SourceObjectPosition_destroy = _SourceObjectPosition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SpatialReference_created(
    imp1.RT_SpatialReferenceHandle handle,
  ) {
    return _SpatialReference_created(
      handle,
    );
  }

  late final _SpatialReference_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SpatialReferenceHandle)>>(
      'SpatialReference_created');
  late final _SpatialReference_created = _SpatialReference_createdPtr
      .asFunction<void Function(imp1.RT_SpatialReferenceHandle)>();

  void SpatialReference_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SpatialReference_destroy(
      handle,
    );
  }

  late final _SpatialReference_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SpatialReference_destroy');
  late final _SpatialReference_destroy = _SpatialReference_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void StatisticDefinition_created(
    imp1.RT_StatisticDefinitionHandle handle,
  ) {
    return _StatisticDefinition_created(
      handle,
    );
  }

  late final _StatisticDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_StatisticDefinitionHandle)>>(
      'StatisticDefinition_created');
  late final _StatisticDefinition_created = _StatisticDefinition_createdPtr
      .asFunction<void Function(imp1.RT_StatisticDefinitionHandle)>();

  void StatisticDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _StatisticDefinition_destroy(
      handle,
    );
  }

  late final _StatisticDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'StatisticDefinition_destroy');
  late final _StatisticDefinition_destroy = _StatisticDefinition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void StatisticRecord_created(
    imp1.RT_StatisticRecordHandle handle,
  ) {
    return _StatisticRecord_created(
      handle,
    );
  }

  late final _StatisticRecord_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_StatisticRecordHandle)>>(
      'StatisticRecord_created');
  late final _StatisticRecord_created = _StatisticRecord_createdPtr.asFunction<
      void Function(imp1.RT_StatisticRecordHandle)>();

  void StatisticRecord_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _StatisticRecord_destroy(
      handle,
    );
  }

  late final _StatisticRecord_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'StatisticRecord_destroy');
  late final _StatisticRecord_destroy = _StatisticRecord_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void StatisticsQueryParameters_created(
    imp1.RT_StatisticsQueryParametersHandle handle,
  ) {
    return _StatisticsQueryParameters_created(
      handle,
    );
  }

  late final _StatisticsQueryParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_StatisticsQueryParametersHandle)>>(
      'StatisticsQueryParameters_created');
  late final _StatisticsQueryParameters_created =
      _StatisticsQueryParameters_createdPtr.asFunction<
          void Function(imp1.RT_StatisticsQueryParametersHandle)>();

  void StatisticsQueryParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _StatisticsQueryParameters_destroy(
      handle,
    );
  }

  late final _StatisticsQueryParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'StatisticsQueryParameters_destroy');
  late final _StatisticsQueryParameters_destroy =
      _StatisticsQueryParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void StatisticsQueryResult_created(
    imp1.RT_StatisticsQueryResultHandle handle,
  ) {
    return _StatisticsQueryResult_created(
      handle,
    );
  }

  late final _StatisticsQueryResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_StatisticsQueryResultHandle)>>(
      'StatisticsQueryResult_created');
  late final _StatisticsQueryResult_created = _StatisticsQueryResult_createdPtr
      .asFunction<void Function(imp1.RT_StatisticsQueryResultHandle)>();

  void StatisticsQueryResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _StatisticsQueryResult_destroy(
      handle,
    );
  }

  late final _StatisticsQueryResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'StatisticsQueryResult_destroy');
  late final _StatisticsQueryResult_destroy = _StatisticsQueryResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Stop_created(
    imp1.RT_StopHandle handle,
  ) {
    return _Stop_created(
      handle,
    );
  }

  late final _Stop_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_StopHandle)>>(
          'Stop_created');
  late final _Stop_created =
      _Stop_createdPtr.asFunction<void Function(imp1.RT_StopHandle)>();

  void Stop_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Stop_destroy(
      handle,
    );
  }

  late final _Stop_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Stop_destroy');
  late final _Stop_destroy =
      _Stop_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void StretchParameters_created(
    RT_StretchParametersHandle handle,
  ) {
    return _StretchParameters_created(
      handle,
    );
  }

  late final _StretchParameters_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_StretchParametersHandle)>>(
      'StretchParameters_created');
  late final _StretchParameters_created = _StretchParameters_createdPtr
      .asFunction<void Function(RT_StretchParametersHandle)>();

  void StretchParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _StretchParameters_destroy(
      handle,
    );
  }

  late final _StretchParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'StretchParameters_destroy');
  late final _StretchParameters_destroy = _StretchParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void StringImmutableCollection_created(
    RT_StringImmutableCollectionHandle handle,
  ) {
    return _StringImmutableCollection_created(
      handle,
    );
  }

  late final _StringImmutableCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_StringImmutableCollectionHandle)>>(
      'StringImmutableCollection_created');
  late final _StringImmutableCollection_created =
      _StringImmutableCollection_createdPtr.asFunction<
          void Function(RT_StringImmutableCollectionHandle)>();

  void StringImmutableCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _StringImmutableCollection_destroy(
      handle,
    );
  }

  late final _StringImmutableCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'StringImmutableCollection_destroy');
  late final _StringImmutableCollection_destroy =
      _StringImmutableCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void String_created(
    imp1.RT_StringHandle handle,
  ) {
    return _String_created(
      handle,
    );
  }

  late final _String_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_StringHandle)>>(
          'String_created');
  late final _String_created =
      _String_createdPtr.asFunction<void Function(imp1.RT_StringHandle)>();

  void String_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _String_destroy(
      handle,
    );
  }

  late final _String_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'String_destroy');
  late final _String_destroy =
      _String_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SublayerSource_created(
    imp1.RT_SublayerSourceHandle handle,
  ) {
    return _SublayerSource_created(
      handle,
    );
  }

  late final _SublayerSource_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SublayerSourceHandle)>>(
      'SublayerSource_created');
  late final _SublayerSource_created = _SublayerSource_createdPtr.asFunction<
      void Function(imp1.RT_SublayerSourceHandle)>();

  void SublayerSource_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SublayerSource_destroy(
      handle,
    );
  }

  late final _SublayerSource_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SublayerSource_destroy');
  late final _SublayerSource_destroy = _SublayerSource_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void SuggestParameters_created(
    imp1.RT_SuggestParametersHandle handle,
  ) {
    return _SuggestParameters_created(
      handle,
    );
  }

  late final _SuggestParameters_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SuggestParametersHandle)>>(
      'SuggestParameters_created');
  late final _SuggestParameters_created = _SuggestParameters_createdPtr
      .asFunction<void Function(imp1.RT_SuggestParametersHandle)>();

  void SuggestParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SuggestParameters_destroy(
      handle,
    );
  }

  late final _SuggestParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SuggestParameters_destroy');
  late final _SuggestParameters_destroy = _SuggestParameters_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SuggestResult_created(
    imp1.RT_SuggestResultHandle handle,
  ) {
    return _SuggestResult_created(
      handle,
    );
  }

  late final _SuggestResult_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SuggestResultHandle)>>(
      'SuggestResult_created');
  late final _SuggestResult_created = _SuggestResult_createdPtr.asFunction<
      void Function(imp1.RT_SuggestResultHandle)>();

  void SuggestResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SuggestResult_destroy(
      handle,
    );
  }

  late final _SuggestResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SuggestResult_destroy');
  late final _SuggestResult_destroy = _SuggestResult_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Surface_created(
    RT_SurfaceHandle handle,
  ) {
    return _Surface_created(
      handle,
    );
  }

  late final _Surface_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_SurfaceHandle)>>(
          'Surface_created');
  late final _Surface_created =
      _Surface_createdPtr.asFunction<void Function(RT_SurfaceHandle)>();

  void Surface_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Surface_destroy(
      handle,
    );
  }

  late final _Surface_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Surface_destroy');
  late final _Surface_destroy =
      _Surface_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SymbolAnchor_created(
    imp1.RT_SymbolAnchorHandle handle,
  ) {
    return _SymbolAnchor_created(
      handle,
    );
  }

  late final _SymbolAnchor_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolAnchorHandle)>>(
      'SymbolAnchor_created');
  late final _SymbolAnchor_created = _SymbolAnchor_createdPtr.asFunction<
      void Function(imp1.RT_SymbolAnchorHandle)>();

  void SymbolAnchor_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SymbolAnchor_destroy(
      handle,
    );
  }

  late final _SymbolAnchor_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SymbolAnchor_destroy');
  late final _SymbolAnchor_destroy = _SymbolAnchor_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void SymbolLayerEdges3D_created(
    imp1.RT_SymbolLayerEdges3DHandle handle,
  ) {
    return _SymbolLayerEdges3D_created(
      handle,
    );
  }

  late final _SymbolLayerEdges3D_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SymbolLayerEdges3DHandle)>>(
      'SymbolLayerEdges3D_created');
  late final _SymbolLayerEdges3D_created = _SymbolLayerEdges3D_createdPtr
      .asFunction<void Function(imp1.RT_SymbolLayerEdges3DHandle)>();

  void SymbolLayerEdges3D_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SymbolLayerEdges3D_destroy(
      handle,
    );
  }

  late final _SymbolLayerEdges3D_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SymbolLayerEdges3D_destroy');
  late final _SymbolLayerEdges3D_destroy = _SymbolLayerEdges3D_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SymbolLayer_created(
    imp1.RT_SymbolLayerHandle handle,
  ) {
    return _SymbolLayer_created(
      handle,
    );
  }

  late final _SymbolLayer_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolLayerHandle)>>(
          'SymbolLayer_created');
  late final _SymbolLayer_created = _SymbolLayer_createdPtr.asFunction<
      void Function(imp1.RT_SymbolLayerHandle)>();

  void SymbolLayer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SymbolLayer_destroy(
      handle,
    );
  }

  late final _SymbolLayer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SymbolLayer_destroy');
  late final _SymbolLayer_destroy = _SymbolLayer_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void SymbolReferenceProperties_created(
    imp1.RT_SymbolReferencePropertiesHandle handle,
  ) {
    return _SymbolReferenceProperties_created(
      handle,
    );
  }

  late final _SymbolReferenceProperties_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SymbolReferencePropertiesHandle)>>(
      'SymbolReferenceProperties_created');
  late final _SymbolReferenceProperties_created =
      _SymbolReferenceProperties_createdPtr.asFunction<
          void Function(imp1.RT_SymbolReferencePropertiesHandle)>();

  void SymbolReferenceProperties_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SymbolReferenceProperties_destroy(
      handle,
    );
  }

  late final _SymbolReferenceProperties_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SymbolReferenceProperties_destroy');
  late final _SymbolReferenceProperties_destroy =
      _SymbolReferenceProperties_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void SymbolStyleSearchParameters_created(
    imp1.RT_SymbolStyleSearchParametersHandle handle,
  ) {
    return _SymbolStyleSearchParameters_created(
      handle,
    );
  }

  late final _SymbolStyleSearchParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SymbolStyleSearchParametersHandle)>>(
      'SymbolStyleSearchParameters_created');
  late final _SymbolStyleSearchParameters_created =
      _SymbolStyleSearchParameters_createdPtr.asFunction<
          void Function(imp1.RT_SymbolStyleSearchParametersHandle)>();

  void SymbolStyleSearchParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SymbolStyleSearchParameters_destroy(
      handle,
    );
  }

  late final _SymbolStyleSearchParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SymbolStyleSearchParameters_destroy');
  late final _SymbolStyleSearchParameters_destroy =
      _SymbolStyleSearchParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void SymbolStyleSearchResult_created(
    imp1.RT_SymbolStyleSearchResultHandle handle,
  ) {
    return _SymbolStyleSearchResult_created(
      handle,
    );
  }

  late final _SymbolStyleSearchResult_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SymbolStyleSearchResultHandle)>>(
      'SymbolStyleSearchResult_created');
  late final _SymbolStyleSearchResult_created =
      _SymbolStyleSearchResult_createdPtr.asFunction<
          void Function(imp1.RT_SymbolStyleSearchResultHandle)>();

  void SymbolStyleSearchResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SymbolStyleSearchResult_destroy(
      handle,
    );
  }

  late final _SymbolStyleSearchResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SymbolStyleSearchResult_destroy');
  late final _SymbolStyleSearchResult_destroy =
      _SymbolStyleSearchResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void SymbolStyle_created(
    imp1.RT_SymbolStyleHandle handle,
  ) {
    return _SymbolStyle_created(
      handle,
    );
  }

  late final _SymbolStyle_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolStyleHandle)>>(
          'SymbolStyle_created');
  late final _SymbolStyle_created = _SymbolStyle_createdPtr.asFunction<
      void Function(imp1.RT_SymbolStyleHandle)>();

  void SymbolStyle_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SymbolStyle_destroy(
      handle,
    );
  }

  late final _SymbolStyle_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SymbolStyle_destroy');
  late final _SymbolStyle_destroy = _SymbolStyle_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Symbol_created(
    imp1.RT_SymbolHandle handle,
  ) {
    return _Symbol_created(
      handle,
    );
  }

  late final _Symbol_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolHandle)>>(
          'Symbol_created');
  late final _Symbol_created =
      _Symbol_createdPtr.asFunction<void Function(imp1.RT_SymbolHandle)>();

  void Symbol_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Symbol_destroy(
      handle,
    );
  }

  late final _Symbol_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Symbol_destroy');
  late final _Symbol_destroy =
      _Symbol_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Symbol_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Symbol_destroyInstance(
      handle,
    );
  }

  late final _Symbol_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Symbol_destroyInstance');
  late final _Symbol_destroyInstance = _Symbol_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void SyncCapabilities_created(
    imp1.RT_SyncCapabilitiesHandle handle,
  ) {
    return _SyncCapabilities_created(
      handle,
    );
  }

  late final _SyncCapabilities_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SyncCapabilitiesHandle)>>(
      'SyncCapabilities_created');
  late final _SyncCapabilities_created = _SyncCapabilities_createdPtr
      .asFunction<void Function(imp1.RT_SyncCapabilitiesHandle)>();

  void SyncCapabilities_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SyncCapabilities_destroy(
      handle,
    );
  }

  late final _SyncCapabilities_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SyncCapabilities_destroy');
  late final _SyncCapabilities_destroy = _SyncCapabilities_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void SyncGeodatabaseParameters_created(
    imp1.RT_SyncGeodatabaseParametersHandle handle,
  ) {
    return _SyncGeodatabaseParameters_created(
      handle,
    );
  }

  late final _SyncGeodatabaseParameters_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SyncGeodatabaseParametersHandle)>>(
      'SyncGeodatabaseParameters_created');
  late final _SyncGeodatabaseParameters_created =
      _SyncGeodatabaseParameters_createdPtr.asFunction<
          void Function(imp1.RT_SyncGeodatabaseParametersHandle)>();

  void SyncGeodatabaseParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SyncGeodatabaseParameters_destroy(
      handle,
    );
  }

  late final _SyncGeodatabaseParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SyncGeodatabaseParameters_destroy');
  late final _SyncGeodatabaseParameters_destroy =
      _SyncGeodatabaseParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void SyncLayerOption_created(
    imp1.RT_SyncLayerOptionHandle handle,
  ) {
    return _SyncLayerOption_created(
      handle,
    );
  }

  late final _SyncLayerOption_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SyncLayerOptionHandle)>>(
      'SyncLayerOption_created');
  late final _SyncLayerOption_created = _SyncLayerOption_createdPtr.asFunction<
      void Function(imp1.RT_SyncLayerOptionHandle)>();

  void SyncLayerOption_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SyncLayerOption_destroy(
      handle,
    );
  }

  late final _SyncLayerOption_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SyncLayerOption_destroy');
  late final _SyncLayerOption_destroy = _SyncLayerOption_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void SyncLayerResult_created(
    imp1.RT_SyncLayerResultHandle handle,
  ) {
    return _SyncLayerResult_created(
      handle,
    );
  }

  late final _SyncLayerResult_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SyncLayerResultHandle)>>(
      'SyncLayerResult_created');
  late final _SyncLayerResult_created = _SyncLayerResult_createdPtr.asFunction<
      void Function(imp1.RT_SyncLayerResultHandle)>();

  void SyncLayerResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _SyncLayerResult_destroy(
      handle,
    );
  }

  late final _SyncLayerResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'SyncLayerResult_destroy');
  late final _SyncLayerResult_destroy = _SyncLayerResult_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void TableDescription_created(
    imp1.RT_TableDescriptionHandle handle,
  ) {
    return _TableDescription_created(
      handle,
    );
  }

  late final _TableDescription_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_TableDescriptionHandle)>>(
      'TableDescription_created');
  late final _TableDescription_created = _TableDescription_createdPtr
      .asFunction<void Function(imp1.RT_TableDescriptionHandle)>();

  void TableDescription_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TableDescription_destroy(
      handle,
    );
  }

  late final _TableDescription_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TableDescription_destroy');
  late final _TableDescription_destroy = _TableDescription_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Task_created(
    imp1.RT_TaskHandle handle,
  ) {
    return _Task_created(
      handle,
    );
  }

  late final _Task_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TaskHandle)>>(
          'Task_created');
  late final _Task_created =
      _Task_createdPtr.asFunction<void Function(imp1.RT_TaskHandle)>();

  void Task_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Task_destroy(
      handle,
    );
  }

  late final _Task_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Task_destroy');
  late final _Task_destroy =
      _Task_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Task_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Task_destroyInstance(
      handle,
    );
  }

  late final _Task_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Task_destroyInstance');
  late final _Task_destroyInstance = _Task_destroyInstancePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void TileCache_created(
    imp1.RT_TileCacheHandle handle,
  ) {
    return _TileCache_created(
      handle,
    );
  }

  late final _TileCache_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TileCacheHandle)>>(
          'TileCache_created');
  late final _TileCache_created = _TileCache_createdPtr.asFunction<
      void Function(imp1.RT_TileCacheHandle)>();

  void TileCache_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TileCache_destroy(
      handle,
    );
  }

  late final _TileCache_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TileCache_destroy');
  late final _TileCache_destroy =
      _TileCache_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TileCache_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TileCache_destroyInstance(
      handle,
    );
  }

  late final _TileCache_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TileCache_destroyInstance');
  late final _TileCache_destroyInstance = _TileCache_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TileInfo_created(
    imp1.RT_TileInfoHandle handle,
  ) {
    return _TileInfo_created(
      handle,
    );
  }

  late final _TileInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TileInfoHandle)>>(
          'TileInfo_created');
  late final _TileInfo_created =
      _TileInfo_createdPtr.asFunction<void Function(imp1.RT_TileInfoHandle)>();

  void TileInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TileInfo_destroy(
      handle,
    );
  }

  late final _TileInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TileInfo_destroy');
  late final _TileInfo_destroy =
      _TileInfo_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TileKey_created(
    imp1.RT_TileKeyHandle handle,
  ) {
    return _TileKey_created(
      handle,
    );
  }

  late final _TileKey_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TileKeyHandle)>>(
          'TileKey_created');
  late final _TileKey_created =
      _TileKey_createdPtr.asFunction<void Function(imp1.RT_TileKeyHandle)>();

  void TileKey_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TileKey_destroy(
      handle,
    );
  }

  late final _TileKey_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TileKey_destroy');
  late final _TileKey_destroy =
      _TileKey_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TimeExtent_created(
    imp1.RT_TimeExtentHandle handle,
  ) {
    return _TimeExtent_created(
      handle,
    );
  }

  late final _TimeExtent_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeExtentHandle)>>(
          'TimeExtent_created');
  late final _TimeExtent_created = _TimeExtent_createdPtr.asFunction<
      void Function(imp1.RT_TimeExtentHandle)>();

  void TimeExtent_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TimeExtent_destroy(
      handle,
    );
  }

  late final _TimeExtent_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TimeExtent_destroy');
  late final _TimeExtent_destroy =
      _TimeExtent_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TimeOnly_created(
    imp1.RT_TimeOnlyHandle handle,
  ) {
    return _TimeOnly_created(
      handle,
    );
  }

  late final _TimeOnly_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeOnlyHandle)>>(
          'TimeOnly_created');
  late final _TimeOnly_created =
      _TimeOnly_createdPtr.asFunction<void Function(imp1.RT_TimeOnlyHandle)>();

  void TimeOnly_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TimeOnly_destroy(
      handle,
    );
  }

  late final _TimeOnly_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TimeOnly_destroy');
  late final _TimeOnly_destroy =
      _TimeOnly_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TimeOptions_created(
    RT_TimeOptionsHandle handle,
  ) {
    return _TimeOptions_created(
      handle,
    );
  }

  late final _TimeOptions_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_TimeOptionsHandle)>>(
          'TimeOptions_created');
  late final _TimeOptions_created =
      _TimeOptions_createdPtr.asFunction<void Function(RT_TimeOptionsHandle)>();

  void TimeOptions_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TimeOptions_destroy(
      handle,
    );
  }

  late final _TimeOptions_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TimeOptions_destroy');
  late final _TimeOptions_destroy = _TimeOptions_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void TimeReference_created(
    imp1.RT_TimeReferenceHandle handle,
  ) {
    return _TimeReference_created(
      handle,
    );
  }

  late final _TimeReference_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeReferenceHandle)>>(
      'TimeReference_created');
  late final _TimeReference_created = _TimeReference_createdPtr.asFunction<
      void Function(imp1.RT_TimeReferenceHandle)>();

  void TimeReference_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TimeReference_destroy(
      handle,
    );
  }

  late final _TimeReference_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TimeReference_destroy');
  late final _TimeReference_destroy = _TimeReference_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void TimeValue_created(
    imp1.RT_TimeValueHandle handle,
  ) {
    return _TimeValue_created(
      handle,
    );
  }

  late final _TimeValue_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeValueHandle)>>(
          'TimeValue_created');
  late final _TimeValue_created = _TimeValue_createdPtr.asFunction<
      void Function(imp1.RT_TimeValueHandle)>();

  void TimeValue_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TimeValue_destroy(
      handle,
    );
  }

  late final _TimeValue_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TimeValue_destroy');
  late final _TimeValue_destroy =
      _TimeValue_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TimeZoneOffset_created(
    imp1.RT_TimeZoneOffsetHandle handle,
  ) {
    return _TimeZoneOffset_created(
      handle,
    );
  }

  late final _TimeZoneOffset_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeZoneOffsetHandle)>>(
      'TimeZoneOffset_created');
  late final _TimeZoneOffset_created = _TimeZoneOffset_createdPtr.asFunction<
      void Function(imp1.RT_TimeZoneOffsetHandle)>();

  void TimeZoneOffset_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TimeZoneOffset_destroy(
      handle,
    );
  }

  late final _TimeZoneOffset_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TimeZoneOffset_destroy');
  late final _TimeZoneOffset_destroy = _TimeZoneOffset_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void TimestampOffset_created(
    imp1.RT_TimestampOffsetHandle handle,
  ) {
    return _TimestampOffset_created(
      handle,
    );
  }

  late final _TimestampOffset_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TimestampOffsetHandle)>>(
      'TimestampOffset_created');
  late final _TimestampOffset_created = _TimestampOffset_createdPtr.asFunction<
      void Function(imp1.RT_TimestampOffsetHandle)>();

  void TimestampOffset_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TimestampOffset_destroy(
      handle,
    );
  }

  late final _TimestampOffset_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TimestampOffset_destroy');
  late final _TimestampOffset_destroy = _TimestampOffset_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void TokenInfo_created(
    imp1.RT_TokenInfoHandle handle,
  ) {
    return _TokenInfo_created(
      handle,
    );
  }

  late final _TokenInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TokenInfoHandle)>>(
          'TokenInfo_created');
  late final _TokenInfo_created = _TokenInfo_createdPtr.asFunction<
      void Function(imp1.RT_TokenInfoHandle)>();

  void TokenInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TokenInfo_destroy(
      handle,
    );
  }

  late final _TokenInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TokenInfo_destroy');
  late final _TokenInfo_destroy =
      _TokenInfo_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TrackDisplayProperties_created(
    imp1.RT_TrackDisplayPropertiesHandle handle,
  ) {
    return _TrackDisplayProperties_created(
      handle,
    );
  }

  late final _TrackDisplayProperties_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_TrackDisplayPropertiesHandle)>>(
      'TrackDisplayProperties_created');
  late final _TrackDisplayProperties_created =
      _TrackDisplayProperties_createdPtr.asFunction<
          void Function(imp1.RT_TrackDisplayPropertiesHandle)>();

  void TrackDisplayProperties_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TrackDisplayProperties_destroy(
      handle,
    );
  }

  late final _TrackDisplayProperties_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TrackDisplayProperties_destroy');
  late final _TrackDisplayProperties_destroy =
      _TrackDisplayProperties_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void TrackingDistance_created(
    RT_TrackingDistanceHandle handle,
  ) {
    return _TrackingDistance_created(
      handle,
    );
  }

  late final _TrackingDistance_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_TrackingDistanceHandle)>>(
          'TrackingDistance_created');
  late final _TrackingDistance_created = _TrackingDistance_createdPtr
      .asFunction<void Function(RT_TrackingDistanceHandle)>();

  void TrackingDistance_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TrackingDistance_destroy(
      handle,
    );
  }

  late final _TrackingDistance_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TrackingDistance_destroy');
  late final _TrackingDistance_destroy = _TrackingDistance_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TrackingProgress_created(
    RT_TrackingProgressHandle handle,
  ) {
    return _TrackingProgress_created(
      handle,
    );
  }

  late final _TrackingProgress_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_TrackingProgressHandle)>>(
          'TrackingProgress_created');
  late final _TrackingProgress_created = _TrackingProgress_createdPtr
      .asFunction<void Function(RT_TrackingProgressHandle)>();

  void TrackingProgress_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TrackingProgress_destroy(
      handle,
    );
  }

  late final _TrackingProgress_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TrackingProgress_destroy');
  late final _TrackingProgress_destroy = _TrackingProgress_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TrackingStatus_created(
    imp1.RT_TrackingStatusHandle handle,
  ) {
    return _TrackingStatus_created(
      handle,
    );
  }

  late final _TrackingStatus_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TrackingStatusHandle)>>(
      'TrackingStatus_created');
  late final _TrackingStatus_created = _TrackingStatus_createdPtr.asFunction<
      void Function(imp1.RT_TrackingStatusHandle)>();

  void TrackingStatus_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TrackingStatus_destroy(
      handle,
    );
  }

  late final _TrackingStatus_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TrackingStatus_destroy');
  late final _TrackingStatus_destroy = _TrackingStatus_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void TrackingStatus_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TrackingStatus_destroyInstance(
      handle,
    );
  }

  late final _TrackingStatus_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TrackingStatus_destroyInstance');
  late final _TrackingStatus_destroyInstance =
      _TrackingStatus_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void TransformationMatrix_created(
    imp1.RT_TransformationMatrixHandle handle,
  ) {
    return _TransformationMatrix_created(
      handle,
    );
  }

  late final _TransformationMatrix_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_TransformationMatrixHandle)>>(
      'TransformationMatrix_created');
  late final _TransformationMatrix_created = _TransformationMatrix_createdPtr
      .asFunction<void Function(imp1.RT_TransformationMatrixHandle)>();

  void TransformationMatrix_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TransformationMatrix_destroy(
      handle,
    );
  }

  late final _TransformationMatrix_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TransformationMatrix_destroy');
  late final _TransformationMatrix_destroy = _TransformationMatrix_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TransportationNetworkDataset_created(
    imp1.RT_TransportationNetworkDatasetHandle handle,
  ) {
    return _TransportationNetworkDataset_created(
      handle,
    );
  }

  late final _TransportationNetworkDataset_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_TransportationNetworkDatasetHandle)>>(
      'TransportationNetworkDataset_created');
  late final _TransportationNetworkDataset_created =
      _TransportationNetworkDataset_createdPtr.asFunction<
          void Function(imp1.RT_TransportationNetworkDatasetHandle)>();

  void TransportationNetworkDataset_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TransportationNetworkDataset_destroy(
      handle,
    );
  }

  late final _TransportationNetworkDataset_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TransportationNetworkDataset_destroy');
  late final _TransportationNetworkDataset_destroy =
      _TransportationNetworkDataset_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void TravelMode_created(
    imp1.RT_TravelModeHandle handle,
  ) {
    return _TravelMode_created(
      handle,
    );
  }

  late final _TravelMode_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_TravelModeHandle)>>(
          'TravelMode_created');
  late final _TravelMode_created = _TravelMode_createdPtr.asFunction<
      void Function(imp1.RT_TravelModeHandle)>();

  void TravelMode_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TravelMode_destroy(
      handle,
    );
  }

  late final _TravelMode_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TravelMode_destroy');
  late final _TravelMode_destroy =
      _TravelMode_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void TraversalResult_created(
    imp1.RT_TraversalResultHandle handle,
  ) {
    return _TraversalResult_created(
      handle,
    );
  }

  late final _TraversalResult_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TraversalResultHandle)>>(
      'TraversalResult_created');
  late final _TraversalResult_created = _TraversalResult_createdPtr.asFunction<
      void Function(imp1.RT_TraversalResultHandle)>();

  void TraversalResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _TraversalResult_destroy(
      handle,
    );
  }

  late final _TraversalResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'TraversalResult_destroy');
  late final _TraversalResult_destroy = _TraversalResult_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UniqueValue_created(
    imp1.RT_UniqueValueHandle handle,
  ) {
    return _UniqueValue_created(
      handle,
    );
  }

  late final _UniqueValue_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_UniqueValueHandle)>>(
          'UniqueValue_created');
  late final _UniqueValue_created = _UniqueValue_createdPtr.asFunction<
      void Function(imp1.RT_UniqueValueHandle)>();

  void UniqueValue_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UniqueValue_destroy(
      handle,
    );
  }

  late final _UniqueValue_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UniqueValue_destroy');
  late final _UniqueValue_destroy = _UniqueValue_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UniqueValue_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UniqueValue_destroyInstance(
      handle,
    );
  }

  late final _UniqueValue_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UniqueValue_destroyInstance');
  late final _UniqueValue_destroyInstance = _UniqueValue_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Unit_created(
    imp1.RT_UnitHandle handle,
  ) {
    return _Unit_created(
      handle,
    );
  }

  late final _Unit_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_UnitHandle)>>(
          'Unit_created');
  late final _Unit_created =
      _Unit_createdPtr.asFunction<void Function(imp1.RT_UnitHandle)>();

  void Unit_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Unit_destroy(
      handle,
    );
  }

  late final _Unit_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Unit_destroy');
  late final _Unit_destroy =
      _Unit_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityAssetGroup_created(
    imp1.RT_UtilityAssetGroupHandle handle,
  ) {
    return _UtilityAssetGroup_created(
      handle,
    );
  }

  late final _UtilityAssetGroup_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityAssetGroupHandle)>>(
      'UtilityAssetGroup_created');
  late final _UtilityAssetGroup_created = _UtilityAssetGroup_createdPtr
      .asFunction<void Function(imp1.RT_UtilityAssetGroupHandle)>();

  void UtilityAssetGroup_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityAssetGroup_destroy(
      handle,
    );
  }

  late final _UtilityAssetGroup_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityAssetGroup_destroy');
  late final _UtilityAssetGroup_destroy = _UtilityAssetGroup_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityAssetGroup_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityAssetGroup_destroyInstance(
      handle,
    );
  }

  late final _UtilityAssetGroup_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityAssetGroup_destroyInstance');
  late final _UtilityAssetGroup_destroyInstance =
      _UtilityAssetGroup_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityAssetType_created(
    imp1.RT_UtilityAssetTypeHandle handle,
  ) {
    return _UtilityAssetType_created(
      handle,
    );
  }

  late final _UtilityAssetType_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityAssetTypeHandle)>>(
      'UtilityAssetType_created');
  late final _UtilityAssetType_created = _UtilityAssetType_createdPtr
      .asFunction<void Function(imp1.RT_UtilityAssetTypeHandle)>();

  void UtilityAssetType_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityAssetType_destroy(
      handle,
    );
  }

  late final _UtilityAssetType_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityAssetType_destroy');
  late final _UtilityAssetType_destroy = _UtilityAssetType_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityAssetType_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityAssetType_destroyInstance(
      handle,
    );
  }

  late final _UtilityAssetType_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityAssetType_destroyInstance');
  late final _UtilityAssetType_destroyInstance =
      _UtilityAssetType_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityAssociation_created(
    imp1.RT_UtilityAssociationHandle handle,
  ) {
    return _UtilityAssociation_created(
      handle,
    );
  }

  late final _UtilityAssociation_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityAssociationHandle)>>(
      'UtilityAssociation_created');
  late final _UtilityAssociation_created = _UtilityAssociation_createdPtr
      .asFunction<void Function(imp1.RT_UtilityAssociationHandle)>();

  void UtilityAssociation_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityAssociation_destroy(
      handle,
    );
  }

  late final _UtilityAssociation_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityAssociation_destroy');
  late final _UtilityAssociation_destroy = _UtilityAssociation_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityCategory_created(
    imp1.RT_UtilityCategoryHandle handle,
  ) {
    return _UtilityCategory_created(
      handle,
    );
  }

  late final _UtilityCategory_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityCategoryHandle)>>(
      'UtilityCategory_created');
  late final _UtilityCategory_created = _UtilityCategory_createdPtr.asFunction<
      void Function(imp1.RT_UtilityCategoryHandle)>();

  void UtilityCategory_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityCategory_destroy(
      handle,
    );
  }

  late final _UtilityCategory_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityCategory_destroy');
  late final _UtilityCategory_destroy = _UtilityCategory_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityDomainNetwork_created(
    imp1.RT_UtilityDomainNetworkHandle handle,
  ) {
    return _UtilityDomainNetwork_created(
      handle,
    );
  }

  late final _UtilityDomainNetwork_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityDomainNetworkHandle)>>(
      'UtilityDomainNetwork_created');
  late final _UtilityDomainNetwork_created = _UtilityDomainNetwork_createdPtr
      .asFunction<void Function(imp1.RT_UtilityDomainNetworkHandle)>();

  void UtilityDomainNetwork_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityDomainNetwork_destroy(
      handle,
    );
  }

  late final _UtilityDomainNetwork_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityDomainNetwork_destroy');
  late final _UtilityDomainNetwork_destroy = _UtilityDomainNetwork_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityDomainNetwork_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityDomainNetwork_destroyInstance(
      handle,
    );
  }

  late final _UtilityDomainNetwork_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityDomainNetwork_destroyInstance');
  late final _UtilityDomainNetwork_destroyInstance =
      _UtilityDomainNetwork_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityElement_created(
    imp1.RT_UtilityElementHandle handle,
  ) {
    return _UtilityElement_created(
      handle,
    );
  }

  late final _UtilityElement_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityElementHandle)>>(
      'UtilityElement_created');
  late final _UtilityElement_created = _UtilityElement_createdPtr.asFunction<
      void Function(imp1.RT_UtilityElementHandle)>();

  void UtilityElement_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityElement_destroy(
      handle,
    );
  }

  late final _UtilityElement_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityElement_destroy');
  late final _UtilityElement_destroy = _UtilityElement_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNamedTraceConfigurationQueryParameters_created(
    RT_UtilityNamedTraceConfigurationQueryParametersHandle handle,
  ) {
    return _UtilityNamedTraceConfigurationQueryParameters_created(
      handle,
    );
  }

  late final _UtilityNamedTraceConfigurationQueryParameters_createdPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      RT_UtilityNamedTraceConfigurationQueryParametersHandle)>>(
          'UtilityNamedTraceConfigurationQueryParameters_created');
  late final _UtilityNamedTraceConfigurationQueryParameters_created =
      _UtilityNamedTraceConfigurationQueryParameters_createdPtr.asFunction<
          void Function(
              RT_UtilityNamedTraceConfigurationQueryParametersHandle)>();

  void UtilityNamedTraceConfigurationQueryParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNamedTraceConfigurationQueryParameters_destroy(
      handle,
    );
  }

  late final _UtilityNamedTraceConfigurationQueryParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNamedTraceConfigurationQueryParameters_destroy');
  late final _UtilityNamedTraceConfigurationQueryParameters_destroy =
      _UtilityNamedTraceConfigurationQueryParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNamedTraceConfiguration_created(
    imp1.RT_UtilityNamedTraceConfigurationHandle handle,
  ) {
    return _UtilityNamedTraceConfiguration_created(
      handle,
    );
  }

  late final _UtilityNamedTraceConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityNamedTraceConfigurationHandle)>>(
      'UtilityNamedTraceConfiguration_created');
  late final _UtilityNamedTraceConfiguration_created =
      _UtilityNamedTraceConfiguration_createdPtr.asFunction<
          void Function(imp1.RT_UtilityNamedTraceConfigurationHandle)>();

  void UtilityNamedTraceConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNamedTraceConfiguration_destroy(
      handle,
    );
  }

  late final _UtilityNamedTraceConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNamedTraceConfiguration_destroy');
  late final _UtilityNamedTraceConfiguration_destroy =
      _UtilityNamedTraceConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNearestNeighbor_created(
    RT_UtilityNearestNeighborHandle handle,
  ) {
    return _UtilityNearestNeighbor_created(
      handle,
    );
  }

  late final _UtilityNearestNeighbor_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityNearestNeighborHandle)>>(
      'UtilityNearestNeighbor_created');
  late final _UtilityNearestNeighbor_created =
      _UtilityNearestNeighbor_createdPtr.asFunction<
          void Function(RT_UtilityNearestNeighborHandle)>();

  void UtilityNearestNeighbor_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNearestNeighbor_destroy(
      handle,
    );
  }

  late final _UtilityNearestNeighbor_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNearestNeighbor_destroy');
  late final _UtilityNearestNeighbor_destroy =
      _UtilityNearestNeighbor_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetworkAttribute_created(
    imp1.RT_UtilityNetworkAttributeHandle handle,
  ) {
    return _UtilityNetworkAttribute_created(
      handle,
    );
  }

  late final _UtilityNetworkAttribute_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityNetworkAttributeHandle)>>(
      'UtilityNetworkAttribute_created');
  late final _UtilityNetworkAttribute_created =
      _UtilityNetworkAttribute_createdPtr.asFunction<
          void Function(imp1.RT_UtilityNetworkAttributeHandle)>();

  void UtilityNetworkAttribute_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetworkAttribute_destroy(
      handle,
    );
  }

  late final _UtilityNetworkAttribute_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetworkAttribute_destroy');
  late final _UtilityNetworkAttribute_destroy =
      _UtilityNetworkAttribute_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetworkAttribute_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetworkAttribute_destroyInstance(
      handle,
    );
  }

  late final _UtilityNetworkAttribute_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetworkAttribute_destroyInstance');
  late final _UtilityNetworkAttribute_destroyInstance =
      _UtilityNetworkAttribute_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetworkCapabilities_created(
    RT_UtilityNetworkCapabilitiesHandle handle,
  ) {
    return _UtilityNetworkCapabilities_created(
      handle,
    );
  }

  late final _UtilityNetworkCapabilities_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_UtilityNetworkCapabilitiesHandle)>>(
      'UtilityNetworkCapabilities_created');
  late final _UtilityNetworkCapabilities_created =
      _UtilityNetworkCapabilities_createdPtr.asFunction<
          void Function(RT_UtilityNetworkCapabilitiesHandle)>();

  void UtilityNetworkCapabilities_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetworkCapabilities_destroy(
      handle,
    );
  }

  late final _UtilityNetworkCapabilities_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetworkCapabilities_destroy');
  late final _UtilityNetworkCapabilities_destroy =
      _UtilityNetworkCapabilities_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetworkDefinition_created(
    RT_UtilityNetworkDefinitionHandle handle,
  ) {
    return _UtilityNetworkDefinition_created(
      handle,
    );
  }

  late final _UtilityNetworkDefinition_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_UtilityNetworkDefinitionHandle)>>(
      'UtilityNetworkDefinition_created');
  late final _UtilityNetworkDefinition_created =
      _UtilityNetworkDefinition_createdPtr.asFunction<
          void Function(RT_UtilityNetworkDefinitionHandle)>();

  void UtilityNetworkDefinition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetworkDefinition_destroy(
      handle,
    );
  }

  late final _UtilityNetworkDefinition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetworkDefinition_destroy');
  late final _UtilityNetworkDefinition_destroy =
      _UtilityNetworkDefinition_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetworkSource_created(
    imp1.RT_UtilityNetworkSourceHandle handle,
  ) {
    return _UtilityNetworkSource_created(
      handle,
    );
  }

  late final _UtilityNetworkSource_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityNetworkSourceHandle)>>(
      'UtilityNetworkSource_created');
  late final _UtilityNetworkSource_created = _UtilityNetworkSource_createdPtr
      .asFunction<void Function(imp1.RT_UtilityNetworkSourceHandle)>();

  void UtilityNetworkSource_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetworkSource_destroy(
      handle,
    );
  }

  late final _UtilityNetworkSource_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetworkSource_destroy');
  late final _UtilityNetworkSource_destroy = _UtilityNetworkSource_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetworkSource_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetworkSource_destroyInstance(
      handle,
    );
  }

  late final _UtilityNetworkSource_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetworkSource_destroyInstance');
  late final _UtilityNetworkSource_destroyInstance =
      _UtilityNetworkSource_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetworkState_created(
    imp1.RT_UtilityNetworkStateHandle handle,
  ) {
    return _UtilityNetworkState_created(
      handle,
    );
  }

  late final _UtilityNetworkState_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityNetworkStateHandle)>>(
      'UtilityNetworkState_created');
  late final _UtilityNetworkState_created = _UtilityNetworkState_createdPtr
      .asFunction<void Function(imp1.RT_UtilityNetworkStateHandle)>();

  void UtilityNetworkState_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetworkState_destroy(
      handle,
    );
  }

  late final _UtilityNetworkState_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetworkState_destroy');
  late final _UtilityNetworkState_destroy = _UtilityNetworkState_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetwork_created(
    imp1.RT_UtilityNetworkHandle handle,
  ) {
    return _UtilityNetwork_created(
      handle,
    );
  }

  late final _UtilityNetwork_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityNetworkHandle)>>(
      'UtilityNetwork_created');
  late final _UtilityNetwork_created = _UtilityNetwork_createdPtr.asFunction<
      void Function(imp1.RT_UtilityNetworkHandle)>();

  void UtilityNetwork_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetwork_destroy(
      handle,
    );
  }

  late final _UtilityNetwork_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetwork_destroy');
  late final _UtilityNetwork_destroy = _UtilityNetwork_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityNetwork_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityNetwork_destroyInstance(
      handle,
    );
  }

  late final _UtilityNetwork_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityNetwork_destroyInstance');
  late final _UtilityNetwork_destroyInstance =
      _UtilityNetwork_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityPropagator_created(
    imp1.RT_UtilityPropagatorHandle handle,
  ) {
    return _UtilityPropagator_created(
      handle,
    );
  }

  late final _UtilityPropagator_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityPropagatorHandle)>>(
      'UtilityPropagator_created');
  late final _UtilityPropagator_created = _UtilityPropagator_createdPtr
      .asFunction<void Function(imp1.RT_UtilityPropagatorHandle)>();

  void UtilityPropagator_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityPropagator_destroy(
      handle,
    );
  }

  late final _UtilityPropagator_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityPropagator_destroy');
  late final _UtilityPropagator_destroy = _UtilityPropagator_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityRuleElement_created(
    RT_UtilityRuleElementHandle handle,
  ) {
    return _UtilityRuleElement_created(
      handle,
    );
  }

  late final _UtilityRuleElement_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_UtilityRuleElementHandle)>>(
      'UtilityRuleElement_created');
  late final _UtilityRuleElement_created = _UtilityRuleElement_createdPtr
      .asFunction<void Function(RT_UtilityRuleElementHandle)>();

  void UtilityRuleElement_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityRuleElement_destroy(
      handle,
    );
  }

  late final _UtilityRuleElement_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityRuleElement_destroy');
  late final _UtilityRuleElement_destroy = _UtilityRuleElement_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityRule_created(
    imp1.RT_UtilityRuleHandle handle,
  ) {
    return _UtilityRule_created(
      handle,
    );
  }

  late final _UtilityRule_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityRuleHandle)>>(
          'UtilityRule_created');
  late final _UtilityRule_created = _UtilityRule_createdPtr.asFunction<
      void Function(imp1.RT_UtilityRuleHandle)>();

  void UtilityRule_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityRule_destroy(
      handle,
    );
  }

  late final _UtilityRule_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityRule_destroy');
  late final _UtilityRule_destroy = _UtilityRule_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTerminalConfigurationPath_created(
    imp1.RT_UtilityTerminalConfigurationPathHandle handle,
  ) {
    return _UtilityTerminalConfigurationPath_created(
      handle,
    );
  }

  late final _UtilityTerminalConfigurationPath_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_UtilityTerminalConfigurationPathHandle)>>(
      'UtilityTerminalConfigurationPath_created');
  late final _UtilityTerminalConfigurationPath_created =
      _UtilityTerminalConfigurationPath_createdPtr.asFunction<
          void Function(imp1.RT_UtilityTerminalConfigurationPathHandle)>();

  void UtilityTerminalConfigurationPath_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTerminalConfigurationPath_destroy(
      handle,
    );
  }

  late final _UtilityTerminalConfigurationPath_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTerminalConfigurationPath_destroy');
  late final _UtilityTerminalConfigurationPath_destroy =
      _UtilityTerminalConfigurationPath_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTerminalConfiguration_created(
    imp1.RT_UtilityTerminalConfigurationHandle handle,
  ) {
    return _UtilityTerminalConfiguration_created(
      handle,
    );
  }

  late final _UtilityTerminalConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTerminalConfigurationHandle)>>(
      'UtilityTerminalConfiguration_created');
  late final _UtilityTerminalConfiguration_created =
      _UtilityTerminalConfiguration_createdPtr.asFunction<
          void Function(imp1.RT_UtilityTerminalConfigurationHandle)>();

  void UtilityTerminalConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTerminalConfiguration_destroy(
      handle,
    );
  }

  late final _UtilityTerminalConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTerminalConfiguration_destroy');
  late final _UtilityTerminalConfiguration_destroy =
      _UtilityTerminalConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTerminalPath_created(
    imp1.RT_UtilityTerminalPathHandle handle,
  ) {
    return _UtilityTerminalPath_created(
      handle,
    );
  }

  late final _UtilityTerminalPath_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTerminalPathHandle)>>(
      'UtilityTerminalPath_created');
  late final _UtilityTerminalPath_created = _UtilityTerminalPath_createdPtr
      .asFunction<void Function(imp1.RT_UtilityTerminalPathHandle)>();

  void UtilityTerminalPath_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTerminalPath_destroy(
      handle,
    );
  }

  late final _UtilityTerminalPath_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTerminalPath_destroy');
  late final _UtilityTerminalPath_destroy = _UtilityTerminalPath_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTerminal_created(
    imp1.RT_UtilityTerminalHandle handle,
  ) {
    return _UtilityTerminal_created(
      handle,
    );
  }

  late final _UtilityTerminal_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityTerminalHandle)>>(
      'UtilityTerminal_created');
  late final _UtilityTerminal_created = _UtilityTerminal_createdPtr.asFunction<
      void Function(imp1.RT_UtilityTerminalHandle)>();

  void UtilityTerminal_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTerminal_destroy(
      handle,
    );
  }

  late final _UtilityTerminal_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTerminal_destroy');
  late final _UtilityTerminal_destroy = _UtilityTerminal_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTerminal_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTerminal_destroyInstance(
      handle,
    );
  }

  late final _UtilityTerminal_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTerminal_destroyInstance');
  late final _UtilityTerminal_destroyInstance =
      _UtilityTerminal_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTierGroup_created(
    imp1.RT_UtilityTierGroupHandle handle,
  ) {
    return _UtilityTierGroup_created(
      handle,
    );
  }

  late final _UtilityTierGroup_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityTierGroupHandle)>>(
      'UtilityTierGroup_created');
  late final _UtilityTierGroup_created = _UtilityTierGroup_createdPtr
      .asFunction<void Function(imp1.RT_UtilityTierGroupHandle)>();

  void UtilityTierGroup_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTierGroup_destroy(
      handle,
    );
  }

  late final _UtilityTierGroup_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTierGroup_destroy');
  late final _UtilityTierGroup_destroy = _UtilityTierGroup_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTierGroup_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTierGroup_destroyInstance(
      handle,
    );
  }

  late final _UtilityTierGroup_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTierGroup_destroyInstance');
  late final _UtilityTierGroup_destroyInstance =
      _UtilityTierGroup_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTier_created(
    imp1.RT_UtilityTierHandle handle,
  ) {
    return _UtilityTier_created(
      handle,
    );
  }

  late final _UtilityTier_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityTierHandle)>>(
          'UtilityTier_created');
  late final _UtilityTier_created = _UtilityTier_createdPtr.asFunction<
      void Function(imp1.RT_UtilityTierHandle)>();

  void UtilityTier_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTier_destroy(
      handle,
    );
  }

  late final _UtilityTier_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTier_destroy');
  late final _UtilityTier_destroy = _UtilityTier_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTier_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTier_destroyInstance(
      handle,
    );
  }

  late final _UtilityTier_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTier_destroyInstance');
  late final _UtilityTier_destroyInstance = _UtilityTier_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceCondition_created(
    RT_UtilityTraceConditionHandle handle,
  ) {
    return _UtilityTraceCondition_created(
      handle,
    );
  }

  late final _UtilityTraceCondition_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityTraceConditionHandle)>>(
      'UtilityTraceCondition_created');
  late final _UtilityTraceCondition_created = _UtilityTraceCondition_createdPtr
      .asFunction<void Function(RT_UtilityTraceConditionHandle)>();

  void UtilityTraceCondition_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceCondition_destroy(
      handle,
    );
  }

  late final _UtilityTraceCondition_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceCondition_destroy');
  late final _UtilityTraceCondition_destroy = _UtilityTraceCondition_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceConfiguration_created(
    RT_UtilityTraceConfigurationHandle handle,
  ) {
    return _UtilityTraceConfiguration_created(
      handle,
    );
  }

  late final _UtilityTraceConfiguration_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_UtilityTraceConfigurationHandle)>>(
      'UtilityTraceConfiguration_created');
  late final _UtilityTraceConfiguration_created =
      _UtilityTraceConfiguration_createdPtr.asFunction<
          void Function(RT_UtilityTraceConfigurationHandle)>();

  void UtilityTraceConfiguration_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceConfiguration_destroy(
      handle,
    );
  }

  late final _UtilityTraceConfiguration_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceConfiguration_destroy');
  late final _UtilityTraceConfiguration_destroy =
      _UtilityTraceConfiguration_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceFilter_created(
    RT_UtilityTraceFilterHandle handle,
  ) {
    return _UtilityTraceFilter_created(
      handle,
    );
  }

  late final _UtilityTraceFilter_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(RT_UtilityTraceFilterHandle)>>(
      'UtilityTraceFilter_created');
  late final _UtilityTraceFilter_created = _UtilityTraceFilter_createdPtr
      .asFunction<void Function(RT_UtilityTraceFilterHandle)>();

  void UtilityTraceFilter_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceFilter_destroy(
      handle,
    );
  }

  late final _UtilityTraceFilter_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceFilter_destroy');
  late final _UtilityTraceFilter_destroy = _UtilityTraceFilter_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceFunctionBarrier_created(
    imp1.RT_UtilityTraceFunctionBarrierHandle handle,
  ) {
    return _UtilityTraceFunctionBarrier_created(
      handle,
    );
  }

  late final _UtilityTraceFunctionBarrier_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTraceFunctionBarrierHandle)>>(
      'UtilityTraceFunctionBarrier_created');
  late final _UtilityTraceFunctionBarrier_created =
      _UtilityTraceFunctionBarrier_createdPtr.asFunction<
          void Function(imp1.RT_UtilityTraceFunctionBarrierHandle)>();

  void UtilityTraceFunctionBarrier_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceFunctionBarrier_destroy(
      handle,
    );
  }

  late final _UtilityTraceFunctionBarrier_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceFunctionBarrier_destroy');
  late final _UtilityTraceFunctionBarrier_destroy =
      _UtilityTraceFunctionBarrier_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceFunctionOutput_created(
    imp1.RT_UtilityTraceFunctionOutputHandle handle,
  ) {
    return _UtilityTraceFunctionOutput_created(
      handle,
    );
  }

  late final _UtilityTraceFunctionOutput_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTraceFunctionOutputHandle)>>(
      'UtilityTraceFunctionOutput_created');
  late final _UtilityTraceFunctionOutput_created =
      _UtilityTraceFunctionOutput_createdPtr.asFunction<
          void Function(imp1.RT_UtilityTraceFunctionOutputHandle)>();

  void UtilityTraceFunctionOutput_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceFunctionOutput_destroy(
      handle,
    );
  }

  late final _UtilityTraceFunctionOutput_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceFunctionOutput_destroy');
  late final _UtilityTraceFunctionOutput_destroy =
      _UtilityTraceFunctionOutput_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceFunction_created(
    imp1.RT_UtilityTraceFunctionHandle handle,
  ) {
    return _UtilityTraceFunction_created(
      handle,
    );
  }

  late final _UtilityTraceFunction_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTraceFunctionHandle)>>(
      'UtilityTraceFunction_created');
  late final _UtilityTraceFunction_created = _UtilityTraceFunction_createdPtr
      .asFunction<void Function(imp1.RT_UtilityTraceFunctionHandle)>();

  void UtilityTraceFunction_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceFunction_destroy(
      handle,
    );
  }

  late final _UtilityTraceFunction_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceFunction_destroy');
  late final _UtilityTraceFunction_destroy = _UtilityTraceFunction_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceParameters_created(
    RT_UtilityTraceParametersHandle handle,
  ) {
    return _UtilityTraceParameters_created(
      handle,
    );
  }

  late final _UtilityTraceParameters_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityTraceParametersHandle)>>(
      'UtilityTraceParameters_created');
  late final _UtilityTraceParameters_created =
      _UtilityTraceParameters_createdPtr.asFunction<
          void Function(RT_UtilityTraceParametersHandle)>();

  void UtilityTraceParameters_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceParameters_destroy(
      handle,
    );
  }

  late final _UtilityTraceParameters_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceParameters_destroy');
  late final _UtilityTraceParameters_destroy =
      _UtilityTraceParameters_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraceResult_created(
    imp1.RT_UtilityTraceResultHandle handle,
  ) {
    return _UtilityTraceResult_created(
      handle,
    );
  }

  late final _UtilityTraceResult_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityTraceResultHandle)>>(
      'UtilityTraceResult_created');
  late final _UtilityTraceResult_created = _UtilityTraceResult_createdPtr
      .asFunction<void Function(imp1.RT_UtilityTraceResultHandle)>();

  void UtilityTraceResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraceResult_destroy(
      handle,
    );
  }

  late final _UtilityTraceResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraceResult_destroy');
  late final _UtilityTraceResult_destroy = _UtilityTraceResult_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityTraversability_created(
    RT_UtilityTraversabilityHandle handle,
  ) {
    return _UtilityTraversability_created(
      handle,
    );
  }

  late final _UtilityTraversability_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityTraversabilityHandle)>>(
      'UtilityTraversability_created');
  late final _UtilityTraversability_created = _UtilityTraversability_createdPtr
      .asFunction<void Function(RT_UtilityTraversabilityHandle)>();

  void UtilityTraversability_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityTraversability_destroy(
      handle,
    );
  }

  late final _UtilityTraversability_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityTraversability_destroy');
  late final _UtilityTraversability_destroy = _UtilityTraversability_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void UtilityValidationResult_created(
    RT_UtilityValidationResultHandle handle,
  ) {
    return _UtilityValidationResult_created(
      handle,
    );
  }

  late final _UtilityValidationResult_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityValidationResultHandle)>>(
      'UtilityValidationResult_created');
  late final _UtilityValidationResult_created =
      _UtilityValidationResult_createdPtr.asFunction<
          void Function(RT_UtilityValidationResultHandle)>();

  void UtilityValidationResult_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UtilityValidationResult_destroy(
      handle,
    );
  }

  late final _UtilityValidationResult_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'UtilityValidationResult_destroy');
  late final _UtilityValidationResult_destroy =
      _UtilityValidationResult_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void VectorMarkerSymbolElement_created(
    imp1.RT_VectorMarkerSymbolElementHandle handle,
  ) {
    return _VectorMarkerSymbolElement_created(
      handle,
    );
  }

  late final _VectorMarkerSymbolElement_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_VectorMarkerSymbolElementHandle)>>(
      'VectorMarkerSymbolElement_created');
  late final _VectorMarkerSymbolElement_created =
      _VectorMarkerSymbolElement_createdPtr.asFunction<
          void Function(imp1.RT_VectorMarkerSymbolElementHandle)>();

  void VectorMarkerSymbolElement_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _VectorMarkerSymbolElement_destroy(
      handle,
    );
  }

  late final _VectorMarkerSymbolElement_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'VectorMarkerSymbolElement_destroy');
  late final _VectorMarkerSymbolElement_destroy =
      _VectorMarkerSymbolElement_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void VectorTileCache_created(
    imp1.RT_VectorTileCacheHandle handle,
  ) {
    return _VectorTileCache_created(
      handle,
    );
  }

  late final _VectorTileCache_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_VectorTileCacheHandle)>>(
      'VectorTileCache_created');
  late final _VectorTileCache_created = _VectorTileCache_createdPtr.asFunction<
      void Function(imp1.RT_VectorTileCacheHandle)>();

  void VectorTileCache_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _VectorTileCache_destroy(
      handle,
    );
  }

  late final _VectorTileCache_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'VectorTileCache_destroy');
  late final _VectorTileCache_destroy = _VectorTileCache_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void VectorTileCache_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _VectorTileCache_destroyInstance(
      handle,
    );
  }

  late final _VectorTileCache_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'VectorTileCache_destroyInstance');
  late final _VectorTileCache_destroyInstance =
      _VectorTileCache_destroyInstancePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void VectorTileSourceInfoImmutableCollection_created(
    RT_VectorTileSourceInfoImmutableCollectionHandle handle,
  ) {
    return _VectorTileSourceInfoImmutableCollection_created(
      handle,
    );
  }

  late final _VectorTileSourceInfoImmutableCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  RT_VectorTileSourceInfoImmutableCollectionHandle)>>(
      'VectorTileSourceInfoImmutableCollection_created');
  late final _VectorTileSourceInfoImmutableCollection_created =
      _VectorTileSourceInfoImmutableCollection_createdPtr.asFunction<
          void Function(RT_VectorTileSourceInfoImmutableCollectionHandle)>();

  void VectorTileSourceInfoImmutableCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _VectorTileSourceInfoImmutableCollection_destroy(
      handle,
    );
  }

  late final _VectorTileSourceInfoImmutableCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'VectorTileSourceInfoImmutableCollection_destroy');
  late final _VectorTileSourceInfoImmutableCollection_destroy =
      _VectorTileSourceInfoImmutableCollection_destroyPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>)>();

  void VectorTileSourceInfo_created(
    imp1.RT_VectorTileSourceInfoHandle handle,
  ) {
    return _VectorTileSourceInfo_created(
      handle,
    );
  }

  late final _VectorTileSourceInfo_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_VectorTileSourceInfoHandle)>>(
      'VectorTileSourceInfo_created');
  late final _VectorTileSourceInfo_created = _VectorTileSourceInfo_createdPtr
      .asFunction<void Function(imp1.RT_VectorTileSourceInfoHandle)>();

  void VectorTileSourceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _VectorTileSourceInfo_destroy(
      handle,
    );
  }

  late final _VectorTileSourceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'VectorTileSourceInfo_destroy');
  late final _VectorTileSourceInfo_destroy = _VectorTileSourceInfo_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void VectorTileStyle_created(
    imp1.RT_VectorTileStyleHandle handle,
  ) {
    return _VectorTileStyle_created(
      handle,
    );
  }

  late final _VectorTileStyle_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_VectorTileStyleHandle)>>(
      'VectorTileStyle_created');
  late final _VectorTileStyle_created = _VectorTileStyle_createdPtr.asFunction<
      void Function(imp1.RT_VectorTileStyleHandle)>();

  void VectorTileStyle_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _VectorTileStyle_destroy(
      handle,
    );
  }

  late final _VectorTileStyle_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'VectorTileStyle_destroy');
  late final _VectorTileStyle_destroy = _VectorTileStyle_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Vector_created(
    imp1.RT_VectorHandle handle,
  ) {
    return _Vector_created(
      handle,
    );
  }

  late final _Vector_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_VectorHandle)>>(
          'Vector_created');
  late final _Vector_created =
      _Vector_createdPtr.asFunction<void Function(imp1.RT_VectorHandle)>();

  void Vector_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Vector_destroy(
      handle,
    );
  }

  late final _Vector_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Vector_destroy');
  late final _Vector_destroy =
      _Vector_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void ViewLabelProperties_created(
    imp1.RT_ViewLabelPropertiesHandle handle,
  ) {
    return _ViewLabelProperties_created(
      handle,
    );
  }

  late final _ViewLabelProperties_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ViewLabelPropertiesHandle)>>(
      'ViewLabelProperties_created');
  late final _ViewLabelProperties_created = _ViewLabelProperties_createdPtr
      .asFunction<void Function(imp1.RT_ViewLabelPropertiesHandle)>();

  void ViewLabelProperties_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _ViewLabelProperties_destroy(
      handle,
    );
  }

  late final _ViewLabelProperties_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'ViewLabelProperties_destroy');
  late final _ViewLabelProperties_destroy = _ViewLabelProperties_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void Viewpoint_created(
    imp1.RT_ViewpointHandle handle,
  ) {
    return _Viewpoint_created(
      handle,
    );
  }

  late final _Viewpoint_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_ViewpointHandle)>>(
          'Viewpoint_created');
  late final _Viewpoint_created = _Viewpoint_createdPtr.asFunction<
      void Function(imp1.RT_ViewpointHandle)>();

  void Viewpoint_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Viewpoint_destroy(
      handle,
    );
  }

  late final _Viewpoint_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Viewpoint_destroy');
  late final _Viewpoint_destroy =
      _Viewpoint_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void VoiceGuidance_created(
    RT_VoiceGuidanceHandle handle,
  ) {
    return _VoiceGuidance_created(
      handle,
    );
  }

  late final _VoiceGuidance_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_VoiceGuidanceHandle)>>(
          'VoiceGuidance_created');
  late final _VoiceGuidance_created = _VoiceGuidance_createdPtr.asFunction<
      void Function(RT_VoiceGuidanceHandle)>();

  void VoiceGuidance_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _VoiceGuidance_destroy(
      handle,
    );
  }

  late final _VoiceGuidance_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'VoiceGuidance_destroy');
  late final _VoiceGuidance_destroy = _VoiceGuidance_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WFSLayerInfo_created(
    imp1.RT_WFSLayerInfoHandle handle,
  ) {
    return _WFSLayerInfo_created(
      handle,
    );
  }

  late final _WFSLayerInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_WFSLayerInfoHandle)>>(
      'WFSLayerInfo_created');
  late final _WFSLayerInfo_created = _WFSLayerInfo_createdPtr.asFunction<
      void Function(imp1.RT_WFSLayerInfoHandle)>();

  void WFSLayerInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WFSLayerInfo_destroy(
      handle,
    );
  }

  late final _WFSLayerInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WFSLayerInfo_destroy');
  late final _WFSLayerInfo_destroy = _WFSLayerInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WFSLayerInfo_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WFSLayerInfo_destroyInstance(
      handle,
    );
  }

  late final _WFSLayerInfo_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WFSLayerInfo_destroyInstance');
  late final _WFSLayerInfo_destroyInstance = _WFSLayerInfo_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WFSServiceInfo_created(
    RT_WFSServiceInfoHandle handle,
  ) {
    return _WFSServiceInfo_created(
      handle,
    );
  }

  late final _WFSServiceInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_WFSServiceInfoHandle)>>(
          'WFSServiceInfo_created');
  late final _WFSServiceInfo_created = _WFSServiceInfo_createdPtr.asFunction<
      void Function(RT_WFSServiceInfoHandle)>();

  void WFSServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WFSServiceInfo_destroy(
      handle,
    );
  }

  late final _WFSServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WFSServiceInfo_destroy');
  late final _WFSServiceInfo_destroy = _WFSServiceInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WFSService_created(
    RT_WFSServiceHandle handle,
  ) {
    return _WFSService_created(
      handle,
    );
  }

  late final _WFSService_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_WFSServiceHandle)>>(
          'WFSService_created');
  late final _WFSService_created =
      _WFSService_createdPtr.asFunction<void Function(RT_WFSServiceHandle)>();

  void WFSService_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WFSService_destroy(
      handle,
    );
  }

  late final _WFSService_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WFSService_destroy');
  late final _WFSService_destroy =
      _WFSService_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WMSFeature_created(
    imp1.RT_WMSFeatureHandle handle,
  ) {
    return _WMSFeature_created(
      handle,
    );
  }

  late final _WMSFeature_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_WMSFeatureHandle)>>(
          'WMSFeature_created');
  late final _WMSFeature_created = _WMSFeature_createdPtr.asFunction<
      void Function(imp1.RT_WMSFeatureHandle)>();

  void WMSFeature_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMSFeature_destroy(
      handle,
    );
  }

  late final _WMSFeature_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMSFeature_destroy');
  late final _WMSFeature_destroy =
      _WMSFeature_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WMSLayerInfo_created(
    imp1.RT_WMSLayerInfoHandle handle,
  ) {
    return _WMSLayerInfo_created(
      handle,
    );
  }

  late final _WMSLayerInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_WMSLayerInfoHandle)>>(
      'WMSLayerInfo_created');
  late final _WMSLayerInfo_created = _WMSLayerInfo_createdPtr.asFunction<
      void Function(imp1.RT_WMSLayerInfoHandle)>();

  void WMSLayerInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMSLayerInfo_destroy(
      handle,
    );
  }

  late final _WMSLayerInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMSLayerInfo_destroy');
  late final _WMSLayerInfo_destroy = _WMSLayerInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WMSLayerInfo_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMSLayerInfo_destroyInstance(
      handle,
    );
  }

  late final _WMSLayerInfo_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMSLayerInfo_destroyInstance');
  late final _WMSLayerInfo_destroyInstance = _WMSLayerInfo_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WMSServiceInfo_created(
    RT_WMSServiceInfoHandle handle,
  ) {
    return _WMSServiceInfo_created(
      handle,
    );
  }

  late final _WMSServiceInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_WMSServiceInfoHandle)>>(
          'WMSServiceInfo_created');
  late final _WMSServiceInfo_created = _WMSServiceInfo_createdPtr.asFunction<
      void Function(RT_WMSServiceInfoHandle)>();

  void WMSServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMSServiceInfo_destroy(
      handle,
    );
  }

  late final _WMSServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMSServiceInfo_destroy');
  late final _WMSServiceInfo_destroy = _WMSServiceInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WMSService_created(
    RT_WMSServiceHandle handle,
  ) {
    return _WMSService_created(
      handle,
    );
  }

  late final _WMSService_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_WMSServiceHandle)>>(
          'WMSService_created');
  late final _WMSService_created =
      _WMSService_createdPtr.asFunction<void Function(RT_WMSServiceHandle)>();

  void WMSService_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMSService_destroy(
      handle,
    );
  }

  late final _WMSService_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMSService_destroy');
  late final _WMSService_destroy =
      _WMSService_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WMSSublayer_created(
    imp1.RT_WMSSublayerHandle handle,
  ) {
    return _WMSSublayer_created(
      handle,
    );
  }

  late final _WMSSublayer_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_WMSSublayerHandle)>>(
          'WMSSublayer_created');
  late final _WMSSublayer_created = _WMSSublayer_createdPtr.asFunction<
      void Function(imp1.RT_WMSSublayerHandle)>();

  void WMSSublayer_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMSSublayer_destroy(
      handle,
    );
  }

  late final _WMSSublayer_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMSSublayer_destroy');
  late final _WMSSublayer_destroy = _WMSSublayer_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WMSSublayer_destroyInstance(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMSSublayer_destroyInstance(
      handle,
    );
  }

  late final _WMSSublayer_destroyInstancePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMSSublayer_destroyInstance');
  late final _WMSSublayer_destroyInstance = _WMSSublayer_destroyInstancePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WMTSLayerInfo_created(
    imp1.RT_WMTSLayerInfoHandle handle,
  ) {
    return _WMTSLayerInfo_created(
      handle,
    );
  }

  late final _WMTSLayerInfo_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_WMTSLayerInfoHandle)>>(
      'WMTSLayerInfo_created');
  late final _WMTSLayerInfo_created = _WMTSLayerInfo_createdPtr.asFunction<
      void Function(imp1.RT_WMTSLayerInfoHandle)>();

  void WMTSLayerInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMTSLayerInfo_destroy(
      handle,
    );
  }

  late final _WMTSLayerInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMTSLayerInfo_destroy');
  late final _WMTSLayerInfo_destroy = _WMTSLayerInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WMTSServiceInfo_created(
    RT_WMTSServiceInfoHandle handle,
  ) {
    return _WMTSServiceInfo_created(
      handle,
    );
  }

  late final _WMTSServiceInfo_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_WMTSServiceInfoHandle)>>(
          'WMTSServiceInfo_created');
  late final _WMTSServiceInfo_created = _WMTSServiceInfo_createdPtr.asFunction<
      void Function(RT_WMTSServiceInfoHandle)>();

  void WMTSServiceInfo_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMTSServiceInfo_destroy(
      handle,
    );
  }

  late final _WMTSServiceInfo_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMTSServiceInfo_destroy');
  late final _WMTSServiceInfo_destroy = _WMTSServiceInfo_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WMTSService_created(
    RT_WMTSServiceHandle handle,
  ) {
    return _WMTSService_created(
      handle,
    );
  }

  late final _WMTSService_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(RT_WMTSServiceHandle)>>(
          'WMTSService_created');
  late final _WMTSService_created =
      _WMTSService_createdPtr.asFunction<void Function(RT_WMTSServiceHandle)>();

  void WMTSService_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMTSService_destroy(
      handle,
    );
  }

  late final _WMTSService_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMTSService_destroy');
  late final _WMTSService_destroy = _WMTSService_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WMTSTileMatrixSet_created(
    imp1.RT_WMTSTileMatrixSetHandle handle,
  ) {
    return _WMTSTileMatrixSet_created(
      handle,
    );
  }

  late final _WMTSTileMatrixSet_createdPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_WMTSTileMatrixSetHandle)>>(
      'WMTSTileMatrixSet_created');
  late final _WMTSTileMatrixSet_created = _WMTSTileMatrixSet_createdPtr
      .asFunction<void Function(imp1.RT_WMTSTileMatrixSetHandle)>();

  void WMTSTileMatrixSet_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMTSTileMatrixSet_destroy(
      handle,
    );
  }

  late final _WMTSTileMatrixSet_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMTSTileMatrixSet_destroy');
  late final _WMTSTileMatrixSet_destroy = _WMTSTileMatrixSet_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WMTSTileMatrix_created(
    imp1.RT_WMTSTileMatrixHandle handle,
  ) {
    return _WMTSTileMatrix_created(
      handle,
    );
  }

  late final _WMTSTileMatrix_createdPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_WMTSTileMatrixHandle)>>(
      'WMTSTileMatrix_created');
  late final _WMTSTileMatrix_created = _WMTSTileMatrix_createdPtr.asFunction<
      void Function(imp1.RT_WMTSTileMatrixHandle)>();

  void WMTSTileMatrix_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WMTSTileMatrix_destroy(
      handle,
    );
  }

  late final _WMTSTileMatrix_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WMTSTileMatrix_destroy');
  late final _WMTSTileMatrix_destroy = _WMTSTileMatrix_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void WebSocketConnection_created(
    imp1.RT_WebSocketConnectionHandle handle,
  ) {
    return _WebSocketConnection_created(
      handle,
    );
  }

  late final _WebSocketConnection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_WebSocketConnectionHandle)>>(
      'WebSocketConnection_created');
  late final _WebSocketConnection_created = _WebSocketConnection_createdPtr
      .asFunction<void Function(imp1.RT_WebSocketConnectionHandle)>();

  void WebSocketConnection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WebSocketConnection_destroy(
      handle,
    );
  }

  late final _WebSocketConnection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WebSocketConnection_destroy');
  late final _WebSocketConnection_destroy = _WebSocketConnection_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void WifiReading_created(
    imp1.RT_WifiReadingHandle handle,
  ) {
    return _WifiReading_created(
      handle,
    );
  }

  late final _WifiReading_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_WifiReadingHandle)>>(
          'WifiReading_created');
  late final _WifiReading_created = _WifiReading_createdPtr.asFunction<
      void Function(imp1.RT_WifiReadingHandle)>();

  void WifiReading_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _WifiReading_destroy(
      handle,
    );
  }

  late final _WifiReading_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'WifiReading_destroy');
  late final _WifiReading_destroy = _WifiReading_destroyPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void Worldview_created(
    imp1.RT_WorldviewHandle handle,
  ) {
    return _Worldview_created(
      handle,
    );
  }

  late final _Worldview_createdPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(imp1.RT_WorldviewHandle)>>(
          'Worldview_created');
  late final _Worldview_created = _Worldview_createdPtr.asFunction<
      void Function(imp1.RT_WorldviewHandle)>();

  void Worldview_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _Worldview_destroy(
      handle,
    );
  }

  late final _Worldview_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'Worldview_destroy');
  late final _Worldview_destroy =
      _Worldview_destroyPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void int64ImmutableCollection_created(
    RT_int64ImmutableCollectionHandle handle,
  ) {
    return _int64ImmutableCollection_created(
      handle,
    );
  }

  late final _int64ImmutableCollection_createdPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(RT_int64ImmutableCollectionHandle)>>(
      'int64ImmutableCollection_created');
  late final _int64ImmutableCollection_created =
      _int64ImmutableCollection_createdPtr
          .asFunction<void Function(RT_int64ImmutableCollectionHandle)>();

  void int64ImmutableCollection_destroy(
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _int64ImmutableCollection_destroy(
      handle,
    );
  }

  late final _int64ImmutableCollection_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'int64ImmutableCollection_destroy');
  late final _int64ImmutableCollection_destroy =
      _int64ImmutableCollection_destroyPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  int syncPing(
    int payload,
  ) {
    return _syncPing(
      payload,
    );
  }

  late final _syncPingPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Int)>>('syncPing');
  late final _syncPing = _syncPingPtr.asFunction<int Function(int)>();

  void syncPlatformHelpersProvider_applicationLocale(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_ElementReferenceHandle applicationLocale,
  ) {
    return _syncPlatformHelpersProvider_applicationLocale(
      userData,
      applicationLocale,
    );
  }

  late final _syncPlatformHelpersProvider_applicationLocalePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, imp1.RT_ElementReferenceHandle)>>(
      'syncPlatformHelpersProvider_applicationLocale');
  late final _syncPlatformHelpersProvider_applicationLocale =
      _syncPlatformHelpersProvider_applicationLocalePtr.asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, imp1.RT_ElementReferenceHandle)>();

  void syncPlatformHelpersProvider_convertNumber(
    ffi.Pointer<ffi.Void> userData,
    double number,
    int precision,
    bool usedAsDecimalPlaces,
    bool useThousandsSeparator,
    imp1.RT_ElementReferenceHandle result,
  ) {
    return _syncPlatformHelpersProvider_convertNumber(
      userData,
      number,
      precision,
      usedAsDecimalPlaces,
      useThousandsSeparator,
      result,
    );
  }

  late final _syncPlatformHelpersProvider_convertNumberPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Double, ffi.Int32,
                  ffi.Bool, ffi.Bool, imp1.RT_ElementReferenceHandle)>>(
      'syncPlatformHelpersProvider_convertNumber');
  late final _syncPlatformHelpersProvider_convertNumber =
      _syncPlatformHelpersProvider_convertNumberPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, double, int, bool, bool,
              imp1.RT_ElementReferenceHandle)>();

  void syncPlatformHelpersProvider_convertDateTime(
    ffi.Pointer<ffi.Void> userData,
    imp1.RT_DateTimeHandle dateTime,
    int format,
    imp1.RT_ElementReferenceHandle result,
  ) {
    return _syncPlatformHelpersProvider_convertDateTime(
      userData,
      dateTime,
      format,
      result,
    );
  }

  late final _syncPlatformHelpersProvider_convertDateTimePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_DateTimeHandle,
                  ffi.Int32, imp1.RT_ElementReferenceHandle)>>(
      'syncPlatformHelpersProvider_convertDateTime');
  late final _syncPlatformHelpersProvider_convertDateTime =
      _syncPlatformHelpersProvider_convertDateTimePtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, imp1.RT_DateTimeHandle, int,
              imp1.RT_ElementReferenceHandle)>();

  void syncResourceProvider_getResourceString(
    ffi.Pointer<ffi.Void> user_data,
    imp1.RT_StringHandle language_id,
    imp1.RT_StringHandle compound_id,
    imp1.RT_ArrayHandle parameters,
    imp1.RT_ElementReferenceHandle resource,
  ) {
    return _syncResourceProvider_getResourceString(
      user_data,
      language_id,
      compound_id,
      parameters,
      resource,
    );
  }

  late final _syncResourceProvider_getResourceStringPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  imp1.RT_StringHandle,
                  imp1.RT_StringHandle,
                  imp1.RT_ArrayHandle,
                  imp1.RT_ElementReferenceHandle)>>(
      'syncResourceProvider_getResourceString');
  late final _syncResourceProvider_getResourceString =
      _syncResourceProvider_getResourceStringPtr.asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              imp1.RT_StringHandle,
              imp1.RT_StringHandle,
              imp1.RT_ArrayHandle,
              imp1.RT_ElementReferenceHandle)>();

  late final addresses = _SymbolAddresses(this);
}

class _SymbolAddresses {
  final ArcGISMapsBindings _library;
  _SymbolAddresses(this._library);
  ffi.Pointer<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>
      get InitDartApiDL => _library._InitDartApiDLPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(Dart_Port, Dart_Port, ffi.Pointer<ffi.Void>)>>
      get InitCallbackManager => _library._InitCallbackManagerPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>
      get BundlePath => _library._BundlePathPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get nativeFree => _library._nativeFreePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Pointer<imp1.RT_ByteArray> Function(ffi.Int)>>
      get mallocByteArray => _library._mallocByteArrayPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<imp1.RT_ByteArray>)>>
      get freeByteArray => _library._freeByteArrayPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>>
      get syncErrorFn => _library._syncErrorFnPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<imp1.RT_ErrorHandle Function(ffi.Pointer<ffi.Void>)>>
      get fetchSyncError => _library._fetchSyncErrorPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncArcGISCredentialStoreAllCredentialsRemovedEvent =>
          _library._asyncArcGISCredentialStoreAllCredentialsRemovedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISCredentialHandle, imp1.RT_StringHandle)>>
      get asyncArcGISCredentialStoreCredentialAddedEvent =>
          _library._asyncArcGISCredentialStoreCredentialAddedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISCredentialHandle, imp1.RT_StringHandle)>>
      get asyncArcGISCredentialStoreCredentialRemovedEvent =>
          _library._asyncArcGISCredentialStoreCredentialRemovedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISCredentialHandle, imp1.RT_StringHandle)>>
      get asyncArcGISCredentialStoreCredentialUpdatedEvent =>
          _library._asyncArcGISCredentialStoreCredentialUpdatedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>>
      get asyncArcGISRuntimeEnvironmentErrorEvent =>
          _library._asyncArcGISRuntimeEnvironmentErrorEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, ffi.Size, imp1.RT_ElementHandle)>>
      get asyncObservableArrayElementAddedEvent =>
          _library._asyncObservableArrayElementAddedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, ffi.Size, imp1.RT_ElementHandle)>>
      get asyncObservableArrayElementRemovedEvent =>
          _library._asyncObservableArrayElementRemovedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_ArcGISAuthenticationChallengeHandle)>>
      get asyncAuthenticationManagerIssuedChallengeEvent =>
          _library._asyncAuthenticationManagerIssuedChallengeEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, imp1.RT_OAuthUserLoginPromptHandle)>>
      get asyncAuthenticationManagerOAuthUserLoginEvent =>
          _library._asyncAuthenticationManagerOAuthUserLoginEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  imp1.RT_PortalNetworkSecuredInquiryHandle)>>
      get asyncAuthenticationManagerPortalNetworkSecuredInquiryEvent => _library
          ._asyncAuthenticationManagerPortalNetworkSecuredInquiryEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>
      get asyncClientReferenceReleaseEvent =>
          _library._asyncClientReferenceReleaseEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEvent =>
          _library
              ._asyncExportVectorTilesJobEnsurePortalItemHasRequestHandlerEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEvent =>
          _library
              ._asyncExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>
      get asyncFeatureChangedEvent => _library._asyncFeatureChangedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_BasemapHandle)>>
      get asyncGeoModelBasemapChangedEvent =>
          _library._asyncGeoModelBasemapChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncGeoViewAttributionChangedEvent =>
          _library._asyncGeoViewAttributionChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncGeoViewDrawRequestedEvent =>
          _library._asyncGeoViewDrawRequestedEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>
      get asyncGeoViewDrawStatusChangedEvent =>
          _library._asyncGeoViewDrawStatusChangedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_LayerHandle,
                  imp1.RT_LayerViewStateHandle)>>
      get asyncGeoViewLayerViewStateChangedEvent =>
          _library._asyncGeoViewLayerViewStateChangedEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>
      get asyncGeoViewNavigationChangedEvent =>
          _library._asyncGeoViewNavigationChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncGeoViewSpatialReferenceChangedEvent =>
          _library._asyncGeoViewSpatialReferenceChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncGeoViewTimeExtentChangedEvent =>
          _library._asyncGeoViewTimeExtentChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncGeoViewViewpointChangedEvent =>
          _library._asyncGeoViewViewpointChangedEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>
      get asyncGeodatabaseTransactionStatusChangedEvent =>
          _library._asyncGeodatabaseTransactionStatusChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncJobJobDoneEvent => _library._asyncJobJobDoneEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, imp1.RT_JobMessageHandle)>>
      get asyncJobMessageAddedEvent => _library._asyncJobMessageAddedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncJobProgressChangedEvent =>
          _library._asyncJobProgressChangedEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>
      get asyncJobStatusChangedEvent => _library._asyncJobStatusChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncLayerContentSubLayerContentChangedEvent =>
          _library._asyncLayerContentSubLayerContentChangedEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>
      get asyncLayerVisibilityChangedEvent =>
          _library._asyncLayerVisibilityChangedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_TileKeyHandle)>>
      get asyncLayerTileEvent_cancelTileRequest =>
          _library._asyncLayerTileEvent_cancelTileRequestPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_TileKeyHandle)>>
      get asyncLayerTileEvent_tileRequest =>
          _library._asyncLayerTileEvent_tileRequestPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>>
      get asyncLoadableDoneLoadingEvent =>
          _library._asyncLoadableDoneLoadingEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>
      get asyncLoadableLoadStatusChangedEvent =>
          _library._asyncLoadableLoadStatusChangedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_ErrorHandle)>>
      get asyncLocationDataSourceErrorChangedEvent =>
          _library._asyncLocationDataSourceErrorChangedEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Double)>>
      get asyncLocationDataSourceHeadingChangedEvent =>
          _library._asyncLocationDataSourceHeadingChangedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_LocationHandle)>>
      get asyncLocationDataSourceLocationChangedEvent =>
          _library._asyncLocationDataSourceLocationChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncLocationDataSourceStartCallbackEvent =>
          _library._asyncLocationDataSourceStartCallbackEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>
      get asyncLocationDataSourceStatusChangedEvent =>
          _library._asyncLocationDataSourceStatusChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncLocationDataSourceStopCallbackEvent =>
          _library._asyncLocationDataSourceStopCallbackEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>
      get asyncLocationDisplayAutoPanModeChangedEvent =>
          _library._asyncLocationDisplayAutoPanModeChangedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_LocationHandle)>>
      get asyncLocationDisplayLocationChangedEvent =>
          _library._asyncLocationDisplayLocationChangedEventPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Bool)>>
      get asyncLocationDisplayStatusChangedEvent =>
          _library._asyncLocationDisplayStatusChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncMapViewRotationChangedEvent =>
          _library._asyncMapViewRotationChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncMapViewScaleChangedEvent =>
          _library._asyncMapViewScaleChangedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEvent =>
          _library._asyncOfflineMapTaskEnsureOnlineMapHasRequestHandlerEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncPortalInfoEvent => _library._asyncPortalInfoEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncRequestCancelRequestEvent =>
          _library._asyncRequestCancelRequestEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_RequestHandle)>>
      get asyncRequestRequestRequiredEvent =>
          _library._asyncRequestRequestRequiredEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncFutureCompletedEvent => _library._asyncFutureCompletedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get asyncTimeAwareFullTimeExtentChangedEvent =>
          _library._asyncTimeAwareFullTimeExtentChangedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, ffi.Size, imp1.RT_ElementHandle)>>
      get asyncMutableArrayElementAddedEvent =>
          _library._asyncMutableArrayElementAddedEventPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, ffi.Size, imp1.RT_ElementHandle)>>
      get asyncMutableArrayElementRemovedEvent =>
          _library._asyncMutableArrayElementRemovedEventPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>
      get buildLabel => _library._buildLabelPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Bool)>>
      get setTrackingEnabled => _library._setTrackingEnabledPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Bool Function()>> get trackingEnabled =>
      _library._trackingEnabledPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int32)>>
      get trackedCount => _library._trackedCountPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_AddRastersParametersHandle)>>
      get AddRastersParameters_created =>
          _library._AddRastersParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AddRastersParameters_destroy =>
          _library._AddRastersParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_AdvancedQueryCapabilitiesHandle)>>
      get AdvancedQueryCapabilities_created =>
          _library._AdvancedQueryCapabilities_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AdvancedQueryCapabilities_destroy =>
          _library._AdvancedQueryCapabilities_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_AggregateFieldHandle)>>
      get AggregateField_created => _library._AggregateField_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AggregateField_destroy => _library._AggregateField_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_AggregateGeoElementHandle)>>
      get AggregateGeoElement_created =>
          _library._AggregateGeoElement_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AggregateGeoElement_destroy =>
          _library._AggregateGeoElement_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_AnalysisOverlayHandle)>>
      get AnalysisOverlay_created => _library._AnalysisOverlay_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AnalysisOverlay_destroy => _library._AnalysisOverlay_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AnalysisOverlay_destroyInstance =>
          _library._AnalysisOverlay_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_AnalysisHandle)>>
      get Analysis_created => _library._Analysis_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Analysis_destroy => _library._Analysis_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Analysis_destroyInstance => _library._Analysis_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_AnnotationSublayerHandle)>>
      get AnnotationSublayer_created => _library._AnnotationSublayer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AnnotationSublayer_destroy => _library._AnnotationSublayer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AnnotationSublayer_destroyInstance =>
          _library._AnnotationSublayer_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISAuthenticationChallengeHandle)>>
      get ArcGISAuthenticationChallenge_created =>
          _library._ArcGISAuthenticationChallenge_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISAuthenticationChallenge_destroy =>
          _library._ArcGISAuthenticationChallenge_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISCredentialStoreHandle)>>
      get ArcGISCredentialStore_created =>
          _library._ArcGISCredentialStore_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISCredentialStore_destroy =>
          _library._ArcGISCredentialStore_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcGISCredentialHandle)>>
      get ArcGISCredential_created => _library._ArcGISCredential_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISCredential_destroy => _library._ArcGISCredential_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISFeatureLayerInfoHandle)>>
      get ArcGISFeatureLayerInfo_created =>
          _library._ArcGISFeatureLayerInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISFeatureLayerInfo_destroy =>
          _library._ArcGISFeatureLayerInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISFeatureServiceInfoHandle)>>
      get ArcGISFeatureServiceInfo_created =>
          _library._ArcGISFeatureServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISFeatureServiceInfo_destroy =>
          _library._ArcGISFeatureServiceInfo_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_ArcGISImageServiceInfoHandle)>>
      get ArcGISImageServiceInfo_created =>
          _library._ArcGISImageServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISImageServiceInfo_destroy =>
          _library._ArcGISImageServiceInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISMapServiceInfoHandle)>>
      get ArcGISMapServiceInfo_created =>
          _library._ArcGISMapServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISMapServiceInfo_destroy =>
          _library._ArcGISMapServiceInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcGISMapServiceSublayerInfoHandle)>>
      get ArcGISMapServiceSublayerInfo_created =>
          _library._ArcGISMapServiceSublayerInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISMapServiceSublayerInfo_destroy =>
          _library._ArcGISMapServiceSublayerInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_ArcGISStreamServiceFilterHandle)>>
      get ArcGISStreamServiceFilter_created =>
          _library._ArcGISStreamServiceFilter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISStreamServiceFilter_destroy =>
          _library._ArcGISStreamServiceFilter_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_ArcGISStreamServiceInfoHandle)>>
      get ArcGISStreamServiceInfo_created =>
          _library._ArcGISStreamServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISStreamServiceInfo_destroy =>
          _library._ArcGISStreamServiceInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcGISSublayerHandle)>>
      get ArcGISSublayer_created => _library._ArcGISSublayer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISSublayer_destroy => _library._ArcGISSublayer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISSublayer_destroyInstance =>
          _library._ArcGISSublayer_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcGISTokenInfoHandle)>>
      get ArcGISTokenInfo_created => _library._ArcGISTokenInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcGISTokenInfo_destroy => _library._ArcGISTokenInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcadeConsoleMessageContextHandle)>>
      get ArcadeConsoleMessageContext_created =>
          _library._ArcadeConsoleMessageContext_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeConsoleMessageContext_destroy =>
          _library._ArcadeConsoleMessageContext_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeDateOnlyHandle)>>
      get ArcadeDateOnly_created => _library._ArcadeDateOnly_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeDateOnly_destroy => _library._ArcadeDateOnly_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeDateTimeHandle)>>
      get ArcadeDateTime_created => _library._ArcadeDateTime_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeDateTime_destroy => _library._ArcadeDateTime_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ArcadeEvaluationResultHandle)>>
      get ArcadeEvaluationResult_created =>
          _library._ArcadeEvaluationResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeEvaluationResult_destroy =>
          _library._ArcadeEvaluationResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_ArcadeEvaluatorHandle)>>
      get ArcadeEvaluator_created => _library._ArcadeEvaluator_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeEvaluator_destroy => _library._ArcadeEvaluator_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeExpressionHandle)>>
      get ArcadeExpression_created => _library._ArcadeExpression_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeExpression_destroy => _library._ArcadeExpression_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_ArcadeMonikerizationArgumentsHandle)>>
      get ArcadeMonikerizationArguments_created =>
          _library._ArcadeMonikerizationArguments_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeMonikerizationArguments_destroy =>
          _library._ArcadeMonikerizationArguments_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_ArcadeMonikerizationResultHandle)>>
      get ArcadeMonikerizationResult_created =>
          _library._ArcadeMonikerizationResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeMonikerizationResult_destroy =>
          _library._ArcadeMonikerizationResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeResourceHandle)>>
      get ArcadeResource_created => _library._ArcadeResource_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeResource_destroy => _library._ArcadeResource_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_ArcadeScriptEngineHandle)>>
      get ArcadeScriptEngine_created => _library._ArcadeScriptEngine_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeScriptEngine_destroy => _library._ArcadeScriptEngine_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_ArcadeScriptMonikerizerHandle)>>
      get ArcadeScriptMonikerizer_created =>
          _library._ArcadeScriptMonikerizer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeScriptMonikerizer_destroy =>
          _library._ArcadeScriptMonikerizer_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ArcadeTimeOnlyHandle)>>
      get ArcadeTimeOnly_created => _library._ArcadeTimeOnly_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeTimeOnly_destroy => _library._ArcadeTimeOnly_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_ArcadeTimezoneHandle)>>
      get ArcadeTimezone_created => _library._ArcadeTimezone_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArcadeTimezone_destroy => _library._ArcadeTimezone_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ArrayBuilderHandle)>>
      get ArrayBuilder_created => _library._ArrayBuilder_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ArrayBuilder_destroy => _library._ArrayBuilder_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ArrayHandle)>>
      get Array_created => _library._Array_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Array_destroy => _library._Array_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_AttachmentHandle)>>
      get Attachment_created => _library._Attachment_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Attachment_destroy => _library._Attachment_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_AttachmentsFormInputHandle)>>
      get AttachmentsFormInput_created =>
          _library._AttachmentsFormInput_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AttachmentsFormInput_destroy =>
          _library._AttachmentsFormInput_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_AttributeParameterValueHandle)>>
      get AttributeParameterValue_created =>
          _library._AttributeParameterValue_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AttributeParameterValue_destroy =>
          _library._AttributeParameterValue_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_AuthenticationManagerHandle)>>
      get AuthenticationManager_created =>
          _library._AuthenticationManager_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get AuthenticationManager_destroy =>
          _library._AuthenticationManager_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_BackgroundGridHandle)>>
      get BackgroundGrid_created => _library._BackgroundGrid_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BackgroundGrid_destroy => _library._BackgroundGrid_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_BasemapStyleInfoHandle)>>
      get BasemapStyleInfo_created => _library._BasemapStyleInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BasemapStyleInfo_destroy => _library._BasemapStyleInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStyleLanguageInfoHandle)>>
      get BasemapStyleLanguageInfo_created =>
          _library._BasemapStyleLanguageInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BasemapStyleLanguageInfo_destroy =>
          _library._BasemapStyleLanguageInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStyleParametersHandle)>>
      get BasemapStyleParameters_created =>
          _library._BasemapStyleParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BasemapStyleParameters_destroy =>
          _library._BasemapStyleParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStylesServiceInfoHandle)>>
      get BasemapStylesServiceInfo_created =>
          _library._BasemapStylesServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BasemapStylesServiceInfo_destroy =>
          _library._BasemapStylesServiceInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BasemapStylesServiceHandle)>>
      get BasemapStylesService_created =>
          _library._BasemapStylesService_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BasemapStylesService_destroy =>
          _library._BasemapStylesService_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_BasemapHandle)>>
      get Basemap_created => _library._Basemap_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Basemap_destroy => _library._Basemap_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Basemap_destroyInstance => _library._Basemap_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_BookmarkHandle)>>
      get Bookmark_created => _library._Bookmark_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Bookmark_destroy => _library._Bookmark_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_BuildingAttributeFilterCollectionHandle)>>
      get BuildingAttributeFilterCollection_created =>
          _library._BuildingAttributeFilterCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BuildingAttributeFilterCollection_destroy =>
          _library._BuildingAttributeFilterCollection_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_BuildingAttributeFilterHandle)>>
      get BuildingAttributeFilter_created =>
          _library._BuildingAttributeFilter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get BuildingAttributeFilter_destroy =>
          _library._BuildingAttributeFilter_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ByteArrayHandle)>>
      get ByteArray_created => _library._ByteArray_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ByteArray_destroy => _library._ByteArray_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_CameraControllerHandle)>>
      get CameraController_created => _library._CameraController_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get CameraController_destroy => _library._CameraController_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_CameraHandle)>>
      get Camera_created => _library._Camera_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Camera_destroy => _library._Camera_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_CertificateHandle)>>
      get Certificate_created => _library._Certificate_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Certificate_destroy => _library._Certificate_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ChartImageParametersHandle)>>
      get ChartImageParameters_created =>
          _library._ChartImageParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ChartImageParameters_destroy =>
          _library._ChartImageParameters_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ChartImageHandle)>>
      get ChartImage_created => _library._ChartImage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ChartImage_destroy => _library._ChartImage_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ClassBreakHandle)>>
      get ClassBreak_created => _library._ClassBreak_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClassBreak_destroy => _library._ClassBreak_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClassBreak_destroyInstance => _library._ClassBreak_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ClientReferenceHandle)>>
      get ClientReference_created => _library._ClientReference_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClientReference_destroy => _library._ClientReference_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ClientRequestSenderHandle)>>
      get ClientRequestSender_created =>
          _library._ClientRequestSender_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClientRequestSender_destroy =>
          _library._ClientRequestSender_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ClientResponseHandle)>>
      get ClientResponse_created => _library._ClientResponse_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClientResponse_destroy => _library._ClientResponse_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_ClientSecurityProviderAdapterHandle)>>
      get ClientSecurityProviderAdapter_created =>
          _library._ClientSecurityProviderAdapter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClientSecurityProviderAdapter_destroy =>
          _library._ClientSecurityProviderAdapter_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityParametersHandle)>>
      get ClosestFacilityParameters_created =>
          _library._ClosestFacilityParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClosestFacilityParameters_destroy =>
          _library._ClosestFacilityParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityResultHandle)>>
      get ClosestFacilityResult_created =>
          _library._ClosestFacilityResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClosestFacilityResult_destroy =>
          _library._ClosestFacilityResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityRouteHandle)>>
      get ClosestFacilityRoute_created =>
          _library._ClosestFacilityRoute_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClosestFacilityRoute_destroy =>
          _library._ClosestFacilityRoute_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ClosestFacilityTaskInfoHandle)>>
      get ClosestFacilityTaskInfo_created =>
          _library._ClosestFacilityTaskInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClosestFacilityTaskInfo_destroy =>
          _library._ClosestFacilityTaskInfo_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ClosestFacilityTaskHandle)>>
      get ClosestFacilityTask_created =>
          _library._ClosestFacilityTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ClosestFacilityTask_destroy =>
          _library._ClosestFacilityTask_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_CodedValueDescriptionHandle)>>
      get CodedValueDescription_created =>
          _library._CodedValueDescription_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get CodedValueDescription_destroy =>
          _library._CodedValueDescription_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_CodedValueHandle)>>
      get CodedValue_created => _library._CodedValue_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get CodedValue_destroy => _library._CodedValue_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_ColorRampHandle)>>
      get ColorRamp_created => _library._ColorRamp_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ColorRamp_destroy => _library._ColorRamp_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ColorHandle)>>
      get Color_created => _library._Color_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Color_destroy => _library._Color_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_ColormapHandle)>>
      get Colormap_created => _library._Colormap_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Colormap_destroy => _library._Colormap_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ContingencyConstraintViolationHandle)>>
      get ContingencyConstraintViolation_created =>
          _library._ContingencyConstraintViolation_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ContingencyConstraintViolation_destroy =>
          _library._ContingencyConstraintViolation_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ContingencyHandle)>>
      get Contingency_created => _library._Contingency_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Contingency_destroy => _library._Contingency_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ContingentValueHandle)>>
      get ContingentValue_created => _library._ContingentValue_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ContingentValue_destroy => _library._ContingentValue_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ContingentValue_destroyInstance =>
          _library._ContingentValue_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ContingentValuesDefinitionHandle)>>
      get ContingentValuesDefinition_created =>
          _library._ContingentValuesDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ContingentValuesDefinition_destroy =>
          _library._ContingentValuesDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ContingentValuesResultHandle)>>
      get ContingentValuesResult_created =>
          _library._ContingentValuesResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ContingentValuesResult_destroy =>
          _library._ContingentValuesResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_CostAttributeHandle)>>
      get CostAttribute_created => _library._CostAttribute_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get CostAttribute_destroy => _library._CostAttribute_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_DataBufferHandle)>>
      get DataBuffer_created => _library._DataBuffer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DataBuffer_destroy => _library._DataBuffer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_DateOnlyHandle)>>
      get DateOnly_created => _library._DateOnly_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DateOnly_destroy => _library._DateOnly_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_DateTimeHandle)>>
      get DateTime_created => _library._DateTime_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DateTime_destroy => _library._DateTime_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_DatumTransformationHandle)>>
      get DatumTransformation_created =>
          _library._DatumTransformation_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DatumTransformation_destroy =>
          _library._DatumTransformation_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_DeviceHandle)>>
      get Device_created => _library._Device_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Device_destroy => _library._Device_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_DictionarySymbolStyleConfigurationHandle)>>
      get DictionarySymbolStyleConfiguration_created =>
          _library._DictionarySymbolStyleConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DictionarySymbolStyleConfiguration_destroy =>
          _library._DictionarySymbolStyleConfiguration_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_DictionaryHandle)>>
      get Dictionary_created => _library._Dictionary_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Dictionary_destroy => _library._Dictionary_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_DirectionEventHandle)>>
      get DirectionEvent_created => _library._DirectionEvent_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DirectionEvent_destroy => _library._DirectionEvent_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_DirectionManeuverHandle)>>
      get DirectionManeuver_created => _library._DirectionManeuver_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DirectionManeuver_destroy => _library._DirectionManeuver_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_DirectionMessageHandle)>>
      get DirectionMessage_created => _library._DirectionMessage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DirectionMessage_destroy => _library._DirectionMessage_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DisplayFilterDefinitionHandle)>>
      get DisplayFilterDefinition_created =>
          _library._DisplayFilterDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DisplayFilterDefinition_destroy =>
          _library._DisplayFilterDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_DisplayFilterHandle)>>
      get DisplayFilter_created => _library._DisplayFilter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DisplayFilter_destroy => _library._DisplayFilter_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DisplayFilter_destroyInstance =>
          _library._DisplayFilter_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_DistanceSymbolRangeHandle)>>
      get DistanceSymbolRange_created =>
          _library._DistanceSymbolRange_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DistanceSymbolRange_destroy =>
          _library._DistanceSymbolRange_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_DistanceHandle)>>
      get Distance_created => _library._Distance_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Distance_destroy => _library._Distance_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_DomainDescriptionHandle)>>
      get DomainDescription_created => _library._DomainDescription_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DomainDescription_destroy => _library._DomainDescription_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_DomainHandle)>>
      get Domain_created => _library._Domain_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Domain_destroy => _library._Domain_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_DownloadPreplannedOfflineMapParametersHandle)>>
      get DownloadPreplannedOfflineMapParameters_created =>
          _library._DownloadPreplannedOfflineMapParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DownloadPreplannedOfflineMapParameters_destroy =>
          _library._DownloadPreplannedOfflineMapParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_DownloadPreplannedOfflineMapResultHandle)>>
      get DownloadPreplannedOfflineMapResult_created =>
          _library._DownloadPreplannedOfflineMapResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DownloadPreplannedOfflineMapResult_destroy =>
          _library._DownloadPreplannedOfflineMapResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_DrawingInfoHandle)>>
      get DrawingInfo_created => _library._DrawingInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DrawingInfo_destroy => _library._DrawingInfo_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_DynamicEntityChangedInfoHandle)>>
      get DynamicEntityChangedInfo_created =>
          _library._DynamicEntityChangedInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityChangedInfo_destroy =>
          _library._DynamicEntityChangedInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_DynamicEntityDataSourceInfoHandle)>>
      get DynamicEntityDataSourceInfo_created =>
          _library._DynamicEntityDataSourceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityDataSourceInfo_destroy =>
          _library._DynamicEntityDataSourceInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_DynamicEntityDataSourcePurgeOptionsHandle)>>
      get DynamicEntityDataSourcePurgeOptions_created =>
          _library._DynamicEntityDataSourcePurgeOptions_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityDataSourcePurgeOptions_destroy =>
          _library._DynamicEntityDataSourcePurgeOptions_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DynamicEntityDataSourceHandle)>>
      get DynamicEntityDataSource_created =>
          _library._DynamicEntityDataSource_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityDataSource_destroy =>
          _library._DynamicEntityDataSource_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityDataSource_destroyInstance =>
          _library._DynamicEntityDataSource_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_DynamicEntityInfoHandle)>>
      get DynamicEntityInfo_created => _library._DynamicEntityInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityInfo_destroy => _library._DynamicEntityInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_DynamicEntityObservationInfoHandle)>>
      get DynamicEntityObservationInfo_created =>
          _library._DynamicEntityObservationInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityObservationInfo_destroy =>
          _library._DynamicEntityObservationInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_DynamicEntityObservationHandle)>>
      get DynamicEntityObservation_created =>
          _library._DynamicEntityObservation_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntityObservation_destroy =>
          _library._DynamicEntityObservation_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_DynamicEntityHandle)>>
      get DynamicEntity_created => _library._DynamicEntity_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntity_destroy => _library._DynamicEntity_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get DynamicEntity_destroyInstance =>
          _library._DynamicEntity_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ENCCellHandle)>>
      get ENCCell_created => _library._ENCCell_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCCell_destroy => _library._ENCCell_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ENCDatasetHandle)>>
      get ENCDataset_created => _library._ENCDataset_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCDataset_destroy => _library._ENCDataset_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_ENCDisplayCategoriesHandle)>>
      get ENCDisplayCategories_created =>
          _library._ENCDisplayCategories_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCDisplayCategories_destroy =>
          _library._ENCDisplayCategories_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_ENCDisplaySettingsHandle)>>
      get ENCDisplaySettings_created => _library._ENCDisplaySettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCDisplaySettings_destroy => _library._ENCDisplaySettings_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ENCEnvironmentSettingsHandle)>>
      get ENCEnvironmentSettings_created =>
          _library._ENCEnvironmentSettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCEnvironmentSettings_destroy =>
          _library._ENCEnvironmentSettings_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_ENCExchangeSetHandle)>>
      get ENCExchangeSet_created => _library._ENCExchangeSet_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCExchangeSet_destroy => _library._ENCExchangeSet_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ENCFeatureHandle)>>
      get ENCFeature_created => _library._ENCFeature_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCFeature_destroy => _library._ENCFeature_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_ENCGraphicCursorHandle)>>
      get ENCGraphicCursor_created => _library._ENCGraphicCursor_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCGraphicCursor_destroy => _library._ENCGraphicCursor_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_ENCMarinerSettingsHandle)>>
      get ENCMarinerSettings_created => _library._ENCMarinerSettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCMarinerSettings_destroy => _library._ENCMarinerSettings_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_ENCTextGroupVisibilitySettingsHandle)>>
      get ENCTextGroupVisibilitySettings_created =>
          _library._ENCTextGroupVisibilitySettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCTextGroupVisibilitySettings_destroy =>
          _library._ENCTextGroupVisibilitySettings_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_ENCViewingGroupSettingsHandle)>>
      get ENCViewingGroupSettings_created =>
          _library._ENCViewingGroupSettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ENCViewingGroupSettings_destroy =>
          _library._ENCViewingGroupSettings_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_EditFieldsInfoHandle)>>
      get EditFieldsInfo_created => _library._EditFieldsInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get EditFieldsInfo_destroy => _library._EditFieldsInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_EditResultHandle)>>
      get EditResult_created => _library._EditResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get EditResult_destroy => _library._EditResult_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_EditorTrackingInfoHandle)>>
      get EditorTrackingInfo_created => _library._EditorTrackingInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get EditorTrackingInfo_destroy => _library._EditorTrackingInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ElementReferenceHandle)>>
      get ElementReference_created => _library._ElementReference_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ElementReference_destroy => _library._ElementReference_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ElementHandle)>>
      get Element_created => _library._Element_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Element_destroy => _library._Element_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ElevationSourceViewStateHandle)>>
      get ElevationSourceViewState_created =>
          _library._ElevationSourceViewState_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ElevationSourceViewState_destroy =>
          _library._ElevationSourceViewState_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ElevationSourceHandle)>>
      get ElevationSource_created => _library._ElevationSource_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ElevationSource_destroy => _library._ElevationSource_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ElevationSource_destroyInstance =>
          _library._ElevationSource_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ErrorHandle)>>
      get Error_created => _library._Error_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Error_destroy => _library._Error_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_EstimateTileCacheSizeResultHandle)>>
      get EstimateTileCacheSizeResult_created =>
          _library._EstimateTileCacheSizeResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get EstimateTileCacheSizeResult_destroy =>
          _library._EstimateTileCacheSizeResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ExpirationHandle)>>
      get Expiration_created => _library._Expiration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Expiration_destroy => _library._Expiration_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportTileCacheParametersHandle)>>
      get ExportTileCacheParameters_created =>
          _library._ExportTileCacheParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExportTileCacheParameters_destroy =>
          _library._ExportTileCacheParameters_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExportTileCacheParameters_destroyInstance =>
          _library._ExportTileCacheParameters_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ExportTileCacheTaskHandle)>>
      get ExportTileCacheTask_created =>
          _library._ExportTileCacheTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExportTileCacheTask_destroy =>
          _library._ExportTileCacheTask_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportVectorTilesParametersHandle)>>
      get ExportVectorTilesParameters_created =>
          _library._ExportVectorTilesParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExportVectorTilesParameters_destroy =>
          _library._ExportVectorTilesParameters_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExportVectorTilesParameters_destroyInstance =>
          _library._ExportVectorTilesParameters_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportVectorTilesResultHandle)>>
      get ExportVectorTilesResult_created =>
          _library._ExportVectorTilesResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExportVectorTilesResult_destroy =>
          _library._ExportVectorTilesResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ExportVectorTilesTaskHandle)>>
      get ExportVectorTilesTask_created =>
          _library._ExportVectorTilesTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExportVectorTilesTask_destroy =>
          _library._ExportVectorTilesTask_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_ExpressionQueryResultHandle)>>
      get ExpressionQueryResult_created =>
          _library._ExpressionQueryResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExpressionQueryResult_destroy =>
          _library._ExpressionQueryResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ExtensionLicenseHandle)>>
      get ExtensionLicense_created => _library._ExtensionLicense_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ExtensionLicense_destroy => _library._ExtensionLicense_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_FacilityLayerDefinitionHandle)>>
      get FacilityLayerDefinition_created =>
          _library._FacilityLayerDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FacilityLayerDefinition_destroy =>
          _library._FacilityLayerDefinition_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FacilityHandle)>>
      get Facility_created => _library._Facility_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Facility_destroy => _library._Facility_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_FeatureCollectionHandle)>>
      get FeatureCollection_created => _library._FeatureCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureCollection_destroy => _library._FeatureCollection_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FeatureFormDefinitionHandle)>>
      get FeatureFormDefinition_created =>
          _library._FeatureFormDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureFormDefinition_destroy =>
          _library._FeatureFormDefinition_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_FeatureFormHandle)>>
      get FeatureForm_created => _library._FeatureForm_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureForm_destroy => _library._FeatureForm_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_FeatureQueryResultHandle)>>
      get FeatureQueryResult_created => _library._FeatureQueryResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureQueryResult_destroy => _library._FeatureQueryResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureReductionHandle)>>
      get FeatureReduction_created => _library._FeatureReduction_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureReduction_destroy => _library._FeatureReduction_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FeatureServiceCapabilitiesHandle)>>
      get FeatureServiceCapabilities_created =>
          _library._FeatureServiceCapabilities_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureServiceCapabilities_destroy =>
          _library._FeatureServiceCapabilities_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureSubtypeHandle)>>
      get FeatureSubtype_created => _library._FeatureSubtype_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureSubtype_destroy => _library._FeatureSubtype_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FeatureTableEditResultHandle)>>
      get FeatureTableEditResult_created =>
          _library._FeatureTableEditResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureTableEditResult_destroy =>
          _library._FeatureTableEditResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureTableHandle)>>
      get FeatureTable_created => _library._FeatureTable_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureTable_destroy => _library._FeatureTable_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureTable_destroyInstance =>
          _library._FeatureTable_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureTemplateHandle)>>
      get FeatureTemplate_created => _library._FeatureTemplate_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureTemplate_destroy => _library._FeatureTemplate_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureTypeHandle)>>
      get FeatureType_created => _library._FeatureType_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FeatureType_destroy => _library._FeatureType_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FeatureHandle)>>
      get Feature_created => _library._Feature_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Feature_destroy => _library._Feature_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Feature_destroyInstance => _library._Feature_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_FenceParametersHandle)>>
      get FenceParameters_created => _library._FenceParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FenceParameters_destroy => _library._FenceParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FieldDescriptionHandle)>>
      get FieldDescription_created => _library._FieldDescription_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FieldDescription_destroy => _library._FieldDescription_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FieldGroupHandle)>>
      get FieldGroup_created => _library._FieldGroup_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FieldGroup_destroy => _library._FieldGroup_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FieldHandle)>>
      get Field_created => _library._Field_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Field_destroy => _library._Field_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorFacilityHandle)>>
      get FloorFacility_created => _library._FloorFacility_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorFacility_destroy => _library._FloorFacility_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorFacility_destroyInstance =>
          _library._FloorFacility_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorLevelHandle)>>
      get FloorLevel_created => _library._FloorLevel_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorLevel_destroy => _library._FloorLevel_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorLevel_destroyInstance => _library._FloorLevel_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorManagerHandle)>>
      get FloorManager_created => _library._FloorManager_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorManager_destroy => _library._FloorManager_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorManager_destroyInstance =>
          _library._FloorManager_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FloorSiteHandle)>>
      get FloorSite_created => _library._FloorSite_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorSite_destroy => _library._FloorSite_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FloorSite_destroyInstance => _library._FloorSite_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_FormAttachmentHandle)>>
      get FormAttachment_created => _library._FormAttachment_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FormAttachment_destroy => _library._FormAttachment_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FormAttachment_destroyInstance =>
          _library._FormAttachment_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FormElementDefinitionHandle)>>
      get FormElementDefinition_created =>
          _library._FormElementDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FormElementDefinition_destroy =>
          _library._FormElementDefinition_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_FormElementHandle)>>
      get FormElement_created => _library._FormElement_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FormElement_destroy => _library._FormElement_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FormElement_destroyInstance =>
          _library._FormElement_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_FormExpressionEvaluationErrorHandle)>>
      get FormExpressionEvaluationError_created =>
          _library._FormExpressionEvaluationError_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FormExpressionEvaluationError_destroy =>
          _library._FormExpressionEvaluationError_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_FormInputHandle)>>
      get FormInput_created => _library._FormInput_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get FormInput_destroy => _library._FormInput_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GEAttributeProcessorHandle)>>
      get GEAttributeProcessor_created =>
          _library._GEAttributeProcessor_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEAttributeProcessor_destroy =>
          _library._GEAttributeProcessor_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GEAttributeHandle)>>
      get GEAttribute_created => _library._GEAttribute_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEAttribute_destroy => _library._GEAttribute_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEAuthenticationChallengeHandle)>>
      get GEAuthenticationChallenge_created =>
          _library._GEAuthenticationChallenge_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEAuthenticationChallenge_destroy =>
          _library._GEAuthenticationChallenge_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GEAuthenticationConfigurationHandle)>>
      get GEAuthenticationConfiguration_created =>
          _library._GEAuthenticationConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEAuthenticationConfiguration_destroy =>
          _library._GEAuthenticationConfiguration_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEBasemapHandle)>>
      get GEBasemap_created => _library._GEBasemap_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEBasemap_destroy => _library._GEBasemap_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_GEBuildingSceneLayerAttributeStatisticsHandle)>>
      get GEBuildingSceneLayerAttributeStatistics_created =>
          _library._GEBuildingSceneLayerAttributeStatistics_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEBuildingSceneLayerAttributeStatistics_destroy =>
          _library._GEBuildingSceneLayerAttributeStatistics_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  RT_GEBuildingSceneSublayerImmutableCollectionHandle)>>
      get GEBuildingSceneSublayerImmutableCollection_created =>
          _library._GEBuildingSceneSublayerImmutableCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEBuildingSceneSublayerImmutableCollection_destroy =>
          _library._GEBuildingSceneSublayerImmutableCollection_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_GEBuildingSceneSublayerHandle)>>
      get GEBuildingSceneSublayer_created =>
          _library._GEBuildingSceneSublayer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEBuildingSceneSublayer_destroy =>
          _library._GEBuildingSceneSublayer_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GEElevationMonitorHandle)>>
      get GEElevationMonitor_created => _library._GEElevationMonitor_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEElevationMonitor_destroy => _library._GEElevationMonitor_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GEElevationProviderHandle)>>
      get GEElevationProvider_created =>
          _library._GEElevationProvider_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEElevationProvider_destroy =>
          _library._GEElevationProvider_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEElevationSourceCollectionHandle)>>
      get GEElevationSourceCollection_created =>
          _library._GEElevationSourceCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEElevationSourceCollection_destroy =>
          _library._GEElevationSourceCollection_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEElevationSourceViewStateHandle)>>
      get GEElevationSourceViewState_created =>
          _library._GEElevationSourceViewState_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEElevationSourceViewState_destroy =>
          _library._GEElevationSourceViewState_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEElevationSourceHandle)>>
      get GEElevationSource_created => _library._GEElevationSource_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEElevationSource_destroy => _library._GEElevationSource_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEExtentHandle)>>
      get GEExtent_created => _library._GEExtent_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEExtent_destroy => _library._GEExtent_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEHTTPRequestHandle)>>
      get GEHTTPRequest_created => _library._GEHTTPRequest_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEHTTPRequest_destroy => _library._GEHTTPRequest_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEHTTPResponseHandle)>>
      get GEHTTPResponse_created => _library._GEHTTPResponse_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEHTTPResponse_destroy => _library._GEHTTPResponse_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GELayerCollectionHandle)>>
      get GELayerCollection_created => _library._GELayerCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GELayerCollection_destroy => _library._GELayerCollection_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GELayerViewStateHandle)>>
      get GELayerViewState_created => _library._GELayerViewState_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GELayerViewState_destroy => _library._GELayerViewState_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GELayerHandle)>>
      get GELayer_created => _library._GELayer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GELayer_destroy => _library._GELayer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEMapElevationHandle)>>
      get GEMapElevation_created => _library._GEMapElevation_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEMapElevation_destroy => _library._GEMapElevation_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEMapHandle)>>
      get GEMap_created => _library._GEMap_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEMap_destroy => _library._GEMap_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEMeshModificationCollectionHandle)>>
      get GEMeshModificationCollection_created =>
          _library._GEMeshModificationCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEMeshModificationCollection_destroy =>
          _library._GEMeshModificationCollection_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GEMeshModificationHandle)>>
      get GEMeshModification_created => _library._GEMeshModification_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEMeshModification_destroy => _library._GEMeshModification_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_GEOAuthAuthorizationCredentialHandle)>>
      get GEOAuthAuthorizationCredential_created =>
          _library._GEOAuthAuthorizationCredential_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEOAuthAuthorizationCredential_destroy =>
          _library._GEOAuthAuthorizationCredential_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_GESpatialFeatureFilterHandle)>>
      get GESpatialFeatureFilter_created =>
          _library._GESpatialFeatureFilter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GESpatialFeatureFilter_destroy =>
          _library._GESpatialFeatureFilter_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GEViewStateMessageHandle)>>
      get GEViewStateMessage_created => _library._GEViewStateMessage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEViewStateMessage_destroy => _library._GEViewStateMessage_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEViewStateHandle)>>
      get GEViewState_created => _library._GEViewState_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEViewState_destroy => _library._GEViewState_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GEViewHandle)>>
      get GEView_created => _library._GEView_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEView_destroy => _library._GEView_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_GEVisualizationAttributeDescriptionHandle)>>
      get GEVisualizationAttributeDescription_created =>
          _library._GEVisualizationAttributeDescription_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEVisualizationAttributeDescription_destroy =>
          _library._GEVisualizationAttributeDescription_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GEVisualizationAttributeHandle)>>
      get GEVisualizationAttribute_created =>
          _library._GEVisualizationAttribute_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GEVisualizationAttribute_destroy =>
          _library._GEVisualizationAttribute_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GUIDHandle)>>
      get GUID_created => _library._GUID_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GUID_destroy => _library._GUID_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GenerateGeodatabaseParametersHandle)>>
      get GenerateGeodatabaseParameters_created =>
          _library._GenerateGeodatabaseParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GenerateGeodatabaseParameters_destroy =>
          _library._GenerateGeodatabaseParameters_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GenerateGeodatabaseParameters_destroyInstance =>
          _library._GenerateGeodatabaseParameters_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_GenerateLayerOptionHandle)>>
      get GenerateLayerOption_created =>
          _library._GenerateLayerOption_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GenerateLayerOption_destroy =>
          _library._GenerateLayerOption_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_GenerateOfflineMapParameterOverridesHandle)>>
      get GenerateOfflineMapParameterOverrides_created =>
          _library._GenerateOfflineMapParameterOverrides_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GenerateOfflineMapParameterOverrides_destroy =>
          _library._GenerateOfflineMapParameterOverrides_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GenerateOfflineMapParametersHandle)>>
      get GenerateOfflineMapParameters_created =>
          _library._GenerateOfflineMapParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GenerateOfflineMapParameters_destroy =>
          _library._GenerateOfflineMapParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GenerateOfflineMapResultHandle)>>
      get GenerateOfflineMapResult_created =>
          _library._GenerateOfflineMapResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GenerateOfflineMapResult_destroy =>
          _library._GenerateOfflineMapResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoModelFloorDefinitionHandle)>>
      get GeoModelFloorDefinition_created =>
          _library._GeoModelFloorDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoModelFloorDefinition_destroy =>
          _library._GeoModelFloorDefinition_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeoModelHandle)>>
      get GeoModel_created => _library._GeoModel_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoModel_destroy => _library._GeoModel_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoModel_destroyInstance => _library._GeoModel_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeoPackageHandle)>>
      get GeoPackage_created => _library._GeoPackage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoPackage_destroy => _library._GeoPackage_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoPackage_destroyInstance => _library._GeoPackage_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeoViewViewStateHandle)>>
      get GeoViewViewState_created => _library._GeoViewViewState_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoViewViewState_destroy => _library._GeoViewViewState_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeoViewHandle)>>
      get GeoView_created => _library._GeoView_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoView_destroy => _library._GeoView_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_GeocodeParametersHandle)>>
      get GeocodeParameters_created => _library._GeocodeParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeocodeParameters_destroy => _library._GeocodeParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeocodeResultHandle)>>
      get GeocodeResult_created => _library._GeocodeResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeocodeResult_destroy => _library._GeocodeResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodatabaseDeltaInfoHandle)>>
      get GeodatabaseDeltaInfo_created =>
          _library._GeodatabaseDeltaInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeodatabaseDeltaInfo_destroy =>
          _library._GeodatabaseDeltaInfo_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_GeodatabaseSyncTaskHandle)>>
      get GeodatabaseSyncTask_created =>
          _library._GeodatabaseSyncTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeodatabaseSyncTask_destroy =>
          _library._GeodatabaseSyncTask_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeodatabaseHandle)>>
      get Geodatabase_created => _library._Geodatabase_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Geodatabase_destroy => _library._Geodatabase_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Geodatabase_destroyInstance =>
          _library._Geodatabase_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodesicEllipseParametersHandle)>>
      get GeodesicEllipseParameters_created =>
          _library._GeodesicEllipseParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeodesicEllipseParameters_destroy =>
          _library._GeodesicEllipseParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodesicSectorParametersHandle)>>
      get GeodesicSectorParameters_created =>
          _library._GeodesicSectorParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeodesicSectorParameters_destroy =>
          _library._GeodesicSectorParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeodeticDistanceResultHandle)>>
      get GeodeticDistanceResult_created =>
          _library._GeodeticDistanceResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeodeticDistanceResult_destroy =>
          _library._GeodeticDistanceResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeographicTransformationStepHandle)>>
      get GeographicTransformationStep_created =>
          _library._GeographicTransformationStep_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeographicTransformationStep_destroy =>
          _library._GeographicTransformationStep_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometricEffectHandle)>>
      get GeometricEffect_created => _library._GeometricEffect_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeometricEffect_destroy => _library._GeometricEffect_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometryBuilderHandle)>>
      get GeometryBuilder_created => _library._GeometryBuilder_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeometryBuilder_destroy => _library._GeometryBuilder_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GeometryEditorElementHandle)>>
      get GeometryEditorElement_created =>
          _library._GeometryEditorElement_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeometryEditorElement_destroy =>
          _library._GeometryEditorElement_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GeometryEditorReticleHandle)>>
      get GeometryEditorReticle_created =>
          _library._GeometryEditorReticle_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeometryEditorReticle_destroy =>
          _library._GeometryEditorReticle_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GeometryEditorStyleHandle)>>
      get GeometryEditorStyle_created =>
          _library._GeometryEditorStyle_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeometryEditorStyle_destroy =>
          _library._GeometryEditorStyle_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GeometryEditorToolHandle)>>
      get GeometryEditorTool_created => _library._GeometryEditorTool_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeometryEditorTool_destroy => _library._GeometryEditorTool_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometryEditorHandle)>>
      get GeometryEditor_created => _library._GeometryEditor_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeometryEditor_destroy => _library._GeometryEditor_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeometryHandle)>>
      get Geometry_created => _library._Geometry_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Geometry_destroy => _library._Geometry_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingFeatureSetHandle)>>
      get GeoprocessingFeatureSet_created =>
          _library._GeoprocessingFeatureSet_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingFeatureSet_destroy =>
          _library._GeoprocessingFeatureSet_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingParameterInfoHandle)>>
      get GeoprocessingParameterInfo_created =>
          _library._GeoprocessingParameterInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingParameterInfo_destroy =>
          _library._GeoprocessingParameterInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingParameterHandle)>>
      get GeoprocessingParameter_created =>
          _library._GeoprocessingParameter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingParameter_destroy =>
          _library._GeoprocessingParameter_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingParameter_destroyInstance =>
          _library._GeoprocessingParameter_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_GeoprocessingParametersHandle)>>
      get GeoprocessingParameters_created =>
          _library._GeoprocessingParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingParameters_destroy =>
          _library._GeoprocessingParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GeoprocessingResultHandle)>>
      get GeoprocessingResult_created =>
          _library._GeoprocessingResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingResult_destroy =>
          _library._GeoprocessingResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_GeoprocessingTaskInfoHandle)>>
      get GeoprocessingTaskInfo_created =>
          _library._GeoprocessingTaskInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingTaskInfo_destroy =>
          _library._GeoprocessingTaskInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GeoprocessingTaskHandle)>>
      get GeoprocessingTask_created => _library._GeoprocessingTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeoprocessingTask_destroy => _library._GeoprocessingTask_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GeotriggerFeedHandle)>>
      get GeotriggerFeed_created => _library._GeotriggerFeed_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeotriggerFeed_destroy => _library._GeotriggerFeed_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_GeotriggerMonitorHandle)>>
      get GeotriggerMonitor_created => _library._GeotriggerMonitor_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeotriggerMonitor_destroy => _library._GeotriggerMonitor_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeotriggerMonitor_destroyInstance =>
          _library._GeotriggerMonitor_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_GeotriggerNotificationInfoHandle)>>
      get GeotriggerNotificationInfo_created =>
          _library._GeotriggerNotificationInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeotriggerNotificationInfo_destroy =>
          _library._GeotriggerNotificationInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GeotriggerHandle)>>
      get Geotrigger_created => _library._Geotrigger_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Geotrigger_destroy => _library._Geotrigger_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Geotrigger_destroyInstance => _library._Geotrigger_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GeotriggersInfoHandle)>>
      get GeotriggersInfo_created => _library._GeotriggersInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GeotriggersInfo_destroy => _library._GeotriggersInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GraphicHandle)>>
      get Graphic_created => _library._Graphic_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Graphic_destroy => _library._Graphic_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Graphic_destroyInstance => _library._Graphic_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_GraphicsOverlayHandle)>>
      get GraphicsOverlay_created => _library._GraphicsOverlay_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GraphicsOverlay_destroy => _library._GraphicsOverlay_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get GraphicsOverlay_destroyInstance =>
          _library._GraphicsOverlay_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_GridHandle)>>
      get Grid_created => _library._Grid_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Grid_destroy => _library._Grid_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_HorizontalVerticalTransformationStepHandle)>>
      get HorizontalVerticalTransformationStep_created =>
          _library._HorizontalVerticalTransformationStep_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get HorizontalVerticalTransformationStep_destroy =>
          _library._HorizontalVerticalTransformationStep_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_IPSInfoMessageHandle)>>
      get IPSInfoMessage_created => _library._IPSInfoMessage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get IPSInfoMessage_destroy => _library._IPSInfoMessage_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_IdInfoHandle)>>
      get IdInfo_created => _library._IdInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get IdInfo_destroy => _library._IdInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_IdentifyGraphicsOverlayResultHandle)>>
      get IdentifyGraphicsOverlayResult_created =>
          _library._IdentifyGraphicsOverlayResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get IdentifyGraphicsOverlayResult_destroy =>
          _library._IdentifyGraphicsOverlayResult_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_IdentifyLayerResultHandle)>>
      get IdentifyLayerResult_created =>
          _library._IdentifyLayerResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get IdentifyLayerResult_destroy =>
          _library._IdentifyLayerResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ImageFrameHandle)>>
      get ImageFrame_created => _library._ImageFrame_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ImageFrame_destroy => _library._ImageFrame_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ImageOverlayHandle)>>
      get ImageOverlay_created => _library._ImageOverlay_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ImageOverlay_destroy => _library._ImageOverlay_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ImageHandle)>>
      get Image_created => _library._Image_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Image_destroy => _library._Image_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ImmutablePartCollectionHandle)>>
      get ImmutablePartCollection_created =>
          _library._ImmutablePartCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ImmutablePartCollection_destroy =>
          _library._ImmutablePartCollection_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ImmutablePartHandle)>>
      get ImmutablePart_created => _library._ImmutablePart_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ImmutablePart_destroy => _library._ImmutablePart_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ImmutablePointCollectionHandle)>>
      get ImmutablePointCollection_created =>
          _library._ImmutablePointCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ImmutablePointCollection_destroy =>
          _library._ImmutablePointCollection_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_IncidentHandle)>>
      get Incident_created => _library._Incident_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Incident_destroy => _library._Incident_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_IndoorPositioningDefinitionHandle)>>
      get IndoorPositioningDefinition_created =>
          _library._IndoorPositioningDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get IndoorPositioningDefinition_destroy =>
          _library._IndoorPositioningDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_IndoorPositioningTableInfoHandle)>>
      get IndoorPositioningTableInfo_created =>
          _library._IndoorPositioningTableInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get IndoorPositioningTableInfo_destroy =>
          _library._IndoorPositioningTableInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  RT_IndoorsLocationDataSourceConfigurationHandle)>>
      get IndoorsLocationDataSourceConfiguration_created =>
          _library._IndoorsLocationDataSourceConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get IndoorsLocationDataSourceConfiguration_destroy =>
          _library._IndoorsLocationDataSourceConfiguration_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_InsetsHandle)>>
      get Insets_created => _library._Insets_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Insets_destroy => _library._Insets_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_InteractionConfigurationHandle)>>
      get InteractionConfiguration_created =>
          _library._InteractionConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get InteractionConfiguration_destroy =>
          _library._InteractionConfiguration_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ItemResourceCacheHandle)>>
      get ItemResourceCache_created => _library._ItemResourceCache_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ItemResourceCache_destroy => _library._ItemResourceCache_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ItemHandle)>>
      get Item_created => _library._Item_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Item_destroy => _library._Item_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Item_destroyInstance => _library._Item_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_IteratorHandle)>>
      get Iterator_created => _library._Iterator_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Iterator_destroy => _library._Iterator_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_JobMessageHandle)>>
      get JobMessage_created => _library._JobMessage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get JobMessage_destroy => _library._JobMessage_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_JobHandle)>>
      get Job_created => _library._Job_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Job_destroy => _library._Job_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Job_destroyInstance => _library._Job_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLAudioPlayerHandle)>>
      get KMLAudioPlayer_created => _library._KMLAudioPlayer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLAudioPlayer_destroy => _library._KMLAudioPlayer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLColorStyleHandle)>>
      get KMLColorStyle_created => _library._KMLColorStyle_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLColorStyle_destroy => _library._KMLColorStyle_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLDatasetHandle)>>
      get KMLDataset_created => _library._KMLDataset_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLDataset_destroy => _library._KMLDataset_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLDataset_destroyInstance => _library._KMLDataset_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLGeometryHandle)>>
      get KMLGeometry_created => _library._KMLGeometry_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLGeometry_destroy => _library._KMLGeometry_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLIconHandle)>>
      get KMLIcon_created => _library._KMLIcon_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLIcon_destroy => _library._KMLIcon_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_KMLImageCoordinateHandle)>>
      get KMLImageCoordinate_created => _library._KMLImageCoordinate_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLImageCoordinate_destroy => _library._KMLImageCoordinate_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLNodeHandle)>>
      get KMLNode_created => _library._KMLNode_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLNode_destroy => _library._KMLNode_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLNode_destroyInstance => _library._KMLNode_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLNonSchemaDataHandle)>>
      get KMLNonSchemaData_created => _library._KMLNonSchemaData_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLNonSchemaData_destroy => _library._KMLNonSchemaData_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLSchemaDataHandle)>>
      get KMLSchemaData_created => _library._KMLSchemaData_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLSchemaData_destroy => _library._KMLSchemaData_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLSchemaHandle)>>
      get KMLSchema_created => _library._KMLSchema_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLSchema_destroy => _library._KMLSchema_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_KMLSimpleFieldHandle)>>
      get KMLSimpleField_created => _library._KMLSimpleField_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLSimpleField_destroy => _library._KMLSimpleField_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLStyleHandle)>>
      get KMLStyle_created => _library._KMLStyle_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLStyle_destroy => _library._KMLStyle_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLTourControllerHandle)>>
      get KMLTourController_created => _library._KMLTourController_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLTourController_destroy => _library._KMLTourController_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLViewInfoHandle)>>
      get KMLViewInfo_created => _library._KMLViewInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLViewInfo_destroy => _library._KMLViewInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_KMLViewpointHandle)>>
      get KMLViewpoint_created => _library._KMLViewpoint_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get KMLViewpoint_destroy => _library._KMLViewpoint_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_LabelAngleHandle)>>
      get LabelAngle_created => _library._LabelAngle_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LabelAngle_destroy => _library._LabelAngle_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LabelDefinitionHandle)>>
      get LabelDefinition_created => _library._LabelDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LabelDefinition_destroy => _library._LabelDefinition_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_LabelExpressionHandle)>>
      get LabelExpression_created => _library._LabelExpression_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LabelExpression_destroy => _library._LabelExpression_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_LabelStackSeparatorHandle)>>
      get LabelStackSeparator_created =>
          _library._LabelStackSeparator_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LabelStackSeparator_destroy =>
          _library._LabelStackSeparator_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LabelingInfoHandle)>>
      get LabelingInfo_created => _library._LabelingInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LabelingInfo_destroy => _library._LabelingInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LayerFloorDefinitionHandle)>>
      get LayerFloorDefinition_created =>
          _library._LayerFloorDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LayerFloorDefinition_destroy =>
          _library._LayerFloorDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LayerScenePropertiesHandle)>>
      get LayerSceneProperties_created =>
          _library._LayerSceneProperties_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LayerSceneProperties_destroy =>
          _library._LayerSceneProperties_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LayerTimeInfoHandle)>>
      get LayerTimeInfo_created => _library._LayerTimeInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LayerTimeInfo_destroy => _library._LayerTimeInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LayerViewStateHandle)>>
      get LayerViewState_created => _library._LayerViewState_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LayerViewState_destroy => _library._LayerViewState_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LayerHandle)>>
      get Layer_created => _library._Layer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Layer_destroy => _library._Layer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Layer_destroyInstance => _library._Layer_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LegendInfoHandle)>>
      get LegendInfo_created => _library._LegendInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LegendInfo_destroy => _library._LegendInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_LevelLayerDefinitionHandle)>>
      get LevelLayerDefinition_created =>
          _library._LevelLayerDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LevelLayerDefinition_destroy =>
          _library._LevelLayerDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LevelOfDetailHandle)>>
      get LevelOfDetail_created => _library._LevelOfDetail_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LevelOfDetail_destroy => _library._LevelOfDetail_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LicenseInfoHandle)>>
      get LicenseInfo_created => _library._LicenseInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LicenseInfo_destroy => _library._LicenseInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LicenseResultHandle)>>
      get LicenseResult_created => _library._LicenseResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LicenseResult_destroy => _library._LicenseResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LicenseHandle)>>
      get License_created => _library._License_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get License_destroy => _library._License_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LightingHandle)>>
      get Lighting_created => _library._Lighting_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Lighting_destroy => _library._Lighting_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LoadSettingsHandle)>>
      get LoadSettings_created => _library._LoadSettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LoadSettings_destroy => _library._LoadSettings_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LoadableImageHandle)>>
      get LoadableImage_created => _library._LoadableImage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LoadableImage_destroy => _library._LoadableImage_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LocalFeatureEditHandle)>>
      get LocalFeatureEdit_created => _library._LocalFeatureEdit_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocalFeatureEdit_destroy => _library._LocalFeatureEdit_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LocalFeatureEditsResultHandle)>>
      get LocalFeatureEditsResult_created =>
          _library._LocalFeatureEditsResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocalFeatureEditsResult_destroy =>
          _library._LocalFeatureEditsResult_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_LocationDataSourceHandle)>>
      get LocationDataSource_created => _library._LocationDataSource_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocationDataSource_destroy => _library._LocationDataSource_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocationDataSource_destroyInstance =>
          _library._LocationDataSource_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LocationDisplayHandle)>>
      get LocationDisplay_created => _library._LocationDisplay_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocationDisplay_destroy => _library._LocationDisplay_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocationDisplay_destroyInstance =>
          _library._LocationDisplay_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_LocationToScreenResultHandle)>>
      get LocationToScreenResult_created =>
          _library._LocationToScreenResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocationToScreenResult_destroy =>
          _library._LocationToScreenResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LocationHandle)>>
      get Location_created => _library._Location_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Location_destroy => _library._Location_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_LocatorAttributeHandle)>>
      get LocatorAttribute_created => _library._LocatorAttribute_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocatorAttribute_destroy => _library._LocatorAttribute_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LocatorInfoHandle)>>
      get LocatorInfo_created => _library._LocatorInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocatorInfo_destroy => _library._LocatorInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_LocatorTaskHandle)>>
      get LocatorTask_created => _library._LocatorTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get LocatorTask_destroy => _library._LocatorTask_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_MapServiceCapabilitiesHandle)>>
      get MapServiceCapabilities_created =>
          _library._MapServiceCapabilities_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MapServiceCapabilities_destroy =>
          _library._MapServiceCapabilities_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_MobileMapPackageHandle)>>
      get MobileMapPackage_created => _library._MobileMapPackage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MobileMapPackage_destroy => _library._MobileMapPackage_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_MobileScenePackageHandle)>>
      get MobileScenePackage_created => _library._MobileScenePackage_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MobileScenePackage_destroy => _library._MobileScenePackage_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_MosaicDatasetHandle)>>
      get MosaicDataset_created => _library._MosaicDataset_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MosaicDataset_destroy => _library._MosaicDataset_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_MosaicRuleHandle)>>
      get MosaicRule_created => _library._MosaicRule_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MosaicRule_destroy => _library._MosaicRule_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_MutablePartCollectionHandle)>>
      get MutablePartCollection_created =>
          _library._MutablePartCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MutablePartCollection_destroy =>
          _library._MutablePartCollection_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_MutablePartHandle)>>
      get MutablePart_created => _library._MutablePart_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MutablePart_destroy => _library._MutablePart_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_MutablePointCollectionHandle)>>
      get MutablePointCollection_created =>
          _library._MutablePointCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get MutablePointCollection_destroy =>
          _library._MutablePointCollection_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_NMEASatelliteInfoHandle)>>
      get NMEASatelliteInfo_created => _library._NMEASatelliteInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get NMEASatelliteInfo_destroy => _library._NMEASatelliteInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_NetworkLocationHandle)>>
      get NetworkLocation_created => _library._NetworkLocation_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get NetworkLocation_destroy => _library._NetworkLocation_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OAuthApplicationTokenInfoHandle)>>
      get OAuthApplicationTokenInfo_created =>
          _library._OAuthApplicationTokenInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OAuthApplicationTokenInfo_destroy =>
          _library._OAuthApplicationTokenInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OAuthUserConfigurationHandle)>>
      get OAuthUserConfiguration_created =>
          _library._OAuthUserConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OAuthUserConfiguration_destroy =>
          _library._OAuthUserConfiguration_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OAuthUserLoginPromptHandle)>>
      get OAuthUserLoginPrompt_created =>
          _library._OAuthUserLoginPrompt_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OAuthUserLoginPrompt_destroy =>
          _library._OAuthUserLoginPrompt_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OAuthUserTokenInfoHandle)>>
      get OAuthUserTokenInfo_created => _library._OAuthUserTokenInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OAuthUserTokenInfo_destroy => _library._OAuthUserTokenInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OGCFeatureCollectionInfoHandle)>>
      get OGCFeatureCollectionInfo_created =>
          _library._OGCFeatureCollectionInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OGCFeatureCollectionInfo_destroy =>
          _library._OGCFeatureCollectionInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OGCFeatureCollectionInfo_destroyInstance =>
          _library._OGCFeatureCollectionInfo_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_OGCFeatureServiceInfoHandle)>>
      get OGCFeatureServiceInfo_created =>
          _library._OGCFeatureServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OGCFeatureServiceInfo_destroy =>
          _library._OGCFeatureServiceInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_OGCFeatureServiceHandle)>>
      get OGCFeatureService_created => _library._OGCFeatureService_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OGCFeatureService_destroy => _library._OGCFeatureService_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OfflineCapabilityHandle)>>
      get OfflineCapability_created => _library._OfflineCapability_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineCapability_destroy => _library._OfflineCapability_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapCapabilitiesHandle)>>
      get OfflineMapCapabilities_created =>
          _library._OfflineMapCapabilities_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapCapabilities_destroy =>
          _library._OfflineMapCapabilities_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OfflineMapItemInfoHandle)>>
      get OfflineMapItemInfo_created => _library._OfflineMapItemInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapItemInfo_destroy => _library._OfflineMapItemInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapParametersKeyHandle)>>
      get OfflineMapParametersKey_created =>
          _library._OfflineMapParametersKey_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapParametersKey_destroy =>
          _library._OfflineMapParametersKey_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapParametersKey_destroyInstance =>
          _library._OfflineMapParametersKey_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapSyncLayerResultHandle)>>
      get OfflineMapSyncLayerResult_created =>
          _library._OfflineMapSyncLayerResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapSyncLayerResult_destroy =>
          _library._OfflineMapSyncLayerResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapSyncParametersHandle)>>
      get OfflineMapSyncParameters_created =>
          _library._OfflineMapSyncParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapSyncParameters_destroy =>
          _library._OfflineMapSyncParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapSyncResultHandle)>>
      get OfflineMapSyncResult_created =>
          _library._OfflineMapSyncResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapSyncResult_destroy =>
          _library._OfflineMapSyncResult_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_OfflineMapSyncTaskHandle)>>
      get OfflineMapSyncTask_created => _library._OfflineMapSyncTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapSyncTask_destroy => _library._OfflineMapSyncTask_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_OfflineMapTaskHandle)>>
      get OfflineMapTask_created => _library._OfflineMapTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapTask_destroy => _library._OfflineMapTask_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapUpdateCapabilitiesHandle)>>
      get OfflineMapUpdateCapabilities_created =>
          _library._OfflineMapUpdateCapabilities_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapUpdateCapabilities_destroy =>
          _library._OfflineMapUpdateCapabilities_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OfflineMapUpdatesInfoHandle)>>
      get OfflineMapUpdatesInfo_created =>
          _library._OfflineMapUpdatesInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineMapUpdatesInfo_destroy =>
          _library._OfflineMapUpdatesInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_OfflineSettingsHandle)>>
      get OfflineSettings_created => _library._OfflineSettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OfflineSettings_destroy => _library._OfflineSettings_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_OmniViewHandle)>>
      get OmniView_created => _library._OmniView_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OmniView_destroy => _library._OmniView_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_OrderByHandle)>>
      get OrderBy_created => _library._OrderBy_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OrderBy_destroy => _library._OrderBy_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_OwnershipBasedAccessControlInfoHandle)>>
      get OwnershipBasedAccessControlInfo_created =>
          _library._OwnershipBasedAccessControlInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get OwnershipBasedAccessControlInfo_destroy =>
          _library._OwnershipBasedAccessControlInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PlatformHelpersProviderHandle)>>
      get PlatformHelpersProvider_created =>
          _library._PlatformHelpersProvider_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PlatformHelpersProvider_destroy =>
          _library._PlatformHelpersProvider_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_PointBarrierHandle)>>
      get PointBarrier_created => _library._PointBarrier_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PointBarrier_destroy => _library._PointBarrier_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PolygonBarrierHandle)>>
      get PolygonBarrier_created => _library._PolygonBarrier_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PolygonBarrier_destroy => _library._PolygonBarrier_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_PolygonCollectionHandle)>>
      get PolygonCollection_created => _library._PolygonCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PolygonCollection_destroy => _library._PolygonCollection_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PolylineBarrierHandle)>>
      get PolylineBarrier_created => _library._PolylineBarrier_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PolylineBarrier_destroy => _library._PolylineBarrier_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_PopupAttachmentManagerHandle)>>
      get PopupAttachmentManager_created =>
          _library._PopupAttachmentManager_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupAttachmentManager_destroy =>
          _library._PopupAttachmentManager_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupAttachmentHandle)>>
      get PopupAttachment_created => _library._PopupAttachment_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupAttachment_destroy => _library._PopupAttachment_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupAttachment_destroyInstance =>
          _library._PopupAttachment_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupDefinitionHandle)>>
      get PopupDefinition_created => _library._PopupDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupDefinition_destroy => _library._PopupDefinition_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupDefinition_destroyInstance =>
          _library._PopupDefinition_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupElementHandle)>>
      get PopupElement_created => _library._PopupElement_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupElement_destroy => _library._PopupElement_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PopupExpressionEvaluationHandle)>>
      get PopupExpressionEvaluation_created =>
          _library._PopupExpressionEvaluation_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupExpressionEvaluation_destroy =>
          _library._PopupExpressionEvaluation_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupExpressionHandle)>>
      get PopupExpression_created => _library._PopupExpression_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupExpression_destroy => _library._PopupExpression_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupExpression_destroyInstance =>
          _library._PopupExpression_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_PopupFieldFormatHandle)>>
      get PopupFieldFormat_created => _library._PopupFieldFormat_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupFieldFormat_destroy => _library._PopupFieldFormat_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupFieldHandle)>>
      get PopupField_created => _library._PopupField_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupField_destroy => _library._PopupField_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_PopupMediaValueHandle)>>
      get PopupMediaValue_created => _library._PopupMediaValue_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupMediaValue_destroy => _library._PopupMediaValue_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupMediaHandle)>>
      get PopupMedia_created => _library._PopupMedia_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupMedia_destroy => _library._PopupMedia_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_PopupRelatedFeaturesDefinitionHandle)>>
      get PopupRelatedFeaturesDefinition_created =>
          _library._PopupRelatedFeaturesDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupRelatedFeaturesDefinition_destroy =>
          _library._PopupRelatedFeaturesDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PopupRelatedFeaturesSortOrderHandle)>>
      get PopupRelatedFeaturesSortOrder_created =>
          _library._PopupRelatedFeaturesSortOrder_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PopupRelatedFeaturesSortOrder_destroy =>
          _library._PopupRelatedFeaturesSortOrder_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_PopupHandle)>>
      get Popup_created => _library._Popup_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Popup_destroy => _library._Popup_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_PortalInfoHandle)>>
      get PortalInfo_created => _library._PortalInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PortalInfo_destroy => _library._PortalInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_PortalNetworkSecuredInquiryHandle)>>
      get PortalNetworkSecuredInquiry_created =>
          _library._PortalNetworkSecuredInquiry_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PortalNetworkSecuredInquiry_destroy =>
          _library._PortalNetworkSecuredInquiry_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_PortalHandle)>>
      get Portal_created => _library._Portal_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Portal_destroy => _library._Portal_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Portal_destroyInstance => _library._Portal_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_PreplannedMapAreaHandle)>>
      get PreplannedMapArea_created => _library._PreplannedMapArea_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PreplannedMapArea_destroy => _library._PreplannedMapArea_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PreplannedMapArea_destroyInstance =>
          _library._PreplannedMapArea_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ProximityResultHandle)>>
      get ProximityResult_created => _library._ProximityResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ProximityResult_destroy => _library._ProximityResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_PublicKeyHandle)>>
      get PublicKey_created => _library._PublicKey_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get PublicKey_destroy => _library._PublicKey_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_QueryFormatsHandle)>>
      get QueryFormats_created => _library._QueryFormats_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get QueryFormats_destroy => _library._QueryFormats_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_QueryParametersHandle)>>
      get QueryParameters_created => _library._QueryParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get QueryParameters_destroy => _library._QueryParameters_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RasterCellHandle)>>
      get RasterCell_created => _library._RasterCell_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RasterCell_destroy => _library._RasterCell_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_RasterFunctionArgumentsHandle)>>
      get RasterFunctionArguments_created =>
          _library._RasterFunctionArguments_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RasterFunctionArguments_destroy =>
          _library._RasterFunctionArguments_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_RasterFunctionHandle)>>
      get RasterFunction_created => _library._RasterFunction_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RasterFunction_destroy => _library._RasterFunction_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RasterRendererHandle)>>
      get RasterRenderer_created => _library._RasterRenderer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RasterRenderer_destroy => _library._RasterRenderer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RasterHandle)>>
      get Raster_created => _library._Raster_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Raster_destroy => _library._Raster_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RelatedFeatureQueryResultHandle)>>
      get RelatedFeatureQueryResult_created =>
          _library._RelatedFeatureQueryResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RelatedFeatureQueryResult_destroy =>
          _library._RelatedFeatureQueryResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RelatedQueryParametersHandle)>>
      get RelatedQueryParameters_created =>
          _library._RelatedQueryParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RelatedQueryParameters_destroy =>
          _library._RelatedQueryParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RelationshipInfoHandle)>>
      get RelationshipInfo_created => _library._RelationshipInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RelationshipInfo_destroy => _library._RelationshipInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_RenderCommandServerHandle)>>
      get RenderCommandServer_created =>
          _library._RenderCommandServer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RenderCommandServer_destroy =>
          _library._RenderCommandServer_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RendererScenePropertiesHandle)>>
      get RendererSceneProperties_created =>
          _library._RendererSceneProperties_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RendererSceneProperties_destroy =>
          _library._RendererSceneProperties_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RendererHandle)>>
      get Renderer_created => _library._Renderer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Renderer_destroy => _library._Renderer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Renderer_destroyInstance => _library._Renderer_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_RenderingRuleInfoHandle)>>
      get RenderingRuleInfo_created => _library._RenderingRuleInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RenderingRuleInfo_destroy => _library._RenderingRuleInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_RenderingRuleHandle)>>
      get RenderingRule_created => _library._RenderingRule_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RenderingRule_destroy => _library._RenderingRule_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_RequestAttachmentHandle)>>
      get RequestAttachment_created => _library._RequestAttachment_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RequestAttachment_destroy => _library._RequestAttachment_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RequestHandle)>>
      get Request_created => _library._Request_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Request_destroy => _library._Request_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Request_destroyInstance => _library._Request_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_ReroutingParametersHandle)>>
      get ReroutingParameters_created =>
          _library._ReroutingParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ReroutingParameters_destroy =>
          _library._ReroutingParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ResourceProviderHandle)>>
      get ResourceProvider_created => _library._ResourceProvider_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ResourceProvider_destroy => _library._ResourceProvider_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_RestrictionAttributeHandle)>>
      get RestrictionAttribute_created =>
          _library._RestrictionAttribute_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RestrictionAttribute_destroy =>
          _library._RestrictionAttribute_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_ReticleInteractionConfigurationHandle)>>
      get ReticleInteractionConfiguration_created =>
          _library._ReticleInteractionConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ReticleInteractionConfiguration_destroy =>
          _library._ReticleInteractionConfiguration_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ReverseGeocodeParametersHandle)>>
      get ReverseGeocodeParameters_created =>
          _library._ReverseGeocodeParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ReverseGeocodeParameters_destroy =>
          _library._ReverseGeocodeParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteParametersHandle)>>
      get RouteParameters_created => _library._RouteParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RouteParameters_destroy => _library._RouteParameters_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteResultHandle)>>
      get RouteResult_created => _library._RouteResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RouteResult_destroy => _library._RouteResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteTaskInfoHandle)>>
      get RouteTaskInfo_created => _library._RouteTaskInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RouteTaskInfo_destroy => _library._RouteTaskInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteTaskHandle)>>
      get RouteTask_created => _library._RouteTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RouteTask_destroy => _library._RouteTask_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_RouteTrackerLoggerHandle)>>
      get RouteTrackerLogger_created => _library._RouteTrackerLogger_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RouteTrackerLogger_destroy => _library._RouteTrackerLogger_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteTrackerHandle)>>
      get RouteTracker_created => _library._RouteTracker_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get RouteTracker_destroy => _library._RouteTracker_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_RouteHandle)>>
      get Route_created => _library._Route_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Route_destroy => _library._Route_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_S57FeatureMetadataHandle)>>
      get S57FeatureMetadata_created => _library._S57FeatureMetadata_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get S57FeatureMetadata_destroy => _library._S57FeatureMetadata_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SceneEnvironmentHandle)>>
      get SceneEnvironment_created => _library._SceneEnvironment_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SceneEnvironment_destroy => _library._SceneEnvironment_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SceneLayerPolygonFilterHandle)>>
      get SceneLayerPolygonFilter_created =>
          _library._SceneLayerPolygonFilter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SceneLayerPolygonFilter_destroy =>
          _library._SceneLayerPolygonFilter_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SecurityProviderHandle)>>
      get SecurityProvider_created => _library._SecurityProvider_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SecurityProvider_destroy => _library._SecurityProvider_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_SegmentHandle)>>
      get Segment_created => _library._Segment_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Segment_destroy => _library._Segment_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SelectionPropertiesHandle)>>
      get SelectionProperties_created =>
          _library._SelectionProperties_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SelectionProperties_destroy =>
          _library._SelectionProperties_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaFacilityHandle)>>
      get ServiceAreaFacility_created =>
          _library._ServiceAreaFacility_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceAreaFacility_destroy =>
          _library._ServiceAreaFacility_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_ServiceAreaParametersHandle)>>
      get ServiceAreaParameters_created =>
          _library._ServiceAreaParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceAreaParameters_destroy =>
          _library._ServiceAreaParameters_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaPolygonHandle)>>
      get ServiceAreaPolygon_created => _library._ServiceAreaPolygon_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceAreaPolygon_destroy => _library._ServiceAreaPolygon_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaPolylineHandle)>>
      get ServiceAreaPolyline_created =>
          _library._ServiceAreaPolyline_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceAreaPolyline_destroy =>
          _library._ServiceAreaPolyline_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaResultHandle)>>
      get ServiceAreaResult_created => _library._ServiceAreaResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceAreaResult_destroy => _library._ServiceAreaResult_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaTaskInfoHandle)>>
      get ServiceAreaTaskInfo_created =>
          _library._ServiceAreaTaskInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceAreaTaskInfo_destroy =>
          _library._ServiceAreaTaskInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ServiceAreaTaskHandle)>>
      get ServiceAreaTask_created => _library._ServiceAreaTask_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceAreaTask_destroy => _library._ServiceAreaTask_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceDocumentInfoHandle)>>
      get ServiceDocumentInfo_created =>
          _library._ServiceDocumentInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceDocumentInfo_destroy =>
          _library._ServiceDocumentInfo_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceGeodatabaseHandle)>>
      get ServiceGeodatabase_created => _library._ServiceGeodatabase_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceGeodatabase_destroy => _library._ServiceGeodatabase_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceGeodatabase_destroyInstance =>
          _library._ServiceGeodatabase_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_ServiceTimeInfoHandle)>>
      get ServiceTimeInfo_created => _library._ServiceTimeInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceTimeInfo_destroy => _library._ServiceTimeInfo_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ServiceVersionInfoHandle)>>
      get ServiceVersionInfo_created => _library._ServiceVersionInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceVersionInfo_destroy => _library._ServiceVersionInfo_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_ServiceVersionParametersHandle)>>
      get ServiceVersionParameters_created =>
          _library._ServiceVersionParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ServiceVersionParameters_destroy =>
          _library._ServiceVersionParameters_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_ShapefileInfoHandle)>>
      get ShapefileInfo_created => _library._ShapefileInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ShapefileInfo_destroy => _library._ShapefileInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SimulationParametersHandle)>>
      get SimulationParameters_created =>
          _library._SimulationParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SimulationParameters_destroy =>
          _library._SimulationParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_SiteLayerDefinitionHandle)>>
      get SiteLayerDefinition_created =>
          _library._SiteLayerDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SiteLayerDefinition_destroy =>
          _library._SiteLayerDefinition_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_SnapSettingsHandle)>>
      get SnapSettings_created => _library._SnapSettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SnapSettings_destroy => _library._SnapSettings_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SnapSourceSettingsHandle)>>
      get SnapSourceSettings_created => _library._SnapSourceSettings_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SnapSourceSettings_destroy => _library._SnapSourceSettings_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SolidBuildingFilterDefinitionHandle)>>
      get SolidBuildingFilterDefinition_created =>
          _library._SolidBuildingFilterDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SolidBuildingFilterDefinition_destroy =>
          _library._SolidBuildingFilterDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SourceObjectPositionHandle)>>
      get SourceObjectPosition_created =>
          _library._SourceObjectPosition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SourceObjectPosition_destroy =>
          _library._SourceObjectPosition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SpatialReferenceHandle)>>
      get SpatialReference_created => _library._SpatialReference_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SpatialReference_destroy => _library._SpatialReference_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_StatisticDefinitionHandle)>>
      get StatisticDefinition_created =>
          _library._StatisticDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get StatisticDefinition_destroy =>
          _library._StatisticDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_StatisticRecordHandle)>>
      get StatisticRecord_created => _library._StatisticRecord_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get StatisticRecord_destroy => _library._StatisticRecord_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_StatisticsQueryParametersHandle)>>
      get StatisticsQueryParameters_created =>
          _library._StatisticsQueryParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get StatisticsQueryParameters_destroy =>
          _library._StatisticsQueryParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_StatisticsQueryResultHandle)>>
      get StatisticsQueryResult_created =>
          _library._StatisticsQueryResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get StatisticsQueryResult_destroy =>
          _library._StatisticsQueryResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_StopHandle)>>
      get Stop_created => _library._Stop_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Stop_destroy => _library._Stop_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_StretchParametersHandle)>>
      get StretchParameters_created => _library._StretchParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get StretchParameters_destroy => _library._StretchParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_StringImmutableCollectionHandle)>>
      get StringImmutableCollection_created =>
          _library._StringImmutableCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get StringImmutableCollection_destroy =>
          _library._StringImmutableCollection_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_StringHandle)>>
      get String_created => _library._String_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get String_destroy => _library._String_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SublayerSourceHandle)>>
      get SublayerSource_created => _library._SublayerSource_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SublayerSource_destroy => _library._SublayerSource_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SuggestParametersHandle)>>
      get SuggestParameters_created => _library._SuggestParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SuggestParameters_destroy => _library._SuggestParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SuggestResultHandle)>>
      get SuggestResult_created => _library._SuggestResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SuggestResult_destroy => _library._SuggestResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_SurfaceHandle)>>
      get Surface_created => _library._Surface_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Surface_destroy => _library._Surface_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolAnchorHandle)>>
      get SymbolAnchor_created => _library._SymbolAnchor_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SymbolAnchor_destroy => _library._SymbolAnchor_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_SymbolLayerEdges3DHandle)>>
      get SymbolLayerEdges3D_created => _library._SymbolLayerEdges3D_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SymbolLayerEdges3D_destroy => _library._SymbolLayerEdges3D_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolLayerHandle)>>
      get SymbolLayer_created => _library._SymbolLayer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SymbolLayer_destroy => _library._SymbolLayer_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SymbolReferencePropertiesHandle)>>
      get SymbolReferenceProperties_created =>
          _library._SymbolReferenceProperties_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SymbolReferenceProperties_destroy =>
          _library._SymbolReferenceProperties_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SymbolStyleSearchParametersHandle)>>
      get SymbolStyleSearchParameters_created =>
          _library._SymbolStyleSearchParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SymbolStyleSearchParameters_destroy =>
          _library._SymbolStyleSearchParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SymbolStyleSearchResultHandle)>>
      get SymbolStyleSearchResult_created =>
          _library._SymbolStyleSearchResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SymbolStyleSearchResult_destroy =>
          _library._SymbolStyleSearchResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolStyleHandle)>>
      get SymbolStyle_created => _library._SymbolStyle_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SymbolStyle_destroy => _library._SymbolStyle_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_SymbolHandle)>>
      get Symbol_created => _library._Symbol_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Symbol_destroy => _library._Symbol_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Symbol_destroyInstance => _library._Symbol_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SyncCapabilitiesHandle)>>
      get SyncCapabilities_created => _library._SyncCapabilities_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SyncCapabilities_destroy => _library._SyncCapabilities_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_SyncGeodatabaseParametersHandle)>>
      get SyncGeodatabaseParameters_created =>
          _library._SyncGeodatabaseParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SyncGeodatabaseParameters_destroy =>
          _library._SyncGeodatabaseParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SyncLayerOptionHandle)>>
      get SyncLayerOption_created => _library._SyncLayerOption_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SyncLayerOption_destroy => _library._SyncLayerOption_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_SyncLayerResultHandle)>>
      get SyncLayerResult_created => _library._SyncLayerResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get SyncLayerResult_destroy => _library._SyncLayerResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TableDescriptionHandle)>>
      get TableDescription_created => _library._TableDescription_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TableDescription_destroy => _library._TableDescription_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TaskHandle)>>
      get Task_created => _library._Task_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Task_destroy => _library._Task_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Task_destroyInstance => _library._Task_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TileCacheHandle)>>
      get TileCache_created => _library._TileCache_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TileCache_destroy => _library._TileCache_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TileCache_destroyInstance => _library._TileCache_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TileInfoHandle)>>
      get TileInfo_created => _library._TileInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TileInfo_destroy => _library._TileInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TileKeyHandle)>>
      get TileKey_created => _library._TileKey_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TileKey_destroy => _library._TileKey_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeExtentHandle)>>
      get TimeExtent_created => _library._TimeExtent_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TimeExtent_destroy => _library._TimeExtent_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeOnlyHandle)>>
      get TimeOnly_created => _library._TimeOnly_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TimeOnly_destroy => _library._TimeOnly_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_TimeOptionsHandle)>>
      get TimeOptions_created => _library._TimeOptions_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TimeOptions_destroy => _library._TimeOptions_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeReferenceHandle)>>
      get TimeReference_created => _library._TimeReference_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TimeReference_destroy => _library._TimeReference_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeValueHandle)>>
      get TimeValue_created => _library._TimeValue_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TimeValue_destroy => _library._TimeValue_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TimeZoneOffsetHandle)>>
      get TimeZoneOffset_created => _library._TimeZoneOffset_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TimeZoneOffset_destroy => _library._TimeZoneOffset_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TimestampOffsetHandle)>>
      get TimestampOffset_created => _library._TimestampOffset_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TimestampOffset_destroy => _library._TimestampOffset_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TokenInfoHandle)>>
      get TokenInfo_created => _library._TokenInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TokenInfo_destroy => _library._TokenInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_TrackDisplayPropertiesHandle)>>
      get TrackDisplayProperties_created =>
          _library._TrackDisplayProperties_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TrackDisplayProperties_destroy =>
          _library._TrackDisplayProperties_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_TrackingDistanceHandle)>>
      get TrackingDistance_created => _library._TrackingDistance_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TrackingDistance_destroy => _library._TrackingDistance_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_TrackingProgressHandle)>>
      get TrackingProgress_created => _library._TrackingProgress_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TrackingProgress_destroy => _library._TrackingProgress_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TrackingStatusHandle)>>
      get TrackingStatus_created => _library._TrackingStatus_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TrackingStatus_destroy => _library._TrackingStatus_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TrackingStatus_destroyInstance =>
          _library._TrackingStatus_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_TransformationMatrixHandle)>>
      get TransformationMatrix_created =>
          _library._TransformationMatrix_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TransformationMatrix_destroy =>
          _library._TransformationMatrix_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_TransportationNetworkDatasetHandle)>>
      get TransportationNetworkDataset_created =>
          _library._TransportationNetworkDataset_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TransportationNetworkDataset_destroy =>
          _library._TransportationNetworkDataset_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_TravelModeHandle)>>
      get TravelMode_created => _library._TravelMode_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TravelMode_destroy => _library._TravelMode_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_TraversalResultHandle)>>
      get TraversalResult_created => _library._TraversalResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get TraversalResult_destroy => _library._TraversalResult_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_UniqueValueHandle)>>
      get UniqueValue_created => _library._UniqueValue_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UniqueValue_destroy => _library._UniqueValue_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UniqueValue_destroyInstance =>
          _library._UniqueValue_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_UnitHandle)>>
      get Unit_created => _library._Unit_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Unit_destroy => _library._Unit_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityAssetGroupHandle)>>
      get UtilityAssetGroup_created => _library._UtilityAssetGroup_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityAssetGroup_destroy => _library._UtilityAssetGroup_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityAssetGroup_destroyInstance =>
          _library._UtilityAssetGroup_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityAssetTypeHandle)>>
      get UtilityAssetType_created => _library._UtilityAssetType_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityAssetType_destroy => _library._UtilityAssetType_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityAssetType_destroyInstance =>
          _library._UtilityAssetType_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityAssociationHandle)>>
      get UtilityAssociation_created => _library._UtilityAssociation_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityAssociation_destroy => _library._UtilityAssociation_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityCategoryHandle)>>
      get UtilityCategory_created => _library._UtilityCategory_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityCategory_destroy => _library._UtilityCategory_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityDomainNetworkHandle)>>
      get UtilityDomainNetwork_created =>
          _library._UtilityDomainNetwork_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityDomainNetwork_destroy =>
          _library._UtilityDomainNetwork_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityDomainNetwork_destroyInstance =>
          _library._UtilityDomainNetwork_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityElementHandle)>>
      get UtilityElement_created => _library._UtilityElement_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityElement_destroy => _library._UtilityElement_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  RT_UtilityNamedTraceConfigurationQueryParametersHandle)>>
      get UtilityNamedTraceConfigurationQueryParameters_created =>
          _library._UtilityNamedTraceConfigurationQueryParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNamedTraceConfigurationQueryParameters_destroy =>
          _library._UtilityNamedTraceConfigurationQueryParameters_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityNamedTraceConfigurationHandle)>>
      get UtilityNamedTraceConfiguration_created =>
          _library._UtilityNamedTraceConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNamedTraceConfiguration_destroy =>
          _library._UtilityNamedTraceConfiguration_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityNearestNeighborHandle)>>
      get UtilityNearestNeighbor_created =>
          _library._UtilityNearestNeighbor_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNearestNeighbor_destroy =>
          _library._UtilityNearestNeighbor_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityNetworkAttributeHandle)>>
      get UtilityNetworkAttribute_created =>
          _library._UtilityNetworkAttribute_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetworkAttribute_destroy =>
          _library._UtilityNetworkAttribute_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetworkAttribute_destroyInstance =>
          _library._UtilityNetworkAttribute_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_UtilityNetworkCapabilitiesHandle)>>
      get UtilityNetworkCapabilities_created =>
          _library._UtilityNetworkCapabilities_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetworkCapabilities_destroy =>
          _library._UtilityNetworkCapabilities_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityNetworkDefinitionHandle)>>
      get UtilityNetworkDefinition_created =>
          _library._UtilityNetworkDefinition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetworkDefinition_destroy =>
          _library._UtilityNetworkDefinition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityNetworkSourceHandle)>>
      get UtilityNetworkSource_created =>
          _library._UtilityNetworkSource_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetworkSource_destroy =>
          _library._UtilityNetworkSource_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetworkSource_destroyInstance =>
          _library._UtilityNetworkSource_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityNetworkStateHandle)>>
      get UtilityNetworkState_created =>
          _library._UtilityNetworkState_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetworkState_destroy =>
          _library._UtilityNetworkState_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityNetworkHandle)>>
      get UtilityNetwork_created => _library._UtilityNetwork_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetwork_destroy => _library._UtilityNetwork_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityNetwork_destroyInstance =>
          _library._UtilityNetwork_destroyInstancePtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityPropagatorHandle)>>
      get UtilityPropagator_created => _library._UtilityPropagator_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityPropagator_destroy => _library._UtilityPropagator_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_UtilityRuleElementHandle)>>
      get UtilityRuleElement_created => _library._UtilityRuleElement_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityRuleElement_destroy => _library._UtilityRuleElement_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityRuleHandle)>>
      get UtilityRule_created => _library._UtilityRule_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityRule_destroy => _library._UtilityRule_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  imp1.RT_UtilityTerminalConfigurationPathHandle)>>
      get UtilityTerminalConfigurationPath_created =>
          _library._UtilityTerminalConfigurationPath_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTerminalConfigurationPath_destroy =>
          _library._UtilityTerminalConfigurationPath_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTerminalConfigurationHandle)>>
      get UtilityTerminalConfiguration_created =>
          _library._UtilityTerminalConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTerminalConfiguration_destroy =>
          _library._UtilityTerminalConfiguration_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityTerminalPathHandle)>>
      get UtilityTerminalPath_created =>
          _library._UtilityTerminalPath_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTerminalPath_destroy =>
          _library._UtilityTerminalPath_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityTerminalHandle)>>
      get UtilityTerminal_created => _library._UtilityTerminal_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTerminal_destroy => _library._UtilityTerminal_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTerminal_destroyInstance =>
          _library._UtilityTerminal_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityTierGroupHandle)>>
      get UtilityTierGroup_created => _library._UtilityTierGroup_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTierGroup_destroy => _library._UtilityTierGroup_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTierGroup_destroyInstance =>
          _library._UtilityTierGroup_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_UtilityTierHandle)>>
      get UtilityTier_created => _library._UtilityTier_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTier_destroy => _library._UtilityTier_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTier_destroyInstance =>
          _library._UtilityTier_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_UtilityTraceConditionHandle)>>
      get UtilityTraceCondition_created =>
          _library._UtilityTraceCondition_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceCondition_destroy =>
          _library._UtilityTraceCondition_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(RT_UtilityTraceConfigurationHandle)>>
      get UtilityTraceConfiguration_created =>
          _library._UtilityTraceConfiguration_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceConfiguration_destroy =>
          _library._UtilityTraceConfiguration_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_UtilityTraceFilterHandle)>>
      get UtilityTraceFilter_created => _library._UtilityTraceFilter_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceFilter_destroy => _library._UtilityTraceFilter_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTraceFunctionBarrierHandle)>>
      get UtilityTraceFunctionBarrier_created =>
          _library._UtilityTraceFunctionBarrier_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceFunctionBarrier_destroy =>
          _library._UtilityTraceFunctionBarrier_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTraceFunctionOutputHandle)>>
      get UtilityTraceFunctionOutput_created =>
          _library._UtilityTraceFunctionOutput_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceFunctionOutput_destroy =>
          _library._UtilityTraceFunctionOutput_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_UtilityTraceFunctionHandle)>>
      get UtilityTraceFunction_created =>
          _library._UtilityTraceFunction_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceFunction_destroy =>
          _library._UtilityTraceFunction_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityTraceParametersHandle)>>
      get UtilityTraceParameters_created =>
          _library._UtilityTraceParameters_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceParameters_destroy =>
          _library._UtilityTraceParameters_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_UtilityTraceResultHandle)>>
      get UtilityTraceResult_created => _library._UtilityTraceResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraceResult_destroy => _library._UtilityTraceResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(RT_UtilityTraversabilityHandle)>>
      get UtilityTraversability_created =>
          _library._UtilityTraversability_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityTraversability_destroy =>
          _library._UtilityTraversability_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_UtilityValidationResultHandle)>>
      get UtilityValidationResult_created =>
          _library._UtilityValidationResult_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get UtilityValidationResult_destroy =>
          _library._UtilityValidationResult_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_VectorMarkerSymbolElementHandle)>>
      get VectorMarkerSymbolElement_created =>
          _library._VectorMarkerSymbolElement_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get VectorMarkerSymbolElement_destroy =>
          _library._VectorMarkerSymbolElement_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_VectorTileCacheHandle)>>
      get VectorTileCache_created => _library._VectorTileCache_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get VectorTileCache_destroy => _library._VectorTileCache_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get VectorTileCache_destroyInstance =>
          _library._VectorTileCache_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  RT_VectorTileSourceInfoImmutableCollectionHandle)>>
      get VectorTileSourceInfoImmutableCollection_created =>
          _library._VectorTileSourceInfoImmutableCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get VectorTileSourceInfoImmutableCollection_destroy =>
          _library._VectorTileSourceInfoImmutableCollection_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(imp1.RT_VectorTileSourceInfoHandle)>>
      get VectorTileSourceInfo_created =>
          _library._VectorTileSourceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get VectorTileSourceInfo_destroy =>
          _library._VectorTileSourceInfo_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_VectorTileStyleHandle)>>
      get VectorTileStyle_created => _library._VectorTileStyle_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get VectorTileStyle_destroy => _library._VectorTileStyle_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_VectorHandle)>>
      get Vector_created => _library._Vector_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Vector_destroy => _library._Vector_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_ViewLabelPropertiesHandle)>>
      get ViewLabelProperties_created =>
          _library._ViewLabelProperties_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get ViewLabelProperties_destroy =>
          _library._ViewLabelProperties_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_ViewpointHandle)>>
      get Viewpoint_created => _library._Viewpoint_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Viewpoint_destroy => _library._Viewpoint_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_VoiceGuidanceHandle)>>
      get VoiceGuidance_created => _library._VoiceGuidance_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get VoiceGuidance_destroy => _library._VoiceGuidance_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_WFSLayerInfoHandle)>>
      get WFSLayerInfo_created => _library._WFSLayerInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WFSLayerInfo_destroy => _library._WFSLayerInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WFSLayerInfo_destroyInstance =>
          _library._WFSLayerInfo_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_WFSServiceInfoHandle)>>
      get WFSServiceInfo_created => _library._WFSServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WFSServiceInfo_destroy => _library._WFSServiceInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_WFSServiceHandle)>>
      get WFSService_created => _library._WFSService_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WFSService_destroy => _library._WFSService_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_WMSFeatureHandle)>>
      get WMSFeature_created => _library._WMSFeature_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMSFeature_destroy => _library._WMSFeature_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_WMSLayerInfoHandle)>>
      get WMSLayerInfo_created => _library._WMSLayerInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMSLayerInfo_destroy => _library._WMSLayerInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMSLayerInfo_destroyInstance =>
          _library._WMSLayerInfo_destroyInstancePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_WMSServiceInfoHandle)>>
      get WMSServiceInfo_created => _library._WMSServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMSServiceInfo_destroy => _library._WMSServiceInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_WMSServiceHandle)>>
      get WMSService_created => _library._WMSService_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMSService_destroy => _library._WMSService_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_WMSSublayerHandle)>>
      get WMSSublayer_created => _library._WMSSublayer_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMSSublayer_destroy => _library._WMSSublayer_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMSSublayer_destroyInstance =>
          _library._WMSSublayer_destroyInstancePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_WMTSLayerInfoHandle)>>
      get WMTSLayerInfo_created => _library._WMTSLayerInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMTSLayerInfo_destroy => _library._WMTSLayerInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_WMTSServiceInfoHandle)>>
      get WMTSServiceInfo_created => _library._WMTSServiceInfo_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMTSServiceInfo_destroy => _library._WMTSServiceInfo_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RT_WMTSServiceHandle)>>
      get WMTSService_created => _library._WMTSService_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMTSService_destroy => _library._WMTSService_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_WMTSTileMatrixSetHandle)>>
      get WMTSTileMatrixSet_created => _library._WMTSTileMatrixSet_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMTSTileMatrixSet_destroy => _library._WMTSTileMatrixSet_destroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(imp1.RT_WMTSTileMatrixHandle)>>
      get WMTSTileMatrix_created => _library._WMTSTileMatrix_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WMTSTileMatrix_destroy => _library._WMTSTileMatrix_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(imp1.RT_WebSocketConnectionHandle)>>
      get WebSocketConnection_created =>
          _library._WebSocketConnection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WebSocketConnection_destroy =>
          _library._WebSocketConnection_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_WifiReadingHandle)>>
      get WifiReading_created => _library._WifiReading_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get WifiReading_destroy => _library._WifiReading_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(imp1.RT_WorldviewHandle)>>
      get Worldview_created => _library._Worldview_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get Worldview_destroy => _library._Worldview_destroyPtr;
  ffi.Pointer<
          ffi
          .NativeFunction<ffi.Void Function(RT_int64ImmutableCollectionHandle)>>
      get int64ImmutableCollection_created =>
          _library._int64ImmutableCollection_createdPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      get int64ImmutableCollection_destroy =>
          _library._int64ImmutableCollection_destroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int)>> get syncPing =>
      _library._syncPingPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>, imp1.RT_ElementReferenceHandle)>>
      get syncPlatformHelpersProvider_applicationLocale =>
          _library._syncPlatformHelpersProvider_applicationLocalePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Double, ffi.Int32,
                  ffi.Bool, ffi.Bool, imp1.RT_ElementReferenceHandle)>>
      get syncPlatformHelpersProvider_convertNumber =>
          _library._syncPlatformHelpersProvider_convertNumberPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, imp1.RT_DateTimeHandle,
                  ffi.Int32, imp1.RT_ElementReferenceHandle)>>
      get syncPlatformHelpersProvider_convertDateTime =>
          _library._syncPlatformHelpersProvider_convertDateTimePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  imp1.RT_StringHandle,
                  imp1.RT_StringHandle,
                  imp1.RT_ArrayHandle,
                  imp1.RT_ElementReferenceHandle)>>
      get syncResourceProvider_getResourceString =>
          _library._syncResourceProvider_getResourceStringPtr;
}

/// A port is used to send or receive inter-isolate messages
typedef Dart_Port = ffi.Int64;
typedef DartDart_Port = int;
//typedef RT_ByteArray = imp1.RT_ByteArray;

abstract class RT_FeatureChangeType {
  static const int RT_FeatureChangeType_geometry = 1;
  static const int RT_FeatureChangeType_attributes = 2;
  static const int RT_FeatureChangeType_attributesAndGeometry = 3;
}

abstract class RT_DrawStatus {
  static const int RT_DrawStatus_inProgress = 0;
  static const int RT_DrawStatus_completed = 1;
}

abstract class RT_JobStatus {
  static const int RT_JobStatus_notStarted = 0;
  static const int RT_JobStatus_started = 1;
  static const int RT_JobStatus_paused = 2;
  static const int RT_JobStatus_succeeded = 3;
  static const int RT_JobStatus_failed = 4;
  static const int RT_JobStatus_canceling = 5;
}

abstract class RT_LoadStatus {
  static const int RT_LoadStatus_unknown = -1;
  static const int RT_LoadStatus_loaded = 0;
  static const int RT_LoadStatus_loading = 1;
  static const int RT_LoadStatus_failedToLoad = 2;
  static const int RT_LoadStatus_notLoaded = 3;
}

abstract class RT_LocationDataSourceStatus {
  static const int RT_LocationDataSourceStatus_stopped = 0;
  static const int RT_LocationDataSourceStatus_starting = 1;
  static const int RT_LocationDataSourceStatus_started = 2;
  static const int RT_LocationDataSourceStatus_stopping = 3;
  static const int RT_LocationDataSourceStatus_failedToStart = 4;
}

abstract class RT_LocationDisplayAutoPanMode {
  static const int RT_LocationDisplayAutoPanMode_off = 0;
  static const int RT_LocationDisplayAutoPanMode_recenter = 1;
  static const int RT_LocationDisplayAutoPanMode_navigation = 2;
  static const int RT_LocationDisplayAutoPanMode_compassNavigation = 3;
}

abstract class AsyncType {
  static const int asyncTypeCallbackRelayInstanceDestroyed = 0;
  static const int asyncTypeArcGISCredentialStoreAllCredentialsRemovedEvent = 1;
  static const int asyncTypeArcGISCredentialStoreCredentialAddedEvent = 2;
  static const int asyncTypeArcGISCredentialStoreCredentialRemovedEvent = 3;
  static const int asyncTypeArcGISCredentialStoreCredentialUpdatedEvent = 4;
  static const int asyncTypeArcGISRuntimeEnvironmentErrorEvent = 5;
  static const int asyncTypeObservableArrayElementAddedEvent = 6;
  static const int asyncTypeObservableArrayElementRemovedEvent = 7;
  static const int asyncTypeAuthenticationManagerIssuedChallengeEvent = 8;
  static const int asyncTypeAuthenticationManagerOAuthUserLoginEvent = 9;
  static const int
      asyncTypeAuthenticationManagerPortalNetworkSecuredInquiryEvent = 10;
  static const int asyncTypeClientReferenceReleaseEvent = 11;
  static const int
      asyncTypeExportVectorTilesJobEnsurePortalItemHasRequestHandlerEvent = 12;
  static const int
      asyncTypeExportVectorTilesTaskEnsurePortalItemHasRequestHandlerEvent = 13;
  static const int asyncTypeFeatureChangedEvent = 14;
  static const int asyncTypeGeoModelBasemapChangedEvent = 15;
  static const int asyncTypeGeoViewAttributionChangedEvent = 16;
  static const int asyncTypeGeoViewDrawRequestedEvent = 17;
  static const int asyncTypeGeoViewDrawStatusChangedEvent = 18;
  static const int asyncTypeGeoViewLayerViewStateChangedEvent = 19;
  static const int asyncTypeGeoViewNavigationChangedEvent = 20;
  static const int asyncTypeGeoViewSpatialReferenceChangedEvent = 21;
  static const int asyncTypeGeoViewTimeExtentChangedEvent = 22;
  static const int asyncTypeGeoViewViewpointChangedEvent = 23;
  static const int asyncTypeGeodatabaseTransactionStatusChangedEvent = 24;
  static const int asyncTypeJobJobDoneEvent = 25;
  static const int asyncTypeJobMessageAddedEvent = 26;
  static const int asyncTypeJobProgressChangedEvent = 27;
  static const int asyncTypeJobStatusChangedEvent = 28;
  static const int asyncTypeLayerContentSubLayerContentChangedEvent = 29;
  static const int asyncTypeLayerVisibilityChangedEvent = 30;
  static const int asyncTypeLayerTileEvent_cancelTileRequest = 31;
  static const int asyncTypeLayerTileEvent_tileRequest = 32;
  static const int asyncTypeLoadableDoneLoadingEvent = 33;
  static const int asyncTypeLoadableLoadStatusChangedEvent = 34;
  static const int asyncTypeLocationDataSourceErrorChangedEvent = 35;
  static const int asyncTypeLocationDataSourceHeadingChangedEvent = 36;
  static const int asyncTypeLocationDataSourceLocationChangedEvent = 37;
  static const int asyncTypeLocationDataSourceStartCallbackEvent = 38;
  static const int asyncTypeLocationDataSourceStatusChangedEvent = 39;
  static const int asyncTypeLocationDataSourceStopCallbackEvent = 40;
  static const int asyncTypeLocationDisplayAutoPanModeChangedEvent = 41;
  static const int asyncTypeLocationDisplayLocationChangedEvent = 42;
  static const int asyncTypeLocationDisplayStatusChangedEvent = 43;
  static const int asyncTypeMapViewRotationChangedEvent = 44;
  static const int asyncTypeMapViewScaleChangedEvent = 45;
  static const int
      asyncTypeOfflineMapTaskEnsureOnlineMapHasRequestHandlerEvent = 46;
  static const int asyncTypePortalInfoEvent = 47;
  static const int asyncTypeRequestCancelRequestEvent = 48;
  static const int asyncTypeRequestRequestRequiredEvent = 49;
  static const int asyncTypeFutureCompletedEvent = 50;
  static const int asyncTypeTimeAwareFullTimeExtentChangedEvent = 51;
  static const int asyncTypeMutableArrayElementAddedEvent = 52;
  static const int asyncTypeMutableArrayElementRemovedEvent = 53;
}

abstract class TrackedHandleType {
  static const int TrackedAddRastersParameters = 0;
  static const int TrackedAdvancedQueryCapabilities = 1;
  static const int TrackedAggregateField = 2;
  static const int TrackedAggregateGeoElement = 3;
  static const int TrackedAnalysisOverlay = 4;
  static const int TrackedAnalysis = 5;
  static const int TrackedAnnotationSublayer = 6;
  static const int TrackedArcGISAuthenticationChallenge = 7;
  static const int TrackedArcGISCredentialStore = 8;
  static const int TrackedArcGISCredential = 9;
  static const int TrackedArcGISFeatureLayerInfo = 10;
  static const int TrackedArcGISFeatureServiceInfo = 11;
  static const int TrackedArcGISImageServiceInfo = 12;
  static const int TrackedArcGISMapServiceInfo = 13;
  static const int TrackedArcGISMapServiceSublayerInfo = 14;
  static const int TrackedArcGISStreamServiceFilter = 15;
  static const int TrackedArcGISStreamServiceInfo = 16;
  static const int TrackedArcGISSublayer = 17;
  static const int TrackedArcGISTokenInfo = 18;
  static const int TrackedArcadeConsoleMessageContext = 19;
  static const int TrackedArcadeDateOnly = 20;
  static const int TrackedArcadeDateTime = 21;
  static const int TrackedArcadeEvaluationResult = 22;
  static const int TrackedArcadeEvaluator = 23;
  static const int TrackedArcadeExpression = 24;
  static const int TrackedArcadeMonikerizationArguments = 25;
  static const int TrackedArcadeMonikerizationResult = 26;
  static const int TrackedArcadeResource = 27;
  static const int TrackedArcadeScriptEngine = 28;
  static const int TrackedArcadeScriptMonikerizer = 29;
  static const int TrackedArcadeTimeOnly = 30;
  static const int TrackedArcadeTimezone = 31;
  static const int TrackedArrayBuilder = 32;
  static const int TrackedArray = 33;
  static const int TrackedAttachment = 34;
  static const int TrackedAttachmentsFormInput = 35;
  static const int TrackedAttributeParameterValue = 36;
  static const int TrackedAuthenticationManager = 37;
  static const int TrackedBackgroundGrid = 38;
  static const int TrackedBasemapStyleInfo = 39;
  static const int TrackedBasemapStyleLanguageInfo = 40;
  static const int TrackedBasemapStyleParameters = 41;
  static const int TrackedBasemapStylesServiceInfo = 42;
  static const int TrackedBasemapStylesService = 43;
  static const int TrackedBasemap = 44;
  static const int TrackedBookmark = 45;
  static const int TrackedBuildingAttributeFilterCollection = 46;
  static const int TrackedBuildingAttributeFilter = 47;
  static const int TrackedByteArray = 48;
  static const int TrackedCameraController = 49;
  static const int TrackedCamera = 50;
  static const int TrackedCertificate = 51;
  static const int TrackedChartImageParameters = 52;
  static const int TrackedChartImage = 53;
  static const int TrackedClassBreak = 54;
  static const int TrackedClientReference = 55;
  static const int TrackedClientRequestSender = 56;
  static const int TrackedClientResponse = 57;
  static const int TrackedClientSecurityProviderAdapter = 58;
  static const int TrackedClosestFacilityParameters = 59;
  static const int TrackedClosestFacilityResult = 60;
  static const int TrackedClosestFacilityRoute = 61;
  static const int TrackedClosestFacilityTaskInfo = 62;
  static const int TrackedClosestFacilityTask = 63;
  static const int TrackedCodedValueDescription = 64;
  static const int TrackedCodedValue = 65;
  static const int TrackedColorRamp = 66;
  static const int TrackedColor = 67;
  static const int TrackedColormap = 68;
  static const int TrackedContingencyConstraintViolation = 69;
  static const int TrackedContingency = 70;
  static const int TrackedContingentValue = 71;
  static const int TrackedContingentValuesDefinition = 72;
  static const int TrackedContingentValuesResult = 73;
  static const int TrackedCostAttribute = 74;
  static const int TrackedDataBuffer = 75;
  static const int TrackedDateOnly = 76;
  static const int TrackedDateTime = 77;
  static const int TrackedDatumTransformation = 78;
  static const int TrackedDevice = 79;
  static const int TrackedDictionarySymbolStyleConfiguration = 80;
  static const int TrackedDictionary = 81;
  static const int TrackedDirectionEvent = 82;
  static const int TrackedDirectionManeuver = 83;
  static const int TrackedDirectionMessage = 84;
  static const int TrackedDisplayFilterDefinition = 85;
  static const int TrackedDisplayFilter = 86;
  static const int TrackedDistanceSymbolRange = 87;
  static const int TrackedDistance = 88;
  static const int TrackedDomainDescription = 89;
  static const int TrackedDomain = 90;
  static const int TrackedDownloadPreplannedOfflineMapParameters = 91;
  static const int TrackedDownloadPreplannedOfflineMapResult = 92;
  static const int TrackedDrawingInfo = 93;
  static const int TrackedDynamicEntityChangedInfo = 94;
  static const int TrackedDynamicEntityDataSourceInfo = 95;
  static const int TrackedDynamicEntityDataSourcePurgeOptions = 96;
  static const int TrackedDynamicEntityDataSource = 97;
  static const int TrackedDynamicEntityInfo = 98;
  static const int TrackedDynamicEntityObservationInfo = 99;
  static const int TrackedDynamicEntityObservation = 100;
  static const int TrackedDynamicEntity = 101;
  static const int TrackedENCCell = 102;
  static const int TrackedENCDataset = 103;
  static const int TrackedENCDisplayCategories = 104;
  static const int TrackedENCDisplaySettings = 105;
  static const int TrackedENCEnvironmentSettings = 106;
  static const int TrackedENCExchangeSet = 107;
  static const int TrackedENCFeature = 108;
  static const int TrackedENCGraphicCursor = 109;
  static const int TrackedENCMarinerSettings = 110;
  static const int TrackedENCTextGroupVisibilitySettings = 111;
  static const int TrackedENCViewingGroupSettings = 112;
  static const int TrackedEditFieldsInfo = 113;
  static const int TrackedEditResult = 114;
  static const int TrackedEditorTrackingInfo = 115;
  static const int TrackedElementReference = 116;
  static const int TrackedElement = 117;
  static const int TrackedElevationSourceViewState = 118;
  static const int TrackedElevationSource = 119;
  static const int TrackedError = 120;
  static const int TrackedEstimateTileCacheSizeResult = 121;
  static const int TrackedExpiration = 122;
  static const int TrackedExportTileCacheParameters = 123;
  static const int TrackedExportTileCacheTask = 124;
  static const int TrackedExportVectorTilesParameters = 125;
  static const int TrackedExportVectorTilesResult = 126;
  static const int TrackedExportVectorTilesTask = 127;
  static const int TrackedExpressionQueryResult = 128;
  static const int TrackedExtensionLicense = 129;
  static const int TrackedFacilityLayerDefinition = 130;
  static const int TrackedFacility = 131;
  static const int TrackedFeatureCollection = 132;
  static const int TrackedFeatureFormDefinition = 133;
  static const int TrackedFeatureForm = 134;
  static const int TrackedFeatureQueryResult = 135;
  static const int TrackedFeatureReduction = 136;
  static const int TrackedFeatureServiceCapabilities = 137;
  static const int TrackedFeatureSubtype = 138;
  static const int TrackedFeatureTableEditResult = 139;
  static const int TrackedFeatureTable = 140;
  static const int TrackedFeatureTemplate = 141;
  static const int TrackedFeatureType = 142;
  static const int TrackedFeature = 143;
  static const int TrackedFenceParameters = 144;
  static const int TrackedFieldDescription = 145;
  static const int TrackedFieldGroup = 146;
  static const int TrackedField = 147;
  static const int TrackedFloorFacility = 148;
  static const int TrackedFloorLevel = 149;
  static const int TrackedFloorManager = 150;
  static const int TrackedFloorSite = 151;
  static const int TrackedFormAttachment = 152;
  static const int TrackedFormElementDefinition = 153;
  static const int TrackedFormElement = 154;
  static const int TrackedFormExpressionEvaluationError = 155;
  static const int TrackedFormInput = 156;
  static const int TrackedGEAttributeProcessor = 157;
  static const int TrackedGEAttribute = 158;
  static const int TrackedGEAuthenticationChallenge = 159;
  static const int TrackedGEAuthenticationConfiguration = 160;
  static const int TrackedGEBasemap = 161;
  static const int TrackedGEBuildingSceneLayerAttributeStatistics = 162;
  static const int TrackedGEBuildingSceneSublayerImmutableCollection = 163;
  static const int TrackedGEBuildingSceneSublayer = 164;
  static const int TrackedGEElevationMonitor = 165;
  static const int TrackedGEElevationProvider = 166;
  static const int TrackedGEElevationSourceCollection = 167;
  static const int TrackedGEElevationSourceViewState = 168;
  static const int TrackedGEElevationSource = 169;
  static const int TrackedGEExtent = 170;
  static const int TrackedGEHTTPRequest = 171;
  static const int TrackedGEHTTPResponse = 172;
  static const int TrackedGELayerCollection = 173;
  static const int TrackedGELayerViewState = 174;
  static const int TrackedGELayer = 175;
  static const int TrackedGEMapElevation = 176;
  static const int TrackedGEMap = 177;
  static const int TrackedGEMeshModificationCollection = 178;
  static const int TrackedGEMeshModification = 179;
  static const int TrackedGEOAuthAuthorizationCredential = 180;
  static const int TrackedGESpatialFeatureFilter = 181;
  static const int TrackedGEViewStateMessage = 182;
  static const int TrackedGEViewState = 183;
  static const int TrackedGEView = 184;
  static const int TrackedGEVisualizationAttributeDescription = 185;
  static const int TrackedGEVisualizationAttribute = 186;
  static const int TrackedGUID = 187;
  static const int TrackedGenerateGeodatabaseParameters = 188;
  static const int TrackedGenerateLayerOption = 189;
  static const int TrackedGenerateOfflineMapParameterOverrides = 190;
  static const int TrackedGenerateOfflineMapParameters = 191;
  static const int TrackedGenerateOfflineMapResult = 192;
  static const int TrackedGeoModelFloorDefinition = 193;
  static const int TrackedGeoModel = 194;
  static const int TrackedGeoPackage = 195;
  static const int TrackedGeoViewViewState = 196;
  static const int TrackedGeoView = 197;
  static const int TrackedGeocodeParameters = 198;
  static const int TrackedGeocodeResult = 199;
  static const int TrackedGeodatabaseDeltaInfo = 200;
  static const int TrackedGeodatabaseSyncTask = 201;
  static const int TrackedGeodatabase = 202;
  static const int TrackedGeodesicEllipseParameters = 203;
  static const int TrackedGeodesicSectorParameters = 204;
  static const int TrackedGeodeticDistanceResult = 205;
  static const int TrackedGeographicTransformationStep = 206;
  static const int TrackedGeometricEffect = 207;
  static const int TrackedGeometryBuilder = 208;
  static const int TrackedGeometryEditorElement = 209;
  static const int TrackedGeometryEditorReticle = 210;
  static const int TrackedGeometryEditorStyle = 211;
  static const int TrackedGeometryEditorTool = 212;
  static const int TrackedGeometryEditor = 213;
  static const int TrackedGeometry = 214;
  static const int TrackedGeoprocessingFeatureSet = 215;
  static const int TrackedGeoprocessingParameterInfo = 216;
  static const int TrackedGeoprocessingParameter = 217;
  static const int TrackedGeoprocessingParameters = 218;
  static const int TrackedGeoprocessingResult = 219;
  static const int TrackedGeoprocessingTaskInfo = 220;
  static const int TrackedGeoprocessingTask = 221;
  static const int TrackedGeotriggerFeed = 222;
  static const int TrackedGeotriggerMonitor = 223;
  static const int TrackedGeotriggerNotificationInfo = 224;
  static const int TrackedGeotrigger = 225;
  static const int TrackedGeotriggersInfo = 226;
  static const int TrackedGraphic = 227;
  static const int TrackedGraphicsOverlay = 228;
  static const int TrackedGrid = 229;
  static const int TrackedHorizontalVerticalTransformationStep = 230;
  static const int TrackedIPSInfoMessage = 231;
  static const int TrackedIdInfo = 232;
  static const int TrackedIdentifyGraphicsOverlayResult = 233;
  static const int TrackedIdentifyLayerResult = 234;
  static const int TrackedImageFrame = 235;
  static const int TrackedImageOverlay = 236;
  static const int TrackedImage = 237;
  static const int TrackedImmutablePartCollection = 238;
  static const int TrackedImmutablePart = 239;
  static const int TrackedImmutablePointCollection = 240;
  static const int TrackedIncident = 241;
  static const int TrackedIndoorPositioningDefinition = 242;
  static const int TrackedIndoorPositioningTableInfo = 243;
  static const int TrackedIndoorsLocationDataSourceConfiguration = 244;
  static const int TrackedInsets = 245;
  static const int TrackedInteractionConfiguration = 246;
  static const int TrackedItemResourceCache = 247;
  static const int TrackedItem = 248;
  static const int TrackedIterator = 249;
  static const int TrackedJobMessage = 250;
  static const int TrackedJob = 251;
  static const int TrackedKMLAudioPlayer = 252;
  static const int TrackedKMLColorStyle = 253;
  static const int TrackedKMLDataset = 254;
  static const int TrackedKMLGeometry = 255;
  static const int TrackedKMLIcon = 256;
  static const int TrackedKMLImageCoordinate = 257;
  static const int TrackedKMLNode = 258;
  static const int TrackedKMLNonSchemaData = 259;
  static const int TrackedKMLSchemaData = 260;
  static const int TrackedKMLSchema = 261;
  static const int TrackedKMLSimpleField = 262;
  static const int TrackedKMLStyle = 263;
  static const int TrackedKMLTourController = 264;
  static const int TrackedKMLViewInfo = 265;
  static const int TrackedKMLViewpoint = 266;
  static const int TrackedLabelAngle = 267;
  static const int TrackedLabelDefinition = 268;
  static const int TrackedLabelExpression = 269;
  static const int TrackedLabelStackSeparator = 270;
  static const int TrackedLabelingInfo = 271;
  static const int TrackedLayerFloorDefinition = 272;
  static const int TrackedLayerSceneProperties = 273;
  static const int TrackedLayerTimeInfo = 274;
  static const int TrackedLayerViewState = 275;
  static const int TrackedLayer = 276;
  static const int TrackedLegendInfo = 277;
  static const int TrackedLevelLayerDefinition = 278;
  static const int TrackedLevelOfDetail = 279;
  static const int TrackedLicenseInfo = 280;
  static const int TrackedLicenseResult = 281;
  static const int TrackedLicense = 282;
  static const int TrackedLighting = 283;
  static const int TrackedLoadSettings = 284;
  static const int TrackedLoadableImage = 285;
  static const int TrackedLocalFeatureEdit = 286;
  static const int TrackedLocalFeatureEditsResult = 287;
  static const int TrackedLocationDataSource = 288;
  static const int TrackedLocationDisplay = 289;
  static const int TrackedLocationToScreenResult = 290;
  static const int TrackedLocation = 291;
  static const int TrackedLocatorAttribute = 292;
  static const int TrackedLocatorInfo = 293;
  static const int TrackedLocatorTask = 294;
  static const int TrackedMapServiceCapabilities = 295;
  static const int TrackedMobileMapPackage = 296;
  static const int TrackedMobileScenePackage = 297;
  static const int TrackedMosaicDataset = 298;
  static const int TrackedMosaicRule = 299;
  static const int TrackedMutablePartCollection = 300;
  static const int TrackedMutablePart = 301;
  static const int TrackedMutablePointCollection = 302;
  static const int TrackedNMEASatelliteInfo = 303;
  static const int TrackedNetworkLocation = 304;
  static const int TrackedOAuthApplicationTokenInfo = 305;
  static const int TrackedOAuthUserConfiguration = 306;
  static const int TrackedOAuthUserLoginPrompt = 307;
  static const int TrackedOAuthUserTokenInfo = 308;
  static const int TrackedOGCFeatureCollectionInfo = 309;
  static const int TrackedOGCFeatureServiceInfo = 310;
  static const int TrackedOGCFeatureService = 311;
  static const int TrackedOfflineCapability = 312;
  static const int TrackedOfflineMapCapabilities = 313;
  static const int TrackedOfflineMapItemInfo = 314;
  static const int TrackedOfflineMapParametersKey = 315;
  static const int TrackedOfflineMapSyncLayerResult = 316;
  static const int TrackedOfflineMapSyncParameters = 317;
  static const int TrackedOfflineMapSyncResult = 318;
  static const int TrackedOfflineMapSyncTask = 319;
  static const int TrackedOfflineMapTask = 320;
  static const int TrackedOfflineMapUpdateCapabilities = 321;
  static const int TrackedOfflineMapUpdatesInfo = 322;
  static const int TrackedOfflineSettings = 323;
  static const int TrackedOmniView = 324;
  static const int TrackedOrderBy = 325;
  static const int TrackedOwnershipBasedAccessControlInfo = 326;
  static const int TrackedPlatformHelpersProvider = 327;
  static const int TrackedPointBarrier = 328;
  static const int TrackedPolygonBarrier = 329;
  static const int TrackedPolygonCollection = 330;
  static const int TrackedPolylineBarrier = 331;
  static const int TrackedPopupAttachmentManager = 332;
  static const int TrackedPopupAttachment = 333;
  static const int TrackedPopupDefinition = 334;
  static const int TrackedPopupElement = 335;
  static const int TrackedPopupExpressionEvaluation = 336;
  static const int TrackedPopupExpression = 337;
  static const int TrackedPopupFieldFormat = 338;
  static const int TrackedPopupField = 339;
  static const int TrackedPopupMediaValue = 340;
  static const int TrackedPopupMedia = 341;
  static const int TrackedPopupRelatedFeaturesDefinition = 342;
  static const int TrackedPopupRelatedFeaturesSortOrder = 343;
  static const int TrackedPopup = 344;
  static const int TrackedPortalInfo = 345;
  static const int TrackedPortalNetworkSecuredInquiry = 346;
  static const int TrackedPortal = 347;
  static const int TrackedPreplannedMapArea = 348;
  static const int TrackedProximityResult = 349;
  static const int TrackedPublicKey = 350;
  static const int TrackedQueryFormats = 351;
  static const int TrackedQueryParameters = 352;
  static const int TrackedRasterCell = 353;
  static const int TrackedRasterFunctionArguments = 354;
  static const int TrackedRasterFunction = 355;
  static const int TrackedRasterRenderer = 356;
  static const int TrackedRaster = 357;
  static const int TrackedRelatedFeatureQueryResult = 358;
  static const int TrackedRelatedQueryParameters = 359;
  static const int TrackedRelationshipInfo = 360;
  static const int TrackedRenderCommandServer = 361;
  static const int TrackedRendererSceneProperties = 362;
  static const int TrackedRenderer = 363;
  static const int TrackedRenderingRuleInfo = 364;
  static const int TrackedRenderingRule = 365;
  static const int TrackedRequestAttachment = 366;
  static const int TrackedRequest = 367;
  static const int TrackedReroutingParameters = 368;
  static const int TrackedResourceProvider = 369;
  static const int TrackedRestrictionAttribute = 370;
  static const int TrackedReticleInteractionConfiguration = 371;
  static const int TrackedReverseGeocodeParameters = 372;
  static const int TrackedRouteParameters = 373;
  static const int TrackedRouteResult = 374;
  static const int TrackedRouteTaskInfo = 375;
  static const int TrackedRouteTask = 376;
  static const int TrackedRouteTrackerLogger = 377;
  static const int TrackedRouteTracker = 378;
  static const int TrackedRoute = 379;
  static const int TrackedS57FeatureMetadata = 380;
  static const int TrackedSceneEnvironment = 381;
  static const int TrackedSceneLayerPolygonFilter = 382;
  static const int TrackedSecurityProvider = 383;
  static const int TrackedSegment = 384;
  static const int TrackedSelectionProperties = 385;
  static const int TrackedServiceAreaFacility = 386;
  static const int TrackedServiceAreaParameters = 387;
  static const int TrackedServiceAreaPolygon = 388;
  static const int TrackedServiceAreaPolyline = 389;
  static const int TrackedServiceAreaResult = 390;
  static const int TrackedServiceAreaTaskInfo = 391;
  static const int TrackedServiceAreaTask = 392;
  static const int TrackedServiceDocumentInfo = 393;
  static const int TrackedServiceGeodatabase = 394;
  static const int TrackedServiceTimeInfo = 395;
  static const int TrackedServiceVersionInfo = 396;
  static const int TrackedServiceVersionParameters = 397;
  static const int TrackedShapefileInfo = 398;
  static const int TrackedSimulationParameters = 399;
  static const int TrackedSiteLayerDefinition = 400;
  static const int TrackedSnapSettings = 401;
  static const int TrackedSnapSourceSettings = 402;
  static const int TrackedSolidBuildingFilterDefinition = 403;
  static const int TrackedSourceObjectPosition = 404;
  static const int TrackedSpatialReference = 405;
  static const int TrackedStatisticDefinition = 406;
  static const int TrackedStatisticRecord = 407;
  static const int TrackedStatisticsQueryParameters = 408;
  static const int TrackedStatisticsQueryResult = 409;
  static const int TrackedStop = 410;
  static const int TrackedStretchParameters = 411;
  static const int TrackedStringImmutableCollection = 412;
  static const int TrackedString = 413;
  static const int TrackedSublayerSource = 414;
  static const int TrackedSuggestParameters = 415;
  static const int TrackedSuggestResult = 416;
  static const int TrackedSurface = 417;
  static const int TrackedSymbolAnchor = 418;
  static const int TrackedSymbolLayerEdges3D = 419;
  static const int TrackedSymbolLayer = 420;
  static const int TrackedSymbolReferenceProperties = 421;
  static const int TrackedSymbolStyleSearchParameters = 422;
  static const int TrackedSymbolStyleSearchResult = 423;
  static const int TrackedSymbolStyle = 424;
  static const int TrackedSymbol = 425;
  static const int TrackedSyncCapabilities = 426;
  static const int TrackedSyncGeodatabaseParameters = 427;
  static const int TrackedSyncLayerOption = 428;
  static const int TrackedSyncLayerResult = 429;
  static const int TrackedTableDescription = 430;
  static const int TrackedTask = 431;
  static const int TrackedTileCache = 432;
  static const int TrackedTileInfo = 433;
  static const int TrackedTileKey = 434;
  static const int TrackedTimeExtent = 435;
  static const int TrackedTimeOnly = 436;
  static const int TrackedTimeOptions = 437;
  static const int TrackedTimeReference = 438;
  static const int TrackedTimeValue = 439;
  static const int TrackedTimeZoneOffset = 440;
  static const int TrackedTimestampOffset = 441;
  static const int TrackedTokenInfo = 442;
  static const int TrackedTrackDisplayProperties = 443;
  static const int TrackedTrackingDistance = 444;
  static const int TrackedTrackingProgress = 445;
  static const int TrackedTrackingStatus = 446;
  static const int TrackedTransformationMatrix = 447;
  static const int TrackedTransportationNetworkDataset = 448;
  static const int TrackedTravelMode = 449;
  static const int TrackedTraversalResult = 450;
  static const int TrackedUniqueValue = 451;
  static const int TrackedUnit = 452;
  static const int TrackedUtilityAssetGroup = 453;
  static const int TrackedUtilityAssetType = 454;
  static const int TrackedUtilityAssociation = 455;
  static const int TrackedUtilityCategory = 456;
  static const int TrackedUtilityDomainNetwork = 457;
  static const int TrackedUtilityElement = 458;
  static const int TrackedUtilityNamedTraceConfigurationQueryParameters = 459;
  static const int TrackedUtilityNamedTraceConfiguration = 460;
  static const int TrackedUtilityNearestNeighbor = 461;
  static const int TrackedUtilityNetworkAttribute = 462;
  static const int TrackedUtilityNetworkCapabilities = 463;
  static const int TrackedUtilityNetworkDefinition = 464;
  static const int TrackedUtilityNetworkSource = 465;
  static const int TrackedUtilityNetworkState = 466;
  static const int TrackedUtilityNetwork = 467;
  static const int TrackedUtilityPropagator = 468;
  static const int TrackedUtilityRuleElement = 469;
  static const int TrackedUtilityRule = 470;
  static const int TrackedUtilityTerminalConfigurationPath = 471;
  static const int TrackedUtilityTerminalConfiguration = 472;
  static const int TrackedUtilityTerminalPath = 473;
  static const int TrackedUtilityTerminal = 474;
  static const int TrackedUtilityTierGroup = 475;
  static const int TrackedUtilityTier = 476;
  static const int TrackedUtilityTraceCondition = 477;
  static const int TrackedUtilityTraceConfiguration = 478;
  static const int TrackedUtilityTraceFilter = 479;
  static const int TrackedUtilityTraceFunctionBarrier = 480;
  static const int TrackedUtilityTraceFunctionOutput = 481;
  static const int TrackedUtilityTraceFunction = 482;
  static const int TrackedUtilityTraceParameters = 483;
  static const int TrackedUtilityTraceResult = 484;
  static const int TrackedUtilityTraversability = 485;
  static const int TrackedUtilityValidationResult = 486;
  static const int TrackedVectorMarkerSymbolElement = 487;
  static const int TrackedVectorTileCache = 488;
  static const int TrackedVectorTileSourceInfoImmutableCollection = 489;
  static const int TrackedVectorTileSourceInfo = 490;
  static const int TrackedVectorTileStyle = 491;
  static const int TrackedVector = 492;
  static const int TrackedViewLabelProperties = 493;
  static const int TrackedViewpoint = 494;
  static const int TrackedVoiceGuidance = 495;
  static const int TrackedWFSLayerInfo = 496;
  static const int TrackedWFSServiceInfo = 497;
  static const int TrackedWFSService = 498;
  static const int TrackedWMSFeature = 499;
  static const int TrackedWMSLayerInfo = 500;
  static const int TrackedWMSServiceInfo = 501;
  static const int TrackedWMSService = 502;
  static const int TrackedWMSSublayer = 503;
  static const int TrackedWMTSLayerInfo = 504;
  static const int TrackedWMTSServiceInfo = 505;
  static const int TrackedWMTSService = 506;
  static const int TrackedWMTSTileMatrixSet = 507;
  static const int TrackedWMTSTileMatrix = 508;
  static const int TrackedWebSocketConnection = 509;
  static const int TrackedWifiReading = 510;
  static const int TrackedWorldview = 511;
  static const int Trackedint64ImmutableCollection = 512;
  static const int NumTrackedHandleTypes = 513;
}

typedef RT_AddRastersParametersHandle
    = ffi.Pointer<RT_AddRastersParametersInternal>;

final class RT_AddRastersParametersInternal extends ffi.Opaque {}

typedef RT_ArcGISImageServiceInfoHandle
    = ffi.Pointer<imp1.RT_ArcGISImageServiceInfoInternal>;
typedef RT_ArcGISStreamServiceFilterHandle
    = ffi.Pointer<RT_ArcGISStreamServiceFilterInternal>;

final class RT_ArcGISStreamServiceFilterInternal extends ffi.Opaque {}

typedef RT_ArcGISStreamServiceInfoHandle
    = ffi.Pointer<RT_ArcGISStreamServiceInfoInternal>;

final class RT_ArcGISStreamServiceInfoInternal extends ffi.Opaque {}

typedef RT_ArcadeEvaluatorHandle = ffi.Pointer<RT_ArcadeEvaluatorInternal>;

final class RT_ArcadeEvaluatorInternal extends ffi.Opaque {}

typedef RT_ArcadeMonikerizationArgumentsHandle
    = ffi.Pointer<RT_ArcadeMonikerizationArgumentsInternal>;

final class RT_ArcadeMonikerizationArgumentsInternal extends ffi.Opaque {}

typedef RT_ArcadeMonikerizationResultHandle
    = ffi.Pointer<RT_ArcadeMonikerizationResultInternal>;

final class RT_ArcadeMonikerizationResultInternal extends ffi.Opaque {}

typedef RT_ArcadeScriptEngineHandle
    = ffi.Pointer<RT_ArcadeScriptEngineInternal>;

final class RT_ArcadeScriptEngineInternal extends ffi.Opaque {}

typedef RT_ArcadeScriptMonikerizerHandle
    = ffi.Pointer<RT_ArcadeScriptMonikerizerInternal>;

final class RT_ArcadeScriptMonikerizerInternal extends ffi.Opaque {}

typedef RT_ArcadeTimezoneHandle = ffi.Pointer<RT_ArcadeTimezoneInternal>;

final class RT_ArcadeTimezoneInternal extends ffi.Opaque {}

typedef RT_AttachmentsFormInputHandle
    = ffi.Pointer<RT_AttachmentsFormInputInternal>;

final class RT_AttachmentsFormInputInternal extends ffi.Opaque {}

typedef RT_BuildingAttributeFilterCollectionHandle
    = ffi.Pointer<RT_BuildingAttributeFilterCollectionInternal>;

final class RT_BuildingAttributeFilterCollectionInternal extends ffi.Opaque {}

typedef RT_CertificateHandle = ffi.Pointer<RT_CertificateInternal>;

final class RT_CertificateInternal extends ffi.Opaque {}

typedef RT_ClientSecurityProviderAdapterHandle
    = ffi.Pointer<RT_ClientSecurityProviderAdapterInternal>;

final class RT_ClientSecurityProviderAdapterInternal extends ffi.Opaque {}

typedef RT_ColorRampHandle = ffi.Pointer<RT_ColorRampInternal>;

final class RT_ColorRampInternal extends ffi.Opaque {}

typedef RT_ColormapHandle = ffi.Pointer<RT_ColormapInternal>;

final class RT_ColormapInternal extends ffi.Opaque {}

typedef RT_DataBufferHandle = ffi.Pointer<RT_DataBufferInternal>;

final class RT_DataBufferInternal extends ffi.Opaque {}

typedef RT_DynamicEntityChangedInfoHandle
    = ffi.Pointer<RT_DynamicEntityChangedInfoInternal>;

final class RT_DynamicEntityChangedInfoInternal extends ffi.Opaque {}

typedef RT_DynamicEntityDataSourceInfoHandle
    = ffi.Pointer<RT_DynamicEntityDataSourceInfoInternal>;

final class RT_DynamicEntityDataSourceInfoInternal extends ffi.Opaque {}

typedef RT_DynamicEntityDataSourcePurgeOptionsHandle
    = ffi.Pointer<RT_DynamicEntityDataSourcePurgeOptionsInternal>;

final class RT_DynamicEntityDataSourcePurgeOptionsInternal extends ffi.Opaque {}

typedef RT_DynamicEntityInfoHandle = ffi.Pointer<RT_DynamicEntityInfoInternal>;

final class RT_DynamicEntityInfoInternal extends ffi.Opaque {}

typedef RT_DynamicEntityObservationInfoHandle
    = ffi.Pointer<RT_DynamicEntityObservationInfoInternal>;

final class RT_DynamicEntityObservationInfoInternal extends ffi.Opaque {}

typedef RT_ENCDisplayCategoriesHandle
    = ffi.Pointer<RT_ENCDisplayCategoriesInternal>;

final class RT_ENCDisplayCategoriesInternal extends ffi.Opaque {}

typedef RT_ENCDisplaySettingsHandle
    = ffi.Pointer<RT_ENCDisplaySettingsInternal>;

final class RT_ENCDisplaySettingsInternal extends ffi.Opaque {}

typedef RT_ENCExchangeSetHandle = ffi.Pointer<RT_ENCExchangeSetInternal>;

final class RT_ENCExchangeSetInternal extends ffi.Opaque {}

typedef RT_ENCGraphicCursorHandle = ffi.Pointer<RT_ENCGraphicCursorInternal>;

final class RT_ENCGraphicCursorInternal extends ffi.Opaque {}

typedef RT_ENCMarinerSettingsHandle
    = ffi.Pointer<RT_ENCMarinerSettingsInternal>;

final class RT_ENCMarinerSettingsInternal extends ffi.Opaque {}

typedef RT_ENCTextGroupVisibilitySettingsHandle
    = ffi.Pointer<RT_ENCTextGroupVisibilitySettingsInternal>;

final class RT_ENCTextGroupVisibilitySettingsInternal extends ffi.Opaque {}

typedef RT_ENCViewingGroupSettingsHandle
    = ffi.Pointer<RT_ENCViewingGroupSettingsInternal>;

final class RT_ENCViewingGroupSettingsInternal extends ffi.Opaque {}

typedef RT_ExpressionQueryResultHandle
    = ffi.Pointer<RT_ExpressionQueryResultInternal>;

final class RT_ExpressionQueryResultInternal extends ffi.Opaque {}

typedef RT_FacilityLayerDefinitionHandle
    = ffi.Pointer<RT_FacilityLayerDefinitionInternal>;

final class RT_FacilityLayerDefinitionInternal extends ffi.Opaque {}

typedef RT_FeatureFormHandle = ffi.Pointer<RT_FeatureFormInternal>;

final class RT_FeatureFormInternal extends ffi.Opaque {}

typedef RT_FenceParametersHandle = ffi.Pointer<RT_FenceParametersInternal>;

final class RT_FenceParametersInternal extends ffi.Opaque {}

typedef RT_FormInputHandle = ffi.Pointer<RT_FormInputInternal>;

final class RT_FormInputInternal extends ffi.Opaque {}

typedef RT_GEAttributeProcessorHandle
    = ffi.Pointer<RT_GEAttributeProcessorInternal>;

final class RT_GEAttributeProcessorInternal extends ffi.Opaque {}

typedef RT_GEAuthenticationChallengeHandle
    = ffi.Pointer<RT_GEAuthenticationChallengeInternal>;

final class RT_GEAuthenticationChallengeInternal extends ffi.Opaque {}

typedef RT_GEBasemapHandle = ffi.Pointer<RT_GEBasemapInternal>;

final class RT_GEBasemapInternal extends ffi.Opaque {}

typedef RT_GEBuildingSceneSublayerImmutableCollectionHandle
    = ffi.Pointer<RT_GEBuildingSceneSublayerImmutableCollectionInternal>;

final class RT_GEBuildingSceneSublayerImmutableCollectionInternal
    extends ffi.Opaque {}

typedef RT_GEBuildingSceneSublayerHandle
    = ffi.Pointer<RT_GEBuildingSceneSublayerInternal>;

final class RT_GEBuildingSceneSublayerInternal extends ffi.Opaque {}

typedef RT_GEElevationMonitorHandle
    = ffi.Pointer<RT_GEElevationMonitorInternal>;

final class RT_GEElevationMonitorInternal extends ffi.Opaque {}

typedef RT_GEElevationProviderHandle
    = ffi.Pointer<RT_GEElevationProviderInternal>;

final class RT_GEElevationProviderInternal extends ffi.Opaque {}

typedef RT_GEElevationSourceCollectionHandle
    = ffi.Pointer<RT_GEElevationSourceCollectionInternal>;

final class RT_GEElevationSourceCollectionInternal extends ffi.Opaque {}

typedef RT_GEElevationSourceViewStateHandle
    = ffi.Pointer<RT_GEElevationSourceViewStateInternal>;

final class RT_GEElevationSourceViewStateInternal extends ffi.Opaque {}

typedef RT_GEElevationSourceHandle = ffi.Pointer<RT_GEElevationSourceInternal>;

final class RT_GEElevationSourceInternal extends ffi.Opaque {}

typedef RT_GEExtentHandle = ffi.Pointer<RT_GEExtentInternal>;

final class RT_GEExtentInternal extends ffi.Opaque {}

typedef RT_GEHTTPRequestHandle = ffi.Pointer<RT_GEHTTPRequestInternal>;

final class RT_GEHTTPRequestInternal extends ffi.Opaque {}

typedef RT_GEHTTPResponseHandle = ffi.Pointer<RT_GEHTTPResponseInternal>;

final class RT_GEHTTPResponseInternal extends ffi.Opaque {}

typedef RT_GELayerCollectionHandle = ffi.Pointer<RT_GELayerCollectionInternal>;

final class RT_GELayerCollectionInternal extends ffi.Opaque {}

typedef RT_GELayerViewStateHandle = ffi.Pointer<RT_GELayerViewStateInternal>;

final class RT_GELayerViewStateInternal extends ffi.Opaque {}

typedef RT_GELayerHandle = ffi.Pointer<RT_GELayerInternal>;

final class RT_GELayerInternal extends ffi.Opaque {}

typedef RT_GEMapElevationHandle = ffi.Pointer<RT_GEMapElevationInternal>;

final class RT_GEMapElevationInternal extends ffi.Opaque {}

typedef RT_GEMapHandle = ffi.Pointer<RT_GEMapInternal>;

final class RT_GEMapInternal extends ffi.Opaque {}

typedef RT_GEMeshModificationCollectionHandle
    = ffi.Pointer<RT_GEMeshModificationCollectionInternal>;

final class RT_GEMeshModificationCollectionInternal extends ffi.Opaque {}

typedef RT_GEMeshModificationHandle
    = ffi.Pointer<RT_GEMeshModificationInternal>;

final class RT_GEMeshModificationInternal extends ffi.Opaque {}

typedef RT_GEOAuthAuthorizationCredentialHandle
    = ffi.Pointer<RT_GEOAuthAuthorizationCredentialInternal>;

final class RT_GEOAuthAuthorizationCredentialInternal extends ffi.Opaque {}

typedef RT_GESpatialFeatureFilterHandle
    = ffi.Pointer<RT_GESpatialFeatureFilterInternal>;

final class RT_GESpatialFeatureFilterInternal extends ffi.Opaque {}

typedef RT_GEViewStateMessageHandle
    = ffi.Pointer<RT_GEViewStateMessageInternal>;

final class RT_GEViewStateMessageInternal extends ffi.Opaque {}

typedef RT_GEViewStateHandle = ffi.Pointer<RT_GEViewStateInternal>;

final class RT_GEViewStateInternal extends ffi.Opaque {}

typedef RT_GEViewHandle = ffi.Pointer<RT_GEViewInternal>;

final class RT_GEViewInternal extends ffi.Opaque {}

typedef RT_GeometryEditorElementHandle
    = ffi.Pointer<RT_GeometryEditorElementInternal>;

final class RT_GeometryEditorElementInternal extends ffi.Opaque {}

typedef RT_GeometryEditorReticleHandle
    = ffi.Pointer<RT_GeometryEditorReticleInternal>;

final class RT_GeometryEditorReticleInternal extends ffi.Opaque {}

typedef RT_GeometryEditorStyleHandle
    = ffi.Pointer<RT_GeometryEditorStyleInternal>;

final class RT_GeometryEditorStyleInternal extends ffi.Opaque {}

typedef RT_GeometryEditorToolHandle
    = ffi.Pointer<RT_GeometryEditorToolInternal>;

final class RT_GeometryEditorToolInternal extends ffi.Opaque {}

typedef RT_GeoprocessingResultHandle
    = ffi.Pointer<RT_GeoprocessingResultInternal>;

final class RT_GeoprocessingResultInternal extends ffi.Opaque {}

typedef RT_GeoprocessingTaskInfoHandle
    = ffi.Pointer<RT_GeoprocessingTaskInfoInternal>;

final class RT_GeoprocessingTaskInfoInternal extends ffi.Opaque {}

typedef RT_GeoprocessingTaskHandle = ffi.Pointer<RT_GeoprocessingTaskInternal>;

final class RT_GeoprocessingTaskInternal extends ffi.Opaque {}

typedef RT_GeotriggerFeedHandle = ffi.Pointer<RT_GeotriggerFeedInternal>;

final class RT_GeotriggerFeedInternal extends ffi.Opaque {}

typedef RT_GeotriggerMonitorHandle = ffi.Pointer<RT_GeotriggerMonitorInternal>;

final class RT_GeotriggerMonitorInternal extends ffi.Opaque {}

typedef RT_GeotriggerNotificationInfoHandle
    = ffi.Pointer<RT_GeotriggerNotificationInfoInternal>;

final class RT_GeotriggerNotificationInfoInternal extends ffi.Opaque {}

typedef RT_IPSInfoMessageHandle = ffi.Pointer<RT_IPSInfoMessageInternal>;

final class RT_IPSInfoMessageInternal extends ffi.Opaque {}

typedef RT_IndoorPositioningTableInfoHandle
    = ffi.Pointer<RT_IndoorPositioningTableInfoInternal>;

final class RT_IndoorPositioningTableInfoInternal extends ffi.Opaque {}

typedef RT_IndoorsLocationDataSourceConfigurationHandle
    = ffi.Pointer<RT_IndoorsLocationDataSourceConfigurationInternal>;

final class RT_IndoorsLocationDataSourceConfigurationInternal
    extends ffi.Opaque {}

typedef RT_InteractionConfigurationHandle
    = ffi.Pointer<RT_InteractionConfigurationInternal>;

final class RT_InteractionConfigurationInternal extends ffi.Opaque {}

typedef RT_KMLAudioPlayerHandle = ffi.Pointer<imp1.RT_KMLAudioPlayerInternal>;
typedef RT_KMLColorStyleHandle = ffi.Pointer<imp1.RT_KMLColorStyleInternal>;
typedef RT_KMLIconHandle = ffi.Pointer<imp1.RT_KMLIconInternal>;
typedef RT_KMLImageCoordinateHandle
    = ffi.Pointer<imp1.RT_KMLImageCoordinateInternal>;
typedef RT_KMLNonSchemaDataHandle
    = ffi.Pointer<imp1.RT_KMLNonSchemaDataInternal>;
typedef RT_KMLStyleHandle = ffi.Pointer<imp1.RT_KMLStyleInternal>;
typedef RT_KMLTourControllerHandle
    = ffi.Pointer<imp1.RT_KMLTourControllerInternal>;
typedef RT_KMLViewInfoHandle = ffi.Pointer<imp1.RT_KMLViewInfoInternal>;
typedef RT_KMLViewpointHandle = ffi.Pointer<imp1.RT_KMLViewpointInternal>;
typedef RT_LabelAngleHandle = ffi.Pointer<RT_LabelAngleInternal>;

final class RT_LabelAngleInternal extends ffi.Opaque {}

typedef RT_LabelExpressionHandle = ffi.Pointer<RT_LabelExpressionInternal>;

final class RT_LabelExpressionInternal extends ffi.Opaque {}

typedef RT_LevelLayerDefinitionHandle
    = ffi.Pointer<RT_LevelLayerDefinitionInternal>;

final class RT_LevelLayerDefinitionInternal extends ffi.Opaque {}

typedef RT_MosaicDatasetHandle = ffi.Pointer<RT_MosaicDatasetInternal>;

final class RT_MosaicDatasetInternal extends ffi.Opaque {}

typedef RT_MosaicRuleHandle = ffi.Pointer<RT_MosaicRuleInternal>;

final class RT_MosaicRuleInternal extends ffi.Opaque {}

typedef RT_OGCFeatureServiceInfoHandle
    = ffi.Pointer<imp1.RT_OGCFeatureServiceInfoInternal>;
typedef RT_OGCFeatureServiceHandle
    = ffi.Pointer<imp1.RT_OGCFeatureServiceInternal>;
typedef RT_PolygonCollectionHandle = ffi.Pointer<RT_PolygonCollectionInternal>;

final class RT_PolygonCollectionInternal extends ffi.Opaque {}

typedef RT_PopupAttachmentManagerHandle
    = ffi.Pointer<RT_PopupAttachmentManagerInternal>;

final class RT_PopupAttachmentManagerInternal extends ffi.Opaque {}

typedef RT_PopupFieldFormatHandle = ffi.Pointer<RT_PopupFieldFormatInternal>;

final class RT_PopupFieldFormatInternal extends ffi.Opaque {}

typedef RT_PopupMediaValueHandle = ffi.Pointer<RT_PopupMediaValueInternal>;

final class RT_PopupMediaValueInternal extends ffi.Opaque {}

typedef RT_PopupRelatedFeaturesDefinitionHandle
    = ffi.Pointer<RT_PopupRelatedFeaturesDefinitionInternal>;

final class RT_PopupRelatedFeaturesDefinitionInternal extends ffi.Opaque {}

typedef RT_PublicKeyHandle = ffi.Pointer<RT_PublicKeyInternal>;

final class RT_PublicKeyInternal extends ffi.Opaque {}

typedef RT_QueryFormatsHandle = ffi.Pointer<imp1.RT_QueryFormatsInternal>;
typedef RT_RasterFunctionArgumentsHandle
    = ffi.Pointer<RT_RasterFunctionArgumentsInternal>;

final class RT_RasterFunctionArgumentsInternal extends ffi.Opaque {}

typedef RT_RasterFunctionHandle = ffi.Pointer<RT_RasterFunctionInternal>;

final class RT_RasterFunctionInternal extends ffi.Opaque {}

typedef RT_RenderCommandServerHandle
    = ffi.Pointer<RT_RenderCommandServerInternal>;

final class RT_RenderCommandServerInternal extends ffi.Opaque {}

typedef RT_RenderingRuleHandle = ffi.Pointer<RT_RenderingRuleInternal>;

final class RT_RenderingRuleInternal extends ffi.Opaque {}

typedef RT_ReroutingParametersHandle
    = ffi.Pointer<RT_ReroutingParametersInternal>;

final class RT_ReroutingParametersInternal extends ffi.Opaque {}

typedef RT_ReticleInteractionConfigurationHandle
    = ffi.Pointer<RT_ReticleInteractionConfigurationInternal>;

final class RT_ReticleInteractionConfigurationInternal extends ffi.Opaque {}

typedef RT_RouteTrackerLoggerHandle
    = ffi.Pointer<RT_RouteTrackerLoggerInternal>;

final class RT_RouteTrackerLoggerInternal extends ffi.Opaque {}

typedef RT_ServiceVersionParametersHandle
    = ffi.Pointer<imp1.RT_ServiceVersionParametersInternal>;
typedef RT_ShapefileInfoHandle = ffi.Pointer<RT_ShapefileInfoInternal>;

final class RT_ShapefileInfoInternal extends ffi.Opaque {}

typedef RT_SiteLayerDefinitionHandle
    = ffi.Pointer<RT_SiteLayerDefinitionInternal>;

final class RT_SiteLayerDefinitionInternal extends ffi.Opaque {}

typedef RT_SnapSettingsHandle = ffi.Pointer<RT_SnapSettingsInternal>;

final class RT_SnapSettingsInternal extends ffi.Opaque {}

typedef RT_StretchParametersHandle = ffi.Pointer<RT_StretchParametersInternal>;

final class RT_StretchParametersInternal extends ffi.Opaque {}

typedef RT_StringImmutableCollectionHandle
    = ffi.Pointer<RT_StringImmutableCollectionInternal>;

final class RT_StringImmutableCollectionInternal extends ffi.Opaque {}

typedef RT_SurfaceHandle = ffi.Pointer<RT_SurfaceInternal>;

final class RT_SurfaceInternal extends ffi.Opaque {}

typedef RT_TimeOptionsHandle = ffi.Pointer<imp1.RT_TimeOptionsInternal>;
typedef RT_TrackingDistanceHandle = ffi.Pointer<RT_TrackingDistanceInternal>;

final class RT_TrackingDistanceInternal extends ffi.Opaque {}

typedef RT_TrackingProgressHandle = ffi.Pointer<RT_TrackingProgressInternal>;

final class RT_TrackingProgressInternal extends ffi.Opaque {}

typedef RT_UtilityNamedTraceConfigurationQueryParametersHandle
    = ffi.Pointer<RT_UtilityNamedTraceConfigurationQueryParametersInternal>;

final class RT_UtilityNamedTraceConfigurationQueryParametersInternal
    extends ffi.Opaque {}

typedef RT_UtilityNearestNeighborHandle
    = ffi.Pointer<RT_UtilityNearestNeighborInternal>;

final class RT_UtilityNearestNeighborInternal extends ffi.Opaque {}

typedef RT_UtilityNetworkCapabilitiesHandle
    = ffi.Pointer<RT_UtilityNetworkCapabilitiesInternal>;

final class RT_UtilityNetworkCapabilitiesInternal extends ffi.Opaque {}

typedef RT_UtilityNetworkDefinitionHandle
    = ffi.Pointer<RT_UtilityNetworkDefinitionInternal>;

final class RT_UtilityNetworkDefinitionInternal extends ffi.Opaque {}

typedef RT_UtilityRuleElementHandle
    = ffi.Pointer<RT_UtilityRuleElementInternal>;

final class RT_UtilityRuleElementInternal extends ffi.Opaque {}

typedef RT_UtilityTraceConditionHandle
    = ffi.Pointer<RT_UtilityTraceConditionInternal>;

final class RT_UtilityTraceConditionInternal extends ffi.Opaque {}

typedef RT_UtilityTraceConfigurationHandle
    = ffi.Pointer<RT_UtilityTraceConfigurationInternal>;

final class RT_UtilityTraceConfigurationInternal extends ffi.Opaque {}

typedef RT_UtilityTraceFilterHandle
    = ffi.Pointer<RT_UtilityTraceFilterInternal>;

final class RT_UtilityTraceFilterInternal extends ffi.Opaque {}

typedef RT_UtilityTraceParametersHandle
    = ffi.Pointer<RT_UtilityTraceParametersInternal>;

final class RT_UtilityTraceParametersInternal extends ffi.Opaque {}

typedef RT_UtilityTraversabilityHandle
    = ffi.Pointer<RT_UtilityTraversabilityInternal>;

final class RT_UtilityTraversabilityInternal extends ffi.Opaque {}

typedef RT_UtilityValidationResultHandle
    = ffi.Pointer<RT_UtilityValidationResultInternal>;

final class RT_UtilityValidationResultInternal extends ffi.Opaque {}

typedef RT_VectorTileSourceInfoImmutableCollectionHandle
    = ffi.Pointer<RT_VectorTileSourceInfoImmutableCollectionInternal>;

final class RT_VectorTileSourceInfoImmutableCollectionInternal
    extends ffi.Opaque {}

typedef RT_VoiceGuidanceHandle = ffi.Pointer<RT_VoiceGuidanceInternal>;

final class RT_VoiceGuidanceInternal extends ffi.Opaque {}

typedef RT_WFSServiceInfoHandle = ffi.Pointer<imp1.RT_WFSServiceInfoInternal>;
typedef RT_WFSServiceHandle = ffi.Pointer<imp1.RT_WFSServiceInternal>;
typedef RT_WMSServiceInfoHandle = ffi.Pointer<imp1.RT_WMSServiceInfoInternal>;
typedef RT_WMSServiceHandle = ffi.Pointer<imp1.RT_WMSServiceInternal>;
typedef RT_WMTSServiceInfoHandle = ffi.Pointer<imp1.RT_WMTSServiceInfoInternal>;
typedef RT_WMTSServiceHandle = ffi.Pointer<imp1.RT_WMTSServiceInternal>;
typedef RT_int64ImmutableCollectionHandle
    = ffi.Pointer<RT_int64ImmutableCollectionInternal>;

final class RT_int64ImmutableCollectionInternal extends ffi.Opaque {}

abstract class SyncType {
  static const int syncTypePing = 0;
  static const int syncTypePlatformHelpersProvider_applicationLocale = 1;
  static const int syncTypePlatformHelpersProvider_convertNumber = 2;
  static const int syncTypePlatformHelpersProvider_convertDateTime = 3;
  static const int syncTypeResourceProvider_getResourceString = 4;
}

abstract class RT_DateTimeFormat {
  static const int RT_DateTimeFormat_dayShortMonthYear = 0;
  static const int RT_DateTimeFormat_longDate = 1;
  static const int RT_DateTimeFormat_longMonthDayYear = 2;
  static const int RT_DateTimeFormat_longMonthYear = 3;
  static const int RT_DateTimeFormat_shortDate = 4;
  static const int RT_DateTimeFormat_shortDateLE = 5;
  static const int RT_DateTimeFormat_shortDateLELongTime = 6;
  static const int RT_DateTimeFormat_shortDateLELongTime24 = 7;
  static const int RT_DateTimeFormat_shortDateLEShortTime = 8;
  static const int RT_DateTimeFormat_shortDateLEShortTime24 = 9;
  static const int RT_DateTimeFormat_shortDateLongTime = 10;
  static const int RT_DateTimeFormat_shortDateLongTime24 = 11;
  static const int RT_DateTimeFormat_shortDateShortTime = 12;
  static const int RT_DateTimeFormat_shortDateShortTime24 = 13;
  static const int RT_DateTimeFormat_shortMonthYear = 14;
  static const int RT_DateTimeFormat_year = 15;
  static const int RT_DateTimeFormat_longTime = 16;
  static const int RT_DateTimeFormat_shortTime = 17;
  static const int RT_DateTimeFormat_dayShortMonthYearLongTime = 18;
  static const int RT_DateTimeFormat_dayShortMonthYearLongTime24 = 19;
  static const int RT_DateTimeFormat_dayShortMonthYearShortTime = 20;
  static const int RT_DateTimeFormat_dayShortMonthYearShortTime24 = 21;
  static const int RT_DateTimeFormat_longDateLongTime = 22;
  static const int RT_DateTimeFormat_longDateLongTime24 = 23;
  static const int RT_DateTimeFormat_longDateShortTime = 24;
  static const int RT_DateTimeFormat_longDateShortTime24 = 25;
  static const int RT_DateTimeFormat_longMonthDayYearLongTime = 26;
  static const int RT_DateTimeFormat_longMonthDayYearLongTime24 = 27;
  static const int RT_DateTimeFormat_longMonthDayYearShortTime = 28;
  static const int RT_DateTimeFormat_longMonthDayYearShortTime24 = 29;
}
